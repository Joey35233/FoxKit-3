//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using CsSystem = System;
using Fox;

namespace Tpp.GameKit
{
	[UnityEditor.InitializeOnLoad, UnityEngine.AddComponentMenu("TppGameKit/CyprusBlockControllerData")]
	public partial class CyprusBlockControllerData : Fox.Core.Data
	{
		// Properties
		[field: UnityEngine.SerializeField]
		public bool enable { get; set; }
		
		[field: UnityEngine.SerializeField]
		public string stageName { get; set; }
		
		[field: UnityEngine.SerializeField]
		public Fox.Path commonFilePath { get; set; }
		
		[field: UnityEngine.SerializeField]
		public string basePath { get; set; }
		
		[field: UnityEngine.SerializeField]
		public uint commonBlockSizeInByte { get; set; }
		
		[field: UnityEngine.SerializeField]
		public uint largeStageBlockSizeInByte { get; set; }
		
		[field: UnityEngine.SerializeField]
		public uint smallStageBlockCount { get; set; }
		
		[field: UnityEngine.SerializeField]
		public uint smallStageBlockSizeInByte { get; set; }
		
		[field: UnityEngine.SerializeField]
		public uint largeMissionBlockSizeInByte { get; set; }
		
		[field: UnityEngine.SerializeField]
		public uint smallMissionBlockCount { get; set; }
		
		[field: UnityEngine.SerializeField]
		public uint smallMissionBlockSizeInByte { get; set; }
		
		[field: UnityEngine.SerializeField]
		public uint demoBlockCount { get; set; }
		
		[field: UnityEngine.SerializeField]
		public uint demoBlockSizeInByte { get; set; }
		
		// ClassInfos
		public static new bool ClassInfoInitialized = false;
		private static Fox.Core.EntityInfo classInfo;
		public static new Fox.Core.EntityInfo ClassInfo
		{
			get
			{
				return classInfo;
			}
		}
		public override Fox.Core.EntityInfo GetClassEntityInfo()
		{
			return classInfo;
		}
		static CyprusBlockControllerData()
		{
			if (Fox.Core.Data.ClassInfoInitialized)
				classInfo = new Fox.Core.EntityInfo("CyprusBlockControllerData", typeof(CyprusBlockControllerData), Fox.Core.Data.ClassInfo, 120, null, 5);
			classInfo.AddStaticProperty(new Fox.Core.PropertyInfo("enable", Fox.Core.PropertyInfo.PropertyType.Bool, 120, 1, Fox.Core.PropertyInfo.ContainerType.StaticArray, Fox.Core.PropertyInfo.PropertyExport.EditorAndGame, Fox.Core.PropertyInfo.PropertyExport.EditorAndGame, null, null, Fox.Core.PropertyInfo.PropertyStorage.Instance, Fox.Core.PropertyInfo.BackingType.Field));
			classInfo.AddStaticProperty(new Fox.Core.PropertyInfo("stageName", Fox.Core.PropertyInfo.PropertyType.String, 128, 1, Fox.Core.PropertyInfo.ContainerType.StaticArray, Fox.Core.PropertyInfo.PropertyExport.EditorAndGame, Fox.Core.PropertyInfo.PropertyExport.EditorAndGame, null, null, Fox.Core.PropertyInfo.PropertyStorage.Instance, Fox.Core.PropertyInfo.BackingType.Field));
			classInfo.AddStaticProperty(new Fox.Core.PropertyInfo("commonFilePath", Fox.Core.PropertyInfo.PropertyType.Path, 136, 1, Fox.Core.PropertyInfo.ContainerType.StaticArray, Fox.Core.PropertyInfo.PropertyExport.EditorAndGame, Fox.Core.PropertyInfo.PropertyExport.EditorAndGame, null, null, Fox.Core.PropertyInfo.PropertyStorage.Instance, Fox.Core.PropertyInfo.BackingType.Field));
			classInfo.AddStaticProperty(new Fox.Core.PropertyInfo("basePath", Fox.Core.PropertyInfo.PropertyType.String, 144, 1, Fox.Core.PropertyInfo.ContainerType.StaticArray, Fox.Core.PropertyInfo.PropertyExport.EditorAndGame, Fox.Core.PropertyInfo.PropertyExport.EditorAndGame, null, null, Fox.Core.PropertyInfo.PropertyStorage.Instance, Fox.Core.PropertyInfo.BackingType.Field));
			classInfo.AddStaticProperty(new Fox.Core.PropertyInfo("commonBlockSizeInByte", Fox.Core.PropertyInfo.PropertyType.UInt32, 152, 1, Fox.Core.PropertyInfo.ContainerType.StaticArray, Fox.Core.PropertyInfo.PropertyExport.EditorAndGame, Fox.Core.PropertyInfo.PropertyExport.EditorAndGame, null, null, Fox.Core.PropertyInfo.PropertyStorage.Instance, Fox.Core.PropertyInfo.BackingType.Field));
			classInfo.AddStaticProperty(new Fox.Core.PropertyInfo("largeStageBlockSizeInByte", Fox.Core.PropertyInfo.PropertyType.UInt32, 156, 1, Fox.Core.PropertyInfo.ContainerType.StaticArray, Fox.Core.PropertyInfo.PropertyExport.EditorAndGame, Fox.Core.PropertyInfo.PropertyExport.EditorAndGame, null, null, Fox.Core.PropertyInfo.PropertyStorage.Instance, Fox.Core.PropertyInfo.BackingType.Field));
			classInfo.AddStaticProperty(new Fox.Core.PropertyInfo("smallStageBlockCount", Fox.Core.PropertyInfo.PropertyType.UInt32, 160, 1, Fox.Core.PropertyInfo.ContainerType.StaticArray, Fox.Core.PropertyInfo.PropertyExport.EditorAndGame, Fox.Core.PropertyInfo.PropertyExport.EditorAndGame, null, null, Fox.Core.PropertyInfo.PropertyStorage.Instance, Fox.Core.PropertyInfo.BackingType.Field));
			classInfo.AddStaticProperty(new Fox.Core.PropertyInfo("smallStageBlockSizeInByte", Fox.Core.PropertyInfo.PropertyType.UInt32, 164, 1, Fox.Core.PropertyInfo.ContainerType.StaticArray, Fox.Core.PropertyInfo.PropertyExport.EditorAndGame, Fox.Core.PropertyInfo.PropertyExport.EditorAndGame, null, null, Fox.Core.PropertyInfo.PropertyStorage.Instance, Fox.Core.PropertyInfo.BackingType.Field));
			classInfo.AddStaticProperty(new Fox.Core.PropertyInfo("largeMissionBlockSizeInByte", Fox.Core.PropertyInfo.PropertyType.UInt32, 168, 1, Fox.Core.PropertyInfo.ContainerType.StaticArray, Fox.Core.PropertyInfo.PropertyExport.EditorAndGame, Fox.Core.PropertyInfo.PropertyExport.EditorAndGame, null, null, Fox.Core.PropertyInfo.PropertyStorage.Instance, Fox.Core.PropertyInfo.BackingType.Field));
			classInfo.AddStaticProperty(new Fox.Core.PropertyInfo("smallMissionBlockCount", Fox.Core.PropertyInfo.PropertyType.UInt32, 172, 1, Fox.Core.PropertyInfo.ContainerType.StaticArray, Fox.Core.PropertyInfo.PropertyExport.EditorAndGame, Fox.Core.PropertyInfo.PropertyExport.EditorAndGame, null, null, Fox.Core.PropertyInfo.PropertyStorage.Instance, Fox.Core.PropertyInfo.BackingType.Field));
			classInfo.AddStaticProperty(new Fox.Core.PropertyInfo("smallMissionBlockSizeInByte", Fox.Core.PropertyInfo.PropertyType.UInt32, 176, 1, Fox.Core.PropertyInfo.ContainerType.StaticArray, Fox.Core.PropertyInfo.PropertyExport.EditorAndGame, Fox.Core.PropertyInfo.PropertyExport.EditorAndGame, null, null, Fox.Core.PropertyInfo.PropertyStorage.Instance, Fox.Core.PropertyInfo.BackingType.Field));
			classInfo.AddStaticProperty(new Fox.Core.PropertyInfo("demoBlockCount", Fox.Core.PropertyInfo.PropertyType.UInt32, 180, 1, Fox.Core.PropertyInfo.ContainerType.StaticArray, Fox.Core.PropertyInfo.PropertyExport.EditorAndGame, Fox.Core.PropertyInfo.PropertyExport.EditorAndGame, null, null, Fox.Core.PropertyInfo.PropertyStorage.Instance, Fox.Core.PropertyInfo.BackingType.Field));
			classInfo.AddStaticProperty(new Fox.Core.PropertyInfo("demoBlockSizeInByte", Fox.Core.PropertyInfo.PropertyType.UInt32, 184, 1, Fox.Core.PropertyInfo.ContainerType.StaticArray, Fox.Core.PropertyInfo.PropertyExport.EditorAndGame, Fox.Core.PropertyInfo.PropertyExport.EditorAndGame, null, null, Fox.Core.PropertyInfo.PropertyStorage.Instance, Fox.Core.PropertyInfo.BackingType.Field));

			ClassInfoInitialized = true;
		}
		
		public override Fox.Core.Value GetProperty(string propertyName)
		{
			switch (propertyName)
			{
				case "enable":
					return new Fox.Core.Value(enable);
				case "stageName":
					return new Fox.Core.Value(stageName);
				case "commonFilePath":
					return new Fox.Core.Value(commonFilePath);
				case "basePath":
					return new Fox.Core.Value(basePath);
				case "commonBlockSizeInByte":
					return new Fox.Core.Value(commonBlockSizeInByte);
				case "largeStageBlockSizeInByte":
					return new Fox.Core.Value(largeStageBlockSizeInByte);
				case "smallStageBlockCount":
					return new Fox.Core.Value(smallStageBlockCount);
				case "smallStageBlockSizeInByte":
					return new Fox.Core.Value(smallStageBlockSizeInByte);
				case "largeMissionBlockSizeInByte":
					return new Fox.Core.Value(largeMissionBlockSizeInByte);
				case "smallMissionBlockCount":
					return new Fox.Core.Value(smallMissionBlockCount);
				case "smallMissionBlockSizeInByte":
					return new Fox.Core.Value(smallMissionBlockSizeInByte);
				case "demoBlockCount":
					return new Fox.Core.Value(demoBlockCount);
				case "demoBlockSizeInByte":
					return new Fox.Core.Value(demoBlockSizeInByte);
				default:
					return base.GetProperty(propertyName);
			}
		}

		public override Fox.Core.Value GetPropertyElement(string propertyName, ushort index)
		{
			switch (propertyName)
			{
				default:
					return base.GetPropertyElement(propertyName, index);
			}
		}

		public override Fox.Core.Value GetPropertyElement(string propertyName, string key)
		{
			switch (propertyName)
			{
				default:
					return base.GetPropertyElement(propertyName, key);
			}
		}

		public override void SetProperty(string propertyName, Fox.Core.Value value)
		{
			switch (propertyName)
			{
				case "enable":
					this.enable = value.GetValueAsBool();
					return;
				case "stageName":
					this.stageName = value.GetValueAsString();
					return;
				case "commonFilePath":
					this.commonFilePath = value.GetValueAsPath();
					return;
				case "basePath":
					this.basePath = value.GetValueAsString();
					return;
				case "commonBlockSizeInByte":
					this.commonBlockSizeInByte = value.GetValueAsUInt32();
					return;
				case "largeStageBlockSizeInByte":
					this.largeStageBlockSizeInByte = value.GetValueAsUInt32();
					return;
				case "smallStageBlockCount":
					this.smallStageBlockCount = value.GetValueAsUInt32();
					return;
				case "smallStageBlockSizeInByte":
					this.smallStageBlockSizeInByte = value.GetValueAsUInt32();
					return;
				case "largeMissionBlockSizeInByte":
					this.largeMissionBlockSizeInByte = value.GetValueAsUInt32();
					return;
				case "smallMissionBlockCount":
					this.smallMissionBlockCount = value.GetValueAsUInt32();
					return;
				case "smallMissionBlockSizeInByte":
					this.smallMissionBlockSizeInByte = value.GetValueAsUInt32();
					return;
				case "demoBlockCount":
					this.demoBlockCount = value.GetValueAsUInt32();
					return;
				case "demoBlockSizeInByte":
					this.demoBlockSizeInByte = value.GetValueAsUInt32();
					return;
				default:
					base.SetProperty(propertyName, value);
					return;
			}
		}

		public override void SetPropertyElement(string propertyName, ushort index, Fox.Core.Value value)
		{
			switch (propertyName)
			{
				default:
					base.SetPropertyElement(propertyName, index, value);
					return;
			}
		}

		public override void SetPropertyElement(string propertyName, string key, Fox.Core.Value value)
		{
			switch (propertyName)
			{
				default:
					base.SetPropertyElement(propertyName, key, value);
					return;
			}
		}
	}
}