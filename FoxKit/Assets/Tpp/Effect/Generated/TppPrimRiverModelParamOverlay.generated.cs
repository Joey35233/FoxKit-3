//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using CsSystem = System;
using Fox;

namespace Tpp.Effect
{
	[UnityEditor.InitializeOnLoad]
	public partial class TppPrimRiverModelParamOverlay : Fox.Core.Data
	{
		// Properties
		[field: UnityEngine.SerializeField]
		public string primRiverGroupName { get; set; }
		
		[field: UnityEngine.SerializeField]
		public bool visibility { get; set; }
		
		[field: UnityEngine.SerializeField]
		public string baseTextureName { get; set; }
		
		[field: UnityEngine.SerializeField]
		public string normalTextureName { get; set; }
		
		[field: UnityEngine.SerializeField]
		public string cubeMapName { get; set; }
		
		[field: UnityEngine.SerializeField]
		public Fox.Core.EntityLink lightCaptureLocator { get; set; }
		
		[field: UnityEngine.SerializeField]
		public float scrollDirection0 { get; set; }
		
		[field: UnityEngine.SerializeField]
		public float scrollSpeed0 { get; set; }
		
		[field: UnityEngine.SerializeField]
		public float scrollScale0 { get; set; }
		
		[field: UnityEngine.SerializeField]
		public float scrollDirection1 { get; set; }
		
		[field: UnityEngine.SerializeField]
		public float scrollSpeed1 { get; set; }
		
		[field: UnityEngine.SerializeField]
		public float scrollScale1 { get; set; }
		
		[field: UnityEngine.SerializeField]
		public float reflectionRate { get; set; }
		
		[field: UnityEngine.SerializeField]
		public float distortionPower { get; set; }
		
		[field: UnityEngine.SerializeField]
		public float surfaceShadowRate { get; set; }
		
		[field: UnityEngine.SerializeField]
		public float maskDistortionRate { get; set; }
		
		[field: UnityEngine.SerializeField]
		public bool useHnmTexture { get; set; }
		
		[field: UnityEngine.SerializeField]
		public bool debugReset { get; set; }
		
		// ClassInfos
		public static new bool ClassInfoInitialized = false;
		private static Fox.Core.EntityInfo classInfo;
		public static new Fox.Core.EntityInfo ClassInfo
		{
			get
			{
				return classInfo;
			}
		}
		public override Fox.Core.EntityInfo GetClassEntityInfo()
		{
			return classInfo;
		}
		static TppPrimRiverModelParamOverlay()
		{
			if (Fox.Core.Data.ClassInfoInitialized)
				classInfo = new Fox.Core.EntityInfo("TppPrimRiverModelParamOverlay", typeof(TppPrimRiverModelParamOverlay), Fox.Core.Data.ClassInfo, 168, null, 3);
			classInfo.AddStaticProperty(new Fox.Core.PropertyInfo("primRiverGroupName", Fox.Core.PropertyInfo.PropertyType.String, 120, 1, Fox.Core.PropertyInfo.ContainerType.StaticArray, Fox.Core.PropertyInfo.PropertyExport.EditorAndGame, Fox.Core.PropertyInfo.PropertyExport.EditorAndGame, null, null, Fox.Core.PropertyInfo.PropertyStorage.Instance, Fox.Core.PropertyInfo.BackingType.Field));
			classInfo.AddStaticProperty(new Fox.Core.PropertyInfo("visibility", Fox.Core.PropertyInfo.PropertyType.Bool, 128, 1, Fox.Core.PropertyInfo.ContainerType.StaticArray, Fox.Core.PropertyInfo.PropertyExport.EditorAndGame, Fox.Core.PropertyInfo.PropertyExport.EditorAndGame, null, null, Fox.Core.PropertyInfo.PropertyStorage.Instance, Fox.Core.PropertyInfo.BackingType.Field));
			classInfo.AddStaticProperty(new Fox.Core.PropertyInfo("baseTextureName", Fox.Core.PropertyInfo.PropertyType.String, 136, 1, Fox.Core.PropertyInfo.ContainerType.StaticArray, Fox.Core.PropertyInfo.PropertyExport.EditorAndGame, Fox.Core.PropertyInfo.PropertyExport.EditorAndGame, null, null, Fox.Core.PropertyInfo.PropertyStorage.Instance, Fox.Core.PropertyInfo.BackingType.Field));
			classInfo.AddStaticProperty(new Fox.Core.PropertyInfo("normalTextureName", Fox.Core.PropertyInfo.PropertyType.String, 144, 1, Fox.Core.PropertyInfo.ContainerType.StaticArray, Fox.Core.PropertyInfo.PropertyExport.EditorAndGame, Fox.Core.PropertyInfo.PropertyExport.EditorAndGame, null, null, Fox.Core.PropertyInfo.PropertyStorage.Instance, Fox.Core.PropertyInfo.BackingType.Field));
			classInfo.AddStaticProperty(new Fox.Core.PropertyInfo("cubeMapName", Fox.Core.PropertyInfo.PropertyType.String, 152, 1, Fox.Core.PropertyInfo.ContainerType.StaticArray, Fox.Core.PropertyInfo.PropertyExport.EditorAndGame, Fox.Core.PropertyInfo.PropertyExport.EditorAndGame, null, null, Fox.Core.PropertyInfo.PropertyStorage.Instance, Fox.Core.PropertyInfo.BackingType.Field));
			classInfo.AddStaticProperty(new Fox.Core.PropertyInfo("lightCaptureLocator", Fox.Core.PropertyInfo.PropertyType.EntityLink, 160, 1, Fox.Core.PropertyInfo.ContainerType.StaticArray, Fox.Core.PropertyInfo.PropertyExport.EditorAndGame, Fox.Core.PropertyInfo.PropertyExport.EditorAndGame, null, null, Fox.Core.PropertyInfo.PropertyStorage.Instance, Fox.Core.PropertyInfo.BackingType.Field));
			classInfo.AddStaticProperty(new Fox.Core.PropertyInfo("scrollDirection0", Fox.Core.PropertyInfo.PropertyType.Float, 200, 1, Fox.Core.PropertyInfo.ContainerType.StaticArray, Fox.Core.PropertyInfo.PropertyExport.EditorAndGame, Fox.Core.PropertyInfo.PropertyExport.EditorAndGame, null, null, Fox.Core.PropertyInfo.PropertyStorage.Instance, Fox.Core.PropertyInfo.BackingType.Field));
			classInfo.AddStaticProperty(new Fox.Core.PropertyInfo("scrollSpeed0", Fox.Core.PropertyInfo.PropertyType.Float, 204, 1, Fox.Core.PropertyInfo.ContainerType.StaticArray, Fox.Core.PropertyInfo.PropertyExport.EditorAndGame, Fox.Core.PropertyInfo.PropertyExport.EditorAndGame, null, null, Fox.Core.PropertyInfo.PropertyStorage.Instance, Fox.Core.PropertyInfo.BackingType.Field));
			classInfo.AddStaticProperty(new Fox.Core.PropertyInfo("scrollScale0", Fox.Core.PropertyInfo.PropertyType.Float, 208, 1, Fox.Core.PropertyInfo.ContainerType.StaticArray, Fox.Core.PropertyInfo.PropertyExport.EditorAndGame, Fox.Core.PropertyInfo.PropertyExport.EditorAndGame, null, null, Fox.Core.PropertyInfo.PropertyStorage.Instance, Fox.Core.PropertyInfo.BackingType.Field));
			classInfo.AddStaticProperty(new Fox.Core.PropertyInfo("scrollDirection1", Fox.Core.PropertyInfo.PropertyType.Float, 212, 1, Fox.Core.PropertyInfo.ContainerType.StaticArray, Fox.Core.PropertyInfo.PropertyExport.EditorAndGame, Fox.Core.PropertyInfo.PropertyExport.EditorAndGame, null, null, Fox.Core.PropertyInfo.PropertyStorage.Instance, Fox.Core.PropertyInfo.BackingType.Field));
			classInfo.AddStaticProperty(new Fox.Core.PropertyInfo("scrollSpeed1", Fox.Core.PropertyInfo.PropertyType.Float, 216, 1, Fox.Core.PropertyInfo.ContainerType.StaticArray, Fox.Core.PropertyInfo.PropertyExport.EditorAndGame, Fox.Core.PropertyInfo.PropertyExport.EditorAndGame, null, null, Fox.Core.PropertyInfo.PropertyStorage.Instance, Fox.Core.PropertyInfo.BackingType.Field));
			classInfo.AddStaticProperty(new Fox.Core.PropertyInfo("scrollScale1", Fox.Core.PropertyInfo.PropertyType.Float, 220, 1, Fox.Core.PropertyInfo.ContainerType.StaticArray, Fox.Core.PropertyInfo.PropertyExport.EditorAndGame, Fox.Core.PropertyInfo.PropertyExport.EditorAndGame, null, null, Fox.Core.PropertyInfo.PropertyStorage.Instance, Fox.Core.PropertyInfo.BackingType.Field));
			classInfo.AddStaticProperty(new Fox.Core.PropertyInfo("reflectionRate", Fox.Core.PropertyInfo.PropertyType.Float, 224, 1, Fox.Core.PropertyInfo.ContainerType.StaticArray, Fox.Core.PropertyInfo.PropertyExport.EditorAndGame, Fox.Core.PropertyInfo.PropertyExport.EditorAndGame, null, null, Fox.Core.PropertyInfo.PropertyStorage.Instance, Fox.Core.PropertyInfo.BackingType.Field));
			classInfo.AddStaticProperty(new Fox.Core.PropertyInfo("distortionPower", Fox.Core.PropertyInfo.PropertyType.Float, 228, 1, Fox.Core.PropertyInfo.ContainerType.StaticArray, Fox.Core.PropertyInfo.PropertyExport.EditorAndGame, Fox.Core.PropertyInfo.PropertyExport.EditorAndGame, null, null, Fox.Core.PropertyInfo.PropertyStorage.Instance, Fox.Core.PropertyInfo.BackingType.Field));
			classInfo.AddStaticProperty(new Fox.Core.PropertyInfo("surfaceShadowRate", Fox.Core.PropertyInfo.PropertyType.Float, 232, 1, Fox.Core.PropertyInfo.ContainerType.StaticArray, Fox.Core.PropertyInfo.PropertyExport.EditorAndGame, Fox.Core.PropertyInfo.PropertyExport.EditorAndGame, null, null, Fox.Core.PropertyInfo.PropertyStorage.Instance, Fox.Core.PropertyInfo.BackingType.Field));
			classInfo.AddStaticProperty(new Fox.Core.PropertyInfo("maskDistortionRate", Fox.Core.PropertyInfo.PropertyType.Float, 236, 1, Fox.Core.PropertyInfo.ContainerType.StaticArray, Fox.Core.PropertyInfo.PropertyExport.EditorAndGame, Fox.Core.PropertyInfo.PropertyExport.EditorAndGame, null, null, Fox.Core.PropertyInfo.PropertyStorage.Instance, Fox.Core.PropertyInfo.BackingType.Field));
			classInfo.AddStaticProperty(new Fox.Core.PropertyInfo("useHnmTexture", Fox.Core.PropertyInfo.PropertyType.Bool, 240, 1, Fox.Core.PropertyInfo.ContainerType.StaticArray, Fox.Core.PropertyInfo.PropertyExport.EditorAndGame, Fox.Core.PropertyInfo.PropertyExport.EditorAndGame, null, null, Fox.Core.PropertyInfo.PropertyStorage.Instance, Fox.Core.PropertyInfo.BackingType.Field));
			classInfo.AddStaticProperty(new Fox.Core.PropertyInfo("debugReset", Fox.Core.PropertyInfo.PropertyType.Bool, 241, 1, Fox.Core.PropertyInfo.ContainerType.StaticArray, Fox.Core.PropertyInfo.PropertyExport.EditorAndGame, Fox.Core.PropertyInfo.PropertyExport.EditorAndGame, null, null, Fox.Core.PropertyInfo.PropertyStorage.Instance, Fox.Core.PropertyInfo.BackingType.Field));

			ClassInfoInitialized = true;
		}
		
		public override Fox.Core.Value GetProperty(string propertyName)
		{
			switch (propertyName)
			{
				case "primRiverGroupName":
					return new Fox.Core.Value(primRiverGroupName);
				case "visibility":
					return new Fox.Core.Value(visibility);
				case "baseTextureName":
					return new Fox.Core.Value(baseTextureName);
				case "normalTextureName":
					return new Fox.Core.Value(normalTextureName);
				case "cubeMapName":
					return new Fox.Core.Value(cubeMapName);
				case "lightCaptureLocator":
					return new Fox.Core.Value(lightCaptureLocator);
				case "scrollDirection0":
					return new Fox.Core.Value(scrollDirection0);
				case "scrollSpeed0":
					return new Fox.Core.Value(scrollSpeed0);
				case "scrollScale0":
					return new Fox.Core.Value(scrollScale0);
				case "scrollDirection1":
					return new Fox.Core.Value(scrollDirection1);
				case "scrollSpeed1":
					return new Fox.Core.Value(scrollSpeed1);
				case "scrollScale1":
					return new Fox.Core.Value(scrollScale1);
				case "reflectionRate":
					return new Fox.Core.Value(reflectionRate);
				case "distortionPower":
					return new Fox.Core.Value(distortionPower);
				case "surfaceShadowRate":
					return new Fox.Core.Value(surfaceShadowRate);
				case "maskDistortionRate":
					return new Fox.Core.Value(maskDistortionRate);
				case "useHnmTexture":
					return new Fox.Core.Value(useHnmTexture);
				case "debugReset":
					return new Fox.Core.Value(debugReset);
				default:
					return base.GetProperty(propertyName);
			}
		}

		public override Fox.Core.Value GetPropertyElement(string propertyName, ushort index)
		{
			switch (propertyName)
			{
				default:
					return base.GetPropertyElement(propertyName, index);
			}
		}

		public override Fox.Core.Value GetPropertyElement(string propertyName, string key)
		{
			switch (propertyName)
			{
				default:
					return base.GetPropertyElement(propertyName, key);
			}
		}

		public override void SetProperty(string propertyName, Fox.Core.Value value)
		{
			switch (propertyName)
			{
				case "primRiverGroupName":
					this.primRiverGroupName = value.GetValueAsString();
					return;
				case "visibility":
					this.visibility = value.GetValueAsBool();
					return;
				case "baseTextureName":
					this.baseTextureName = value.GetValueAsString();
					return;
				case "normalTextureName":
					this.normalTextureName = value.GetValueAsString();
					return;
				case "cubeMapName":
					this.cubeMapName = value.GetValueAsString();
					return;
				case "lightCaptureLocator":
					this.lightCaptureLocator = value.GetValueAsEntityLink();
					return;
				case "scrollDirection0":
					this.scrollDirection0 = value.GetValueAsFloat();
					return;
				case "scrollSpeed0":
					this.scrollSpeed0 = value.GetValueAsFloat();
					return;
				case "scrollScale0":
					this.scrollScale0 = value.GetValueAsFloat();
					return;
				case "scrollDirection1":
					this.scrollDirection1 = value.GetValueAsFloat();
					return;
				case "scrollSpeed1":
					this.scrollSpeed1 = value.GetValueAsFloat();
					return;
				case "scrollScale1":
					this.scrollScale1 = value.GetValueAsFloat();
					return;
				case "reflectionRate":
					this.reflectionRate = value.GetValueAsFloat();
					return;
				case "distortionPower":
					this.distortionPower = value.GetValueAsFloat();
					return;
				case "surfaceShadowRate":
					this.surfaceShadowRate = value.GetValueAsFloat();
					return;
				case "maskDistortionRate":
					this.maskDistortionRate = value.GetValueAsFloat();
					return;
				case "useHnmTexture":
					this.useHnmTexture = value.GetValueAsBool();
					return;
				case "debugReset":
					this.debugReset = value.GetValueAsBool();
					return;
				default:
					base.SetProperty(propertyName, value);
					return;
			}
		}

		public override void SetPropertyElement(string propertyName, ushort index, Fox.Core.Value value)
		{
			switch (propertyName)
			{
				default:
					base.SetPropertyElement(propertyName, index, value);
					return;
			}
		}

		public override void SetPropertyElement(string propertyName, string key, Fox.Core.Value value)
		{
			switch (propertyName)
			{
				default:
					base.SetPropertyElement(propertyName, key, value);
					return;
			}
		}
	}
}