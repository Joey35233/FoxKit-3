//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using CsSystem = System;
using Fox;

namespace Tpp.MotherBaseCore
{
	[UnityEditor.InitializeOnLoad]
	public partial class MotherBaseConstructData : Fox.Core.TransformData
	{
		// Properties
		[field: UnityEngine.SerializeField]
		public MbConstructDataType type { get; set; }
		
		[field: UnityEngine.SerializeField]
		public ushort index { get; set; }
		
		[field: UnityEngine.SerializeField]
		public Fox.Kernel.StaticArray<byte> divisionType { get; set; } = new Fox.Kernel.StaticArray<byte>(4);
		
		[field: UnityEngine.SerializeField]
		public Fox.Kernel.StaticArray<ushort> divisionRotate { get; set; } = new Fox.Kernel.StaticArray<ushort>(4);
		
		[field: UnityEngine.SerializeField]
		public Fox.Kernel.StaticArray<bool> anotherConnector { get; set; } = new Fox.Kernel.StaticArray<bool>(8);
		
		[field: UnityEngine.SerializeField]
		public byte cluster { get; set; }
		
		[field: UnityEngine.SerializeField]
		public byte plant { get; set; }
		
		// ClassInfos
		public static new bool ClassInfoInitialized = false;
		private static Fox.Core.EntityInfo classInfo;
		public static new Fox.Core.EntityInfo ClassInfo
		{
			get
			{
				return classInfo;
			}
		}
		public override Fox.Core.EntityInfo GetClassEntityInfo()
		{
			return classInfo;
		}
		static MotherBaseConstructData()
		{
			if (Fox.Core.TransformData.ClassInfoInitialized)
				classInfo = new Fox.Core.EntityInfo(new Fox.Kernel.String("MotherBaseConstructData"), typeof(MotherBaseConstructData), Fox.Core.TransformData.ClassInfo, 288, "TppMotherBase", 6);
			classInfo.AddStaticProperty(new Fox.Core.PropertyInfo(new Fox.Kernel.String("type"), Fox.Core.PropertyInfo.PropertyType.Int32, 368, 1, Fox.Core.PropertyInfo.ContainerType.StaticArray, Fox.Core.PropertyInfo.PropertyExport.EditorAndGame, Fox.Core.PropertyInfo.PropertyExport.EditorAndGame, null, typeof(MbConstructDataType), Fox.Core.PropertyInfo.PropertyStorage.Instance, Fox.Core.PropertyInfo.BackingType.Field));
			classInfo.AddStaticProperty(new Fox.Core.PropertyInfo(new Fox.Kernel.String("index"), Fox.Core.PropertyInfo.PropertyType.UInt16, 372, 1, Fox.Core.PropertyInfo.ContainerType.StaticArray, Fox.Core.PropertyInfo.PropertyExport.EditorAndGame, Fox.Core.PropertyInfo.PropertyExport.EditorAndGame, null, null, Fox.Core.PropertyInfo.PropertyStorage.Instance, Fox.Core.PropertyInfo.BackingType.Field));
			classInfo.AddStaticProperty(new Fox.Core.PropertyInfo(new Fox.Kernel.String("divisionType"), Fox.Core.PropertyInfo.PropertyType.UInt8, 374, 4, Fox.Core.PropertyInfo.ContainerType.StaticArray, Fox.Core.PropertyInfo.PropertyExport.EditorAndGame, Fox.Core.PropertyInfo.PropertyExport.EditorAndGame, null, null, Fox.Core.PropertyInfo.PropertyStorage.Instance, Fox.Core.PropertyInfo.BackingType.Field));
			classInfo.AddStaticProperty(new Fox.Core.PropertyInfo(new Fox.Kernel.String("divisionRotate"), Fox.Core.PropertyInfo.PropertyType.UInt16, 378, 4, Fox.Core.PropertyInfo.ContainerType.StaticArray, Fox.Core.PropertyInfo.PropertyExport.EditorAndGame, Fox.Core.PropertyInfo.PropertyExport.EditorAndGame, null, null, Fox.Core.PropertyInfo.PropertyStorage.Instance, Fox.Core.PropertyInfo.BackingType.Field));
			classInfo.AddStaticProperty(new Fox.Core.PropertyInfo(new Fox.Kernel.String("anotherConnector"), Fox.Core.PropertyInfo.PropertyType.Bool, 386, 8, Fox.Core.PropertyInfo.ContainerType.StaticArray, Fox.Core.PropertyInfo.PropertyExport.EditorAndGame, Fox.Core.PropertyInfo.PropertyExport.EditorAndGame, null, null, Fox.Core.PropertyInfo.PropertyStorage.Instance, Fox.Core.PropertyInfo.BackingType.Field));
			classInfo.AddStaticProperty(new Fox.Core.PropertyInfo(new Fox.Kernel.String("cluster"), Fox.Core.PropertyInfo.PropertyType.UInt8, 394, 1, Fox.Core.PropertyInfo.ContainerType.StaticArray, Fox.Core.PropertyInfo.PropertyExport.EditorAndGame, Fox.Core.PropertyInfo.PropertyExport.EditorAndGame, null, null, Fox.Core.PropertyInfo.PropertyStorage.Instance, Fox.Core.PropertyInfo.BackingType.Field));
			classInfo.AddStaticProperty(new Fox.Core.PropertyInfo(new Fox.Kernel.String("plant"), Fox.Core.PropertyInfo.PropertyType.UInt8, 395, 1, Fox.Core.PropertyInfo.ContainerType.StaticArray, Fox.Core.PropertyInfo.PropertyExport.EditorAndGame, Fox.Core.PropertyInfo.PropertyExport.EditorAndGame, null, null, Fox.Core.PropertyInfo.PropertyStorage.Instance, Fox.Core.PropertyInfo.BackingType.Field));

			ClassInfoInitialized = true;
		}

		// Constructors
		public MotherBaseConstructData(ulong id) : base(id) { }
		public MotherBaseConstructData() : base() { }
		
		public override Fox.Core.Value GetProperty(Fox.Kernel.String propertyName)
		{
			switch (propertyName.CString)
			{
				case "type":
					return new Fox.Core.Value(type);
				case "index":
					return new Fox.Core.Value(index);
				case "divisionType":
					return new Fox.Core.Value(divisionType);
				case "divisionRotate":
					return new Fox.Core.Value(divisionRotate);
				case "anotherConnector":
					return new Fox.Core.Value(anotherConnector);
				case "cluster":
					return new Fox.Core.Value(cluster);
				case "plant":
					return new Fox.Core.Value(plant);
				default:
					return base.GetProperty(propertyName);
			}
		}

		public override Fox.Core.Value GetPropertyElement(Fox.Kernel.String propertyName, ushort index)
		{
			switch (propertyName.CString)
			{
				case "divisionType":
					return new Fox.Core.Value(this.divisionType[index]);
				case "divisionRotate":
					return new Fox.Core.Value(this.divisionRotate[index]);
				case "anotherConnector":
					return new Fox.Core.Value(this.anotherConnector[index]);
				default:
					return base.GetPropertyElement(propertyName, index);
			}
		}

		public override Fox.Core.Value GetPropertyElement(Fox.Kernel.String propertyName, Fox.Kernel.String key)
		{
			switch (propertyName.CString)
			{
				default:
					return base.GetPropertyElement(propertyName, key);
			}
		}

		public override void SetProperty(Fox.Kernel.String propertyName, Fox.Core.Value value)
		{
			switch (propertyName.CString)
			{
				case "type":
					this.type = (MbConstructDataType)value.GetValueAsInt32();
					return;
				case "index":
					this.index = value.GetValueAsUInt16();
					return;
				case "cluster":
					this.cluster = value.GetValueAsUInt8();
					return;
				case "plant":
					this.plant = value.GetValueAsUInt8();
					return;
				default:
					base.SetProperty(propertyName, value);
					return;
			}
		}

		public override void SetPropertyElement(Fox.Kernel.String propertyName, ushort index, Fox.Core.Value value)
		{
			switch (propertyName.CString)
			{
				case "divisionType":
					
					this.divisionType[index] = value.GetValueAsUInt8();
					return;
				case "divisionRotate":
					
					this.divisionRotate[index] = value.GetValueAsUInt16();
					return;
				case "anotherConnector":
					
					this.anotherConnector[index] = value.GetValueAsBool();
					return;
				default:
					base.SetPropertyElement(propertyName, index, value);
					return;
			}
		}

		public override void SetPropertyElement(Fox.Kernel.String propertyName, Fox.Kernel.String key, Fox.Core.Value value)
		{
			switch (propertyName.CString)
			{
				default:
					base.SetPropertyElement(propertyName, key, value);
					return;
			}
		}
	}
}