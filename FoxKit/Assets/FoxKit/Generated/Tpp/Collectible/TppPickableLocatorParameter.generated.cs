//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using CsSystem = System;
using Fox;

namespace Tpp.Collectible
{
    [UnityEditor.InitializeOnLoad]
    public partial class TppPickableLocatorParameter : Fox.Core.DataElement 
    {
        // Properties
        [field: UnityEngine.SerializeField]
        protected uint equipIdStrCode32 { get; set; }
        
        [field: UnityEngine.SerializeField]
        protected ushort countRaw { get; set; }
        
        [field: UnityEngine.SerializeField]
        protected ushort countSubRaw { get; set; }
        
        [field: UnityEngine.SerializeField]
        protected ushort flag { get; set; }
        
        [field: UnityEngine.SerializeField]
        protected ushort reserved { get; set; }
        
        // PropertyInfo
        private static Fox.EntityInfo classInfo;
        public static new Fox.EntityInfo ClassInfo
        {
            get
            {
                return classInfo;
            }
        }
        public override Fox.EntityInfo GetClassEntityInfo()
        {
            return classInfo;
        }
        static TppPickableLocatorParameter()
        {
            classInfo = new Fox.EntityInfo("TppPickableLocatorParameter", typeof(TppPickableLocatorParameter), new Fox.Core.DataElement().GetClassEntityInfo(), 40, null, 0);
			classInfo.StaticProperties.Insert("equipIdStrCode32", new Fox.Core.PropertyInfo("equipIdStrCode32", Fox.Core.PropertyInfo.PropertyType.UInt32, 56, 1, Fox.Core.PropertyInfo.ContainerType.StaticArray, Fox.Core.PropertyInfo.PropertyExport.Never, Fox.Core.PropertyInfo.PropertyExport.Never, null, null, Fox.Core.PropertyInfo.PropertyStorage.Instance));
			classInfo.StaticProperties.Insert("countRaw", new Fox.Core.PropertyInfo("countRaw", Fox.Core.PropertyInfo.PropertyType.UInt16, 60, 1, Fox.Core.PropertyInfo.ContainerType.StaticArray, Fox.Core.PropertyInfo.PropertyExport.Never, Fox.Core.PropertyInfo.PropertyExport.Never, null, null, Fox.Core.PropertyInfo.PropertyStorage.Instance));
			classInfo.StaticProperties.Insert("countSubRaw", new Fox.Core.PropertyInfo("countSubRaw", Fox.Core.PropertyInfo.PropertyType.UInt16, 62, 1, Fox.Core.PropertyInfo.ContainerType.StaticArray, Fox.Core.PropertyInfo.PropertyExport.Never, Fox.Core.PropertyInfo.PropertyExport.Never, null, null, Fox.Core.PropertyInfo.PropertyStorage.Instance));
			classInfo.StaticProperties.Insert("flag", new Fox.Core.PropertyInfo("flag", Fox.Core.PropertyInfo.PropertyType.UInt16, 64, 1, Fox.Core.PropertyInfo.ContainerType.StaticArray, Fox.Core.PropertyInfo.PropertyExport.Never, Fox.Core.PropertyInfo.PropertyExport.Never, null, null, Fox.Core.PropertyInfo.PropertyStorage.Instance));
			classInfo.StaticProperties.Insert("reserved", new Fox.Core.PropertyInfo("reserved", Fox.Core.PropertyInfo.PropertyType.UInt16, 66, 1, Fox.Core.PropertyInfo.ContainerType.StaticArray, Fox.Core.PropertyInfo.PropertyExport.Never, Fox.Core.PropertyInfo.PropertyExport.Never, null, null, Fox.Core.PropertyInfo.PropertyStorage.Instance));
        }

        // Constructors
		public TppPickableLocatorParameter(ulong id) : base(id) { }
		public TppPickableLocatorParameter() : base() { }
        
        public override void SetProperty(string propertyName, Fox.Core.Value value)
        {
            switch(propertyName)
            {
                case "equipIdStrCode32":
                    this.equipIdStrCode32 = value.GetValueAsUInt32();
                    return;
                case "countRaw":
                    this.countRaw = value.GetValueAsUInt16();
                    return;
                case "countSubRaw":
                    this.countSubRaw = value.GetValueAsUInt16();
                    return;
                case "flag":
                    this.flag = value.GetValueAsUInt16();
                    return;
                case "reserved":
                    this.reserved = value.GetValueAsUInt16();
                    return;
                default:
                    base.SetProperty(propertyName, value);
                    return;
            }
        }
        
        public override void SetPropertyElement(string propertyName, ushort index, Fox.Core.Value value)
        {
            switch(propertyName)
            {
                default:
                    base.SetPropertyElement(propertyName, index, value);
                    return;
            }
        }
        
        public override void SetPropertyElement(string propertyName, string key, Fox.Core.Value value)
        {
            switch(propertyName)
            {
                default:
                    base.SetPropertyElement(propertyName, key, value);
                    return;
            }
        }
    }
}