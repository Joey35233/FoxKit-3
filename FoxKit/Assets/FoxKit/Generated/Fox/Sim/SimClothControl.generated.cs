//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using CsSystem = System;
using Fox;

namespace Fox.Sim
{
    [UnityEditor.InitializeOnLoad]
    public partial class SimClothControl : Fox.Sim.SimControlElement 
    {
        // Properties
        [field: UnityEngine.SerializeField]
        protected Fox.Core.EntityPtr<Fox.Sim.SimClothControlParam> controlParam { get; set; } = new Fox.Core.EntityPtr<Fox.Sim.SimClothControlParam>();
        
        [field: UnityEngine.SerializeField]
        public Fox.Core.DynamicArray<Fox.Core.EntityPtr<Fox.Sim.SimClothControlUnit>> clothControlUnits { get; protected set; } = new Fox.Core.DynamicArray<Fox.Core.EntityPtr<Fox.Sim.SimClothControlUnit>>();
        
        public float windCoefficient { get => Get_windCoefficient(); set { Set_windCoefficient(value); } }
        protected partial float Get_windCoefficient();
        protected partial void Set_windCoefficient(float value);
        
        public bool isLoop { get => Get_isLoop(); set { Set_isLoop(value); } }
        protected partial bool Get_isLoop();
        protected partial void Set_isLoop(bool value);
        
        // PropertyInfo
        private static Fox.EntityInfo classInfo;
        public static new Fox.EntityInfo ClassInfo
        {
            get
            {
                return classInfo;
            }
        }
        public override Fox.EntityInfo GetClassEntityInfo()
        {
            return classInfo;
        }
        static SimClothControl()
        {
            classInfo = new Fox.EntityInfo("SimClothControl", typeof(SimClothControl), new Fox.Sim.SimControlElement().GetClassEntityInfo(), 72, "Sim", 0);
			classInfo.StaticProperties.Insert("controlParam", new Fox.Core.PropertyInfo("controlParam", Fox.Core.PropertyInfo.PropertyType.EntityPtr, 72, 1, Fox.Core.PropertyInfo.ContainerType.StaticArray, Fox.Core.PropertyInfo.PropertyExport.Never, Fox.Core.PropertyInfo.PropertyExport.Never, typeof(Fox.Sim.SimClothControlParam), null, Fox.Core.PropertyInfo.PropertyStorage.Instance));
			classInfo.StaticProperties.Insert("clothControlUnits", new Fox.Core.PropertyInfo("clothControlUnits", Fox.Core.PropertyInfo.PropertyType.EntityPtr, 80, 1, Fox.Core.PropertyInfo.ContainerType.DynamicArray, Fox.Core.PropertyInfo.PropertyExport.EditorAndGame, Fox.Core.PropertyInfo.PropertyExport.Never, typeof(Fox.Sim.SimClothControlUnit), null, Fox.Core.PropertyInfo.PropertyStorage.Instance));
			classInfo.StaticProperties.Insert("windCoefficient", new Fox.Core.PropertyInfo("windCoefficient", Fox.Core.PropertyInfo.PropertyType.Float, 0, 1, Fox.Core.PropertyInfo.ContainerType.StaticArray, Fox.Core.PropertyInfo.PropertyExport.EditorAndGame, Fox.Core.PropertyInfo.PropertyExport.EditorAndGame, null, null, Fox.Core.PropertyInfo.PropertyStorage.Instance));
			classInfo.StaticProperties.Insert("isLoop", new Fox.Core.PropertyInfo("isLoop", Fox.Core.PropertyInfo.PropertyType.Bool, 0, 1, Fox.Core.PropertyInfo.ContainerType.StaticArray, Fox.Core.PropertyInfo.PropertyExport.EditorAndGame, Fox.Core.PropertyInfo.PropertyExport.EditorAndGame, null, null, Fox.Core.PropertyInfo.PropertyStorage.Instance));
        }

        // Constructors
		public SimClothControl(ulong id) : base(id) { }
		public SimClothControl() : base() { }
        
        public override void SetProperty(string propertyName, Fox.Core.Value value)
        {
            switch(propertyName)
            {
                case "controlParam":
                    this.controlParam = value.GetValueAsEntityPtr<Fox.Sim.SimClothControlParam>();
                    return;
                case "windCoefficient":
                    this.windCoefficient = value.GetValueAsFloat();
                    return;
                case "isLoop":
                    this.isLoop = value.GetValueAsBool();
                    return;
                default:
                    base.SetProperty(propertyName, value);
                    return;
            }
        }
        
        public override void SetPropertyElement(string propertyName, ushort index, Fox.Core.Value value)
        {
            switch(propertyName)
            {
                case "clothControlUnits":
                    while(this.clothControlUnits.Count <= index) { this.clothControlUnits.Add(default(Fox.Core.EntityPtr<Fox.Sim.SimClothControlUnit>)); }
                    this.clothControlUnits[index] = value.GetValueAsEntityPtr<Fox.Sim.SimClothControlUnit>();
                    return;
                default:
                    base.SetPropertyElement(propertyName, index, value);
                    return;
            }
        }
        
        public override void SetPropertyElement(string propertyName, string key, Fox.Core.Value value)
        {
            switch(propertyName)
            {
                default:
                    base.SetPropertyElement(propertyName, key, value);
                    return;
            }
        }
    }
}