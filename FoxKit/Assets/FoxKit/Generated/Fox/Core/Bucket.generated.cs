//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using CsSystem = System;
using Fox;

namespace Fox.Core
{
    [UnityEditor.InitializeOnLoad]
    public partial class Bucket : Fox.Core.Entity 
    {
        // Properties
        [field: UnityEngine.SerializeField]
        protected Fox.Core.EntityHandle collector { get; set; }
        
        [field: UnityEngine.SerializeField]
        public Fox.Core.String name { get; protected set; }
        
        [field: UnityEngine.SerializeField]
        public Fox.Core.String sceneName { get; protected set; }
        
        [field: UnityEngine.SerializeField]
        protected Fox.Core.DynamicArray<Fox.Core.EntityPtr<Fox.Core.Actor>> actors { get; set; } = new Fox.Core.DynamicArray<Fox.Core.EntityPtr<Fox.Core.Actor>>();
        
        [field: UnityEngine.SerializeField]
        protected Fox.Core.StringMap<Fox.Core.FilePtr> dataSetFiles { get; set; } = new Fox.Core.StringMap<Fox.Core.FilePtr>();
        
        [field: UnityEngine.SerializeField]
        protected Fox.Core.StringMap<Fox.Core.EntityPtr<Fox.Core.DataBodySet>> dataBodySets { get; set; } = new Fox.Core.StringMap<Fox.Core.EntityPtr<Fox.Core.DataBodySet>>();
        
        [field: UnityEngine.SerializeField]
        protected Fox.Core.EntityPtr<Fox.Core.DataSet> editableDataSet { get; set; } = new Fox.Core.EntityPtr<Fox.Core.DataSet>();
        
        [field: UnityEngine.SerializeField]
        protected Fox.Core.Path editableDataSetPath { get; set; }
        
        [field: UnityEngine.SerializeField]
        protected Fox.Core.EntityPtr<Fox.Core.DataBodySet> editableDataBodySet { get; set; } = new Fox.Core.EntityPtr<Fox.Core.DataBodySet>();
        
        [field: UnityEngine.SerializeField]
        protected bool editableDataSetChanged { get; set; }
        
        public bool isEditableLocked { get => Get_isEditableLocked(); set { Set_isEditableLocked(value); } }
        protected partial bool Get_isEditableLocked();
        protected partial void Set_isEditableLocked(bool value);
        
        // PropertyInfo
        private static Fox.EntityInfo classInfo;
        public static new Fox.EntityInfo ClassInfo
        {
            get
            {
                return classInfo;
            }
        }
        public override Fox.EntityInfo GetClassEntityInfo()
        {
            return classInfo;
        }
        static Bucket()
        {
            classInfo = new Fox.EntityInfo("Bucket", typeof(Bucket), new Fox.Core.Entity().GetClassEntityInfo(), 0, null, 0);
			classInfo.StaticProperties.Insert("collector", new Fox.Core.PropertyInfo("collector", Fox.Core.PropertyInfo.PropertyType.EntityHandle, 56, 1, Fox.Core.PropertyInfo.ContainerType.StaticArray, Fox.Core.PropertyInfo.PropertyExport.Never, Fox.Core.PropertyInfo.PropertyExport.Never, null, null, Fox.Core.PropertyInfo.PropertyStorage.Instance));
			classInfo.StaticProperties.Insert("name", new Fox.Core.PropertyInfo("name", Fox.Core.PropertyInfo.PropertyType.String, 64, 1, Fox.Core.PropertyInfo.ContainerType.StaticArray, Fox.Core.PropertyInfo.PropertyExport.EditorOnly, Fox.Core.PropertyInfo.PropertyExport.Never, null, null, Fox.Core.PropertyInfo.PropertyStorage.Instance));
			classInfo.StaticProperties.Insert("sceneName", new Fox.Core.PropertyInfo("sceneName", Fox.Core.PropertyInfo.PropertyType.String, 72, 1, Fox.Core.PropertyInfo.ContainerType.StaticArray, Fox.Core.PropertyInfo.PropertyExport.EditorOnly, Fox.Core.PropertyInfo.PropertyExport.Never, null, null, Fox.Core.PropertyInfo.PropertyStorage.Instance));
			classInfo.StaticProperties.Insert("actors", new Fox.Core.PropertyInfo("actors", Fox.Core.PropertyInfo.PropertyType.EntityPtr, 88, 1, Fox.Core.PropertyInfo.ContainerType.List, Fox.Core.PropertyInfo.PropertyExport.Never, Fox.Core.PropertyInfo.PropertyExport.Never, typeof(Fox.Core.Actor), null, Fox.Core.PropertyInfo.PropertyStorage.Instance));
			classInfo.StaticProperties.Insert("dataSetFiles", new Fox.Core.PropertyInfo("dataSetFiles", Fox.Core.PropertyInfo.PropertyType.FilePtr, 120, 1, Fox.Core.PropertyInfo.ContainerType.StringMap, Fox.Core.PropertyInfo.PropertyExport.Never, Fox.Core.PropertyInfo.PropertyExport.Never, null, null, Fox.Core.PropertyInfo.PropertyStorage.Instance));
			classInfo.StaticProperties.Insert("dataBodySets", new Fox.Core.PropertyInfo("dataBodySets", Fox.Core.PropertyInfo.PropertyType.EntityPtr, 168, 1, Fox.Core.PropertyInfo.ContainerType.StringMap, Fox.Core.PropertyInfo.PropertyExport.Never, Fox.Core.PropertyInfo.PropertyExport.Never, typeof(Fox.Core.DataBodySet), null, Fox.Core.PropertyInfo.PropertyStorage.Instance));
			classInfo.StaticProperties.Insert("editableDataSet", new Fox.Core.PropertyInfo("editableDataSet", Fox.Core.PropertyInfo.PropertyType.EntityPtr, 224, 1, Fox.Core.PropertyInfo.ContainerType.StaticArray, Fox.Core.PropertyInfo.PropertyExport.Never, Fox.Core.PropertyInfo.PropertyExport.Never, typeof(Fox.Core.DataSet), null, Fox.Core.PropertyInfo.PropertyStorage.Instance));
			classInfo.StaticProperties.Insert("editableDataSetPath", new Fox.Core.PropertyInfo("editableDataSetPath", Fox.Core.PropertyInfo.PropertyType.Path, 232, 1, Fox.Core.PropertyInfo.ContainerType.StaticArray, Fox.Core.PropertyInfo.PropertyExport.Never, Fox.Core.PropertyInfo.PropertyExport.Never, null, null, Fox.Core.PropertyInfo.PropertyStorage.Instance));
			classInfo.StaticProperties.Insert("editableDataBodySet", new Fox.Core.PropertyInfo("editableDataBodySet", Fox.Core.PropertyInfo.PropertyType.EntityPtr, 240, 1, Fox.Core.PropertyInfo.ContainerType.StaticArray, Fox.Core.PropertyInfo.PropertyExport.Never, Fox.Core.PropertyInfo.PropertyExport.Never, typeof(Fox.Core.DataBodySet), null, Fox.Core.PropertyInfo.PropertyStorage.Instance));
			classInfo.StaticProperties.Insert("editableDataSetChanged", new Fox.Core.PropertyInfo("editableDataSetChanged", Fox.Core.PropertyInfo.PropertyType.Bool, 248, 1, Fox.Core.PropertyInfo.ContainerType.StaticArray, Fox.Core.PropertyInfo.PropertyExport.Never, Fox.Core.PropertyInfo.PropertyExport.Never, null, null, Fox.Core.PropertyInfo.PropertyStorage.Instance));
			classInfo.StaticProperties.Insert("isEditableLocked", new Fox.Core.PropertyInfo("isEditableLocked", Fox.Core.PropertyInfo.PropertyType.Bool, 0, 1, Fox.Core.PropertyInfo.ContainerType.StaticArray, Fox.Core.PropertyInfo.PropertyExport.EditorOnly, Fox.Core.PropertyInfo.PropertyExport.EditorOnly, null, null, Fox.Core.PropertyInfo.PropertyStorage.Instance));
        }

        // Constructors
		public Bucket(ulong id) : base(id) { }
		public Bucket() : base() { }
        
        public override void SetProperty(string propertyName, Fox.Core.Value value)
        {
            switch(propertyName)
            {
                case "collector":
                    this.collector = value.GetValueAsEntityHandle();
                    return;
                case "name":
                    this.name = value.GetValueAsString();
                    return;
                case "sceneName":
                    this.sceneName = value.GetValueAsString();
                    return;
                case "editableDataSet":
                    this.editableDataSet = value.GetValueAsEntityPtr<Fox.Core.DataSet>();
                    return;
                case "editableDataSetPath":
                    this.editableDataSetPath = value.GetValueAsPath();
                    return;
                case "editableDataBodySet":
                    this.editableDataBodySet = value.GetValueAsEntityPtr<Fox.Core.DataBodySet>();
                    return;
                case "editableDataSetChanged":
                    this.editableDataSetChanged = value.GetValueAsBool();
                    return;
                case "isEditableLocked":
                    this.isEditableLocked = value.GetValueAsBool();
                    return;
                default:
                    base.SetProperty(propertyName, value);
                    return;
            }
        }
        
        public override void SetPropertyElement(string propertyName, ushort index, Fox.Core.Value value)
        {
            switch(propertyName)
            {
                case "actors":
                    while(this.actors.Count <= index) { this.actors.Add(default(Fox.Core.EntityPtr<Fox.Core.Actor>)); }
                    this.actors[index] = value.GetValueAsEntityPtr<Fox.Core.Actor>();
                    return;
                default:
                    base.SetPropertyElement(propertyName, index, value);
                    return;
            }
        }
        
        public override void SetPropertyElement(string propertyName, string key, Fox.Core.Value value)
        {
            switch(propertyName)
            {
                case "dataSetFiles":
                    this.dataSetFiles.Insert(key, value.GetValueAsFilePtr());
                    return;
                case "dataBodySets":
                    this.dataBodySets.Insert(key, value.GetValueAsEntityPtr<Fox.Core.DataBodySet>());
                    return;
                default:
                    base.SetPropertyElement(propertyName, key, value);
                    return;
            }
        }
    }
}