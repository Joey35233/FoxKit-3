//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using CsSystem = System;
using Fox;

namespace Fox.UiScene
{
    [UnityEditor.InitializeOnLoad]
    public partial class UiCameraData : Fox.Core.Data 
    {
        // Properties
        [field: UnityEngine.SerializeField]
        public Fox.Core.String cameraName { get; set; }
        
        [field: UnityEngine.SerializeField]
        public UnityEngine.Vector3 translate { get; set; }
        
        [field: UnityEngine.SerializeField]
        public UnityEngine.Quaternion rotate { get; set; }
        
        [field: UnityEngine.SerializeField]
        public bool useOrtho { get; set; }
        
        [field: UnityEngine.SerializeField]
        public float orthoHeight { get; set; }
        
        [field: UnityEngine.SerializeField]
        public float nearClip { get; set; }
        
        [field: UnityEngine.SerializeField]
        public float farClip { get; set; }
        
        [field: UnityEngine.SerializeField]
        public float fov { get; set; }
        
        [field: UnityEngine.SerializeField]
        public UiCameraDataFov fovType { get; set; }
        
        [field: UnityEngine.SerializeField]
        public UiCameraDataFlag debug { get; set; }
        
        // PropertyInfo
        private static Fox.EntityInfo classInfo;
        public static new Fox.EntityInfo ClassInfo
        {
            get
            {
                return classInfo;
            }
        }
        public override Fox.EntityInfo GetClassEntityInfo()
        {
            return classInfo;
        }
        static UiCameraData()
        {
            classInfo = new Fox.EntityInfo("UiCameraData", typeof(UiCameraData), new Fox.Core.Data().GetClassEntityInfo(), 0, "Ui", 0);
			classInfo.StaticProperties.Insert("cameraName", new Fox.Core.PropertyInfo("cameraName", Fox.Core.PropertyInfo.PropertyType.String, 120, 1, Fox.Core.PropertyInfo.ContainerType.StaticArray, Fox.Core.PropertyInfo.PropertyExport.EditorAndGame, Fox.Core.PropertyInfo.PropertyExport.EditorAndGame, null, null, Fox.Core.PropertyInfo.PropertyStorage.Instance));
			classInfo.StaticProperties.Insert("translate", new Fox.Core.PropertyInfo("translate", Fox.Core.PropertyInfo.PropertyType.Vector3, 128, 1, Fox.Core.PropertyInfo.ContainerType.StaticArray, Fox.Core.PropertyInfo.PropertyExport.EditorAndGame, Fox.Core.PropertyInfo.PropertyExport.EditorAndGame, null, null, Fox.Core.PropertyInfo.PropertyStorage.Instance));
			classInfo.StaticProperties.Insert("rotate", new Fox.Core.PropertyInfo("rotate", Fox.Core.PropertyInfo.PropertyType.Quat, 144, 1, Fox.Core.PropertyInfo.ContainerType.StaticArray, Fox.Core.PropertyInfo.PropertyExport.EditorAndGame, Fox.Core.PropertyInfo.PropertyExport.EditorAndGame, null, null, Fox.Core.PropertyInfo.PropertyStorage.Instance));
			classInfo.StaticProperties.Insert("useOrtho", new Fox.Core.PropertyInfo("useOrtho", Fox.Core.PropertyInfo.PropertyType.Bool, 160, 1, Fox.Core.PropertyInfo.ContainerType.StaticArray, Fox.Core.PropertyInfo.PropertyExport.EditorAndGame, Fox.Core.PropertyInfo.PropertyExport.EditorAndGame, null, null, Fox.Core.PropertyInfo.PropertyStorage.Instance));
			classInfo.StaticProperties.Insert("orthoHeight", new Fox.Core.PropertyInfo("orthoHeight", Fox.Core.PropertyInfo.PropertyType.Float, 164, 1, Fox.Core.PropertyInfo.ContainerType.StaticArray, Fox.Core.PropertyInfo.PropertyExport.EditorAndGame, Fox.Core.PropertyInfo.PropertyExport.EditorAndGame, null, null, Fox.Core.PropertyInfo.PropertyStorage.Instance));
			classInfo.StaticProperties.Insert("nearClip", new Fox.Core.PropertyInfo("nearClip", Fox.Core.PropertyInfo.PropertyType.Float, 168, 1, Fox.Core.PropertyInfo.ContainerType.StaticArray, Fox.Core.PropertyInfo.PropertyExport.EditorAndGame, Fox.Core.PropertyInfo.PropertyExport.EditorAndGame, null, null, Fox.Core.PropertyInfo.PropertyStorage.Instance));
			classInfo.StaticProperties.Insert("farClip", new Fox.Core.PropertyInfo("farClip", Fox.Core.PropertyInfo.PropertyType.Float, 172, 1, Fox.Core.PropertyInfo.ContainerType.StaticArray, Fox.Core.PropertyInfo.PropertyExport.EditorAndGame, Fox.Core.PropertyInfo.PropertyExport.EditorAndGame, null, null, Fox.Core.PropertyInfo.PropertyStorage.Instance));
			classInfo.StaticProperties.Insert("fov", new Fox.Core.PropertyInfo("fov", Fox.Core.PropertyInfo.PropertyType.Float, 176, 1, Fox.Core.PropertyInfo.ContainerType.StaticArray, Fox.Core.PropertyInfo.PropertyExport.EditorAndGame, Fox.Core.PropertyInfo.PropertyExport.EditorAndGame, null, null, Fox.Core.PropertyInfo.PropertyStorage.Instance));
			classInfo.StaticProperties.Insert("fovType", new Fox.Core.PropertyInfo("fovType", Fox.Core.PropertyInfo.PropertyType.Int32, 180, 1, Fox.Core.PropertyInfo.ContainerType.StaticArray, Fox.Core.PropertyInfo.PropertyExport.EditorAndGame, Fox.Core.PropertyInfo.PropertyExport.EditorAndGame, null, typeof(UiCameraDataFov), Fox.Core.PropertyInfo.PropertyStorage.Instance));
			classInfo.StaticProperties.Insert("debug", new Fox.Core.PropertyInfo("debug", Fox.Core.PropertyInfo.PropertyType.UInt32, 184, 1, Fox.Core.PropertyInfo.ContainerType.StaticArray, Fox.Core.PropertyInfo.PropertyExport.EditorAndGame, Fox.Core.PropertyInfo.PropertyExport.EditorAndGame, null, typeof(UiCameraDataFlag), Fox.Core.PropertyInfo.PropertyStorage.Instance));
        }

        // Constructors
		public UiCameraData(ulong id) : base(id) { }
		public UiCameraData() : base() { }
        
        public override void SetProperty(string propertyName, Fox.Core.Value value)
        {
            switch(propertyName)
            {
                case "cameraName":
                    this.cameraName = value.GetValueAsString();
                    return;
                case "translate":
                    this.translate = value.GetValueAsVector3();
                    return;
                case "rotate":
                    this.rotate = value.GetValueAsQuat();
                    return;
                case "useOrtho":
                    this.useOrtho = value.GetValueAsBool();
                    return;
                case "orthoHeight":
                    this.orthoHeight = value.GetValueAsFloat();
                    return;
                case "nearClip":
                    this.nearClip = value.GetValueAsFloat();
                    return;
                case "farClip":
                    this.farClip = value.GetValueAsFloat();
                    return;
                case "fov":
                    this.fov = value.GetValueAsFloat();
                    return;
                case "fovType":
                    this.fovType = (UiCameraDataFov)value.GetValueAsInt32();
                    return;
                case "debug":
                    this.debug = (UiCameraDataFlag)value.GetValueAsUInt32();
                    return;
                default:
                    base.SetProperty(propertyName, value);
                    return;
            }
        }
        
        public override void SetPropertyElement(string propertyName, ushort index, Fox.Core.Value value)
        {
            switch(propertyName)
            {
                default:
                    base.SetPropertyElement(propertyName, index, value);
                    return;
            }
        }
        
        public override void SetPropertyElement(string propertyName, string key, Fox.Core.Value value)
        {
            switch(propertyName)
            {
                default:
                    base.SetPropertyElement(propertyName, key, value);
                    return;
            }
        }
    }
}