//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using CsSystem = System;
using Fox;

namespace Fox.EdDemo
{
    [UnityEditor.InitializeOnLoad]
    public partial class ChildrenIdConvertParameter : Fox.Demo.DemoParameter 
    {
        // Properties
        [field: UnityEngine.SerializeField]
        public Fox.Core.String injuryId { get; set; }
        
        [field: UnityEngine.SerializeField]
        public Fox.Core.String yellowHoodId { get; set; }
        
        [field: UnityEngine.SerializeField]
        public Fox.Core.String afloId { get; set; }
        
        [field: UnityEngine.SerializeField]
        public Fox.Core.String shortAfloId { get; set; }
        
        [field: UnityEngine.SerializeField]
        public Fox.Core.String blackCoatId { get; set; }
        
        [field: UnityEngine.SerializeField]
        public byte injuryPriority { get; set; }
        
        [field: UnityEngine.SerializeField]
        public byte yellowHoodPriority { get; set; }
        
        [field: UnityEngine.SerializeField]
        public byte afloPriority { get; set; }
        
        [field: UnityEngine.SerializeField]
        public byte shortAfloPriority { get; set; }
        
        [field: UnityEngine.SerializeField]
        public byte blackCoatPriority { get; set; }
        
        [field: UnityEngine.SerializeField]
        public bool enableInjuredChildSpecialization { get; set; }
        
        // PropertyInfo
        private static Fox.EntityInfo classInfo;
        public static new Fox.EntityInfo ClassInfo
        {
            get
            {
                return classInfo;
            }
        }
        public override Fox.EntityInfo GetClassEntityInfo()
        {
            return classInfo;
        }
        static ChildrenIdConvertParameter()
        {
            classInfo = new Fox.EntityInfo("ChildrenIdConvertParameter", typeof(ChildrenIdConvertParameter), new Fox.Demo.DemoParameter().GetClassEntityInfo(), 60, null, 0);
			classInfo.StaticProperties.Insert("injuryId", new Fox.Core.PropertyInfo("injuryId", Fox.Core.PropertyInfo.PropertyType.String, 64, 1, Fox.Core.PropertyInfo.ContainerType.StaticArray, Fox.Core.PropertyInfo.PropertyExport.EditorAndGame, Fox.Core.PropertyInfo.PropertyExport.EditorAndGame, null, null, Fox.Core.PropertyInfo.PropertyStorage.Instance));
			classInfo.StaticProperties.Insert("yellowHoodId", new Fox.Core.PropertyInfo("yellowHoodId", Fox.Core.PropertyInfo.PropertyType.String, 72, 1, Fox.Core.PropertyInfo.ContainerType.StaticArray, Fox.Core.PropertyInfo.PropertyExport.EditorAndGame, Fox.Core.PropertyInfo.PropertyExport.EditorAndGame, null, null, Fox.Core.PropertyInfo.PropertyStorage.Instance));
			classInfo.StaticProperties.Insert("afloId", new Fox.Core.PropertyInfo("afloId", Fox.Core.PropertyInfo.PropertyType.String, 80, 1, Fox.Core.PropertyInfo.ContainerType.StaticArray, Fox.Core.PropertyInfo.PropertyExport.EditorAndGame, Fox.Core.PropertyInfo.PropertyExport.EditorAndGame, null, null, Fox.Core.PropertyInfo.PropertyStorage.Instance));
			classInfo.StaticProperties.Insert("shortAfloId", new Fox.Core.PropertyInfo("shortAfloId", Fox.Core.PropertyInfo.PropertyType.String, 88, 1, Fox.Core.PropertyInfo.ContainerType.StaticArray, Fox.Core.PropertyInfo.PropertyExport.EditorAndGame, Fox.Core.PropertyInfo.PropertyExport.EditorAndGame, null, null, Fox.Core.PropertyInfo.PropertyStorage.Instance));
			classInfo.StaticProperties.Insert("blackCoatId", new Fox.Core.PropertyInfo("blackCoatId", Fox.Core.PropertyInfo.PropertyType.String, 96, 1, Fox.Core.PropertyInfo.ContainerType.StaticArray, Fox.Core.PropertyInfo.PropertyExport.EditorAndGame, Fox.Core.PropertyInfo.PropertyExport.EditorAndGame, null, null, Fox.Core.PropertyInfo.PropertyStorage.Instance));
			classInfo.StaticProperties.Insert("injuryPriority", new Fox.Core.PropertyInfo("injuryPriority", Fox.Core.PropertyInfo.PropertyType.UInt8, 104, 1, Fox.Core.PropertyInfo.ContainerType.StaticArray, Fox.Core.PropertyInfo.PropertyExport.EditorAndGame, Fox.Core.PropertyInfo.PropertyExport.EditorAndGame, null, null, Fox.Core.PropertyInfo.PropertyStorage.Instance));
			classInfo.StaticProperties.Insert("yellowHoodPriority", new Fox.Core.PropertyInfo("yellowHoodPriority", Fox.Core.PropertyInfo.PropertyType.UInt8, 105, 1, Fox.Core.PropertyInfo.ContainerType.StaticArray, Fox.Core.PropertyInfo.PropertyExport.EditorAndGame, Fox.Core.PropertyInfo.PropertyExport.EditorAndGame, null, null, Fox.Core.PropertyInfo.PropertyStorage.Instance));
			classInfo.StaticProperties.Insert("afloPriority", new Fox.Core.PropertyInfo("afloPriority", Fox.Core.PropertyInfo.PropertyType.UInt8, 106, 1, Fox.Core.PropertyInfo.ContainerType.StaticArray, Fox.Core.PropertyInfo.PropertyExport.EditorAndGame, Fox.Core.PropertyInfo.PropertyExport.EditorAndGame, null, null, Fox.Core.PropertyInfo.PropertyStorage.Instance));
			classInfo.StaticProperties.Insert("shortAfloPriority", new Fox.Core.PropertyInfo("shortAfloPriority", Fox.Core.PropertyInfo.PropertyType.UInt8, 107, 1, Fox.Core.PropertyInfo.ContainerType.StaticArray, Fox.Core.PropertyInfo.PropertyExport.EditorAndGame, Fox.Core.PropertyInfo.PropertyExport.EditorAndGame, null, null, Fox.Core.PropertyInfo.PropertyStorage.Instance));
			classInfo.StaticProperties.Insert("blackCoatPriority", new Fox.Core.PropertyInfo("blackCoatPriority", Fox.Core.PropertyInfo.PropertyType.UInt8, 108, 1, Fox.Core.PropertyInfo.ContainerType.StaticArray, Fox.Core.PropertyInfo.PropertyExport.EditorAndGame, Fox.Core.PropertyInfo.PropertyExport.EditorAndGame, null, null, Fox.Core.PropertyInfo.PropertyStorage.Instance));
			classInfo.StaticProperties.Insert("enableInjuredChildSpecialization", new Fox.Core.PropertyInfo("enableInjuredChildSpecialization", Fox.Core.PropertyInfo.PropertyType.Bool, 109, 1, Fox.Core.PropertyInfo.ContainerType.StaticArray, Fox.Core.PropertyInfo.PropertyExport.EditorAndGame, Fox.Core.PropertyInfo.PropertyExport.EditorAndGame, null, null, Fox.Core.PropertyInfo.PropertyStorage.Instance));
        }

        // Constructors
		public ChildrenIdConvertParameter(ulong id) : base(id) { }
		public ChildrenIdConvertParameter() : base() { }
        
        public override void SetProperty(string propertyName, Fox.Core.Value value)
        {
            switch(propertyName)
            {
                case "injuryId":
                    this.injuryId = value.GetValueAsString();
                    return;
                case "yellowHoodId":
                    this.yellowHoodId = value.GetValueAsString();
                    return;
                case "afloId":
                    this.afloId = value.GetValueAsString();
                    return;
                case "shortAfloId":
                    this.shortAfloId = value.GetValueAsString();
                    return;
                case "blackCoatId":
                    this.blackCoatId = value.GetValueAsString();
                    return;
                case "injuryPriority":
                    this.injuryPriority = value.GetValueAsUInt8();
                    return;
                case "yellowHoodPriority":
                    this.yellowHoodPriority = value.GetValueAsUInt8();
                    return;
                case "afloPriority":
                    this.afloPriority = value.GetValueAsUInt8();
                    return;
                case "shortAfloPriority":
                    this.shortAfloPriority = value.GetValueAsUInt8();
                    return;
                case "blackCoatPriority":
                    this.blackCoatPriority = value.GetValueAsUInt8();
                    return;
                case "enableInjuredChildSpecialization":
                    this.enableInjuredChildSpecialization = value.GetValueAsBool();
                    return;
                default:
                    base.SetProperty(propertyName, value);
                    return;
            }
        }
        
        public override void SetPropertyElement(string propertyName, ushort index, Fox.Core.Value value)
        {
            switch(propertyName)
            {
                default:
                    base.SetPropertyElement(propertyName, index, value);
                    return;
            }
        }
        
        public override void SetPropertyElement(string propertyName, string key, Fox.Core.Value value)
        {
            switch(propertyName)
            {
                default:
                    base.SetPropertyElement(propertyName, key, value);
                    return;
            }
        }
    }
}