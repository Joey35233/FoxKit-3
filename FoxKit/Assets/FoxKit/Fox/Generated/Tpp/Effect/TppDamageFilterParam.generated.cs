//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using CsSystem = System;
using Fox;

namespace Tpp.Effect
{
    public partial class TppDamageFilterParam : Fox.Core.TransformData 
    {
        // Properties
        public UnityEngine.Color burnOutsideColor;
        
        public UnityEngine.Color burnMiddleColor;
        
        public UnityEngine.Color burnInsideColor;
        
        public UnityEngine.Color burnHoleColor;
        
        public float burnSpriteSize;
        
        public float burnSpritePosition;
        
        public string damageColorCorrectionTextureName;
        
        public string injuryColorCorrectionTextureName;
        
        // PropertyInfo
        private static Fox.EntityInfo classInfo;
        public static new Fox.EntityInfo ClassInfo
        {
            get
            {
                return classInfo;
            }
        }
        public  override Fox.EntityInfo GetClassEntityInfo()
        {
            return classInfo;
        }
        static TppDamageFilterParam()
        {
            classInfo = new Fox.EntityInfo("TppDamageFilterParam", new Fox.Core.TransformData(0, 0, 0).GetClassEntityInfo(), 336, null, 0);
			
			classInfo.StaticProperties.Insert("burnOutsideColor", new Fox.Core.PropertyInfo(Fox.Core.PropertyInfo.PropertyType.Color, 304, 1, Fox.Core.PropertyInfo.ContainerType.StaticArray, Fox.Core.PropertyInfo.PropertyExport.EditorAndGame, Fox.Core.PropertyInfo.PropertyExport.EditorAndGame, null, null, Fox.Core.PropertyInfo.PropertyStorage.Instance));
			classInfo.StaticProperties.Insert("burnMiddleColor", new Fox.Core.PropertyInfo(Fox.Core.PropertyInfo.PropertyType.Color, 320, 1, Fox.Core.PropertyInfo.ContainerType.StaticArray, Fox.Core.PropertyInfo.PropertyExport.EditorAndGame, Fox.Core.PropertyInfo.PropertyExport.EditorAndGame, null, null, Fox.Core.PropertyInfo.PropertyStorage.Instance));
			classInfo.StaticProperties.Insert("burnInsideColor", new Fox.Core.PropertyInfo(Fox.Core.PropertyInfo.PropertyType.Color, 336, 1, Fox.Core.PropertyInfo.ContainerType.StaticArray, Fox.Core.PropertyInfo.PropertyExport.EditorAndGame, Fox.Core.PropertyInfo.PropertyExport.EditorAndGame, null, null, Fox.Core.PropertyInfo.PropertyStorage.Instance));
			classInfo.StaticProperties.Insert("burnHoleColor", new Fox.Core.PropertyInfo(Fox.Core.PropertyInfo.PropertyType.Color, 352, 1, Fox.Core.PropertyInfo.ContainerType.StaticArray, Fox.Core.PropertyInfo.PropertyExport.EditorAndGame, Fox.Core.PropertyInfo.PropertyExport.EditorAndGame, null, null, Fox.Core.PropertyInfo.PropertyStorage.Instance));
			classInfo.StaticProperties.Insert("burnSpriteSize", new Fox.Core.PropertyInfo(Fox.Core.PropertyInfo.PropertyType.Float, 368, 1, Fox.Core.PropertyInfo.ContainerType.StaticArray, Fox.Core.PropertyInfo.PropertyExport.EditorAndGame, Fox.Core.PropertyInfo.PropertyExport.EditorAndGame, null, null, Fox.Core.PropertyInfo.PropertyStorage.Instance));
			classInfo.StaticProperties.Insert("burnSpritePosition", new Fox.Core.PropertyInfo(Fox.Core.PropertyInfo.PropertyType.Float, 372, 1, Fox.Core.PropertyInfo.ContainerType.StaticArray, Fox.Core.PropertyInfo.PropertyExport.EditorAndGame, Fox.Core.PropertyInfo.PropertyExport.EditorAndGame, null, null, Fox.Core.PropertyInfo.PropertyStorage.Instance));
			classInfo.StaticProperties.Insert("damageColorCorrectionTextureName", new Fox.Core.PropertyInfo(Fox.Core.PropertyInfo.PropertyType.String, 376, 1, Fox.Core.PropertyInfo.ContainerType.StaticArray, Fox.Core.PropertyInfo.PropertyExport.EditorAndGame, Fox.Core.PropertyInfo.PropertyExport.EditorAndGame, null, null, Fox.Core.PropertyInfo.PropertyStorage.Instance));
			classInfo.StaticProperties.Insert("injuryColorCorrectionTextureName", new Fox.Core.PropertyInfo(Fox.Core.PropertyInfo.PropertyType.String, 384, 1, Fox.Core.PropertyInfo.ContainerType.StaticArray, Fox.Core.PropertyInfo.PropertyExport.EditorAndGame, Fox.Core.PropertyInfo.PropertyExport.EditorAndGame, null, null, Fox.Core.PropertyInfo.PropertyStorage.Instance));
        }

        // Constructor
		public TppDamageFilterParam(ulong address, ushort idA, ushort idB) : base(address, idA, idB) { }
        
        public override void SetProperty(string propertyName, Fox.Value value)
        {
            switch(propertyName)
            {
                case "burnOutsideColor":
                    this.burnOutsideColor = value.GetValueAsColor();
                    return;
                case "burnMiddleColor":
                    this.burnMiddleColor = value.GetValueAsColor();
                    return;
                case "burnInsideColor":
                    this.burnInsideColor = value.GetValueAsColor();
                    return;
                case "burnHoleColor":
                    this.burnHoleColor = value.GetValueAsColor();
                    return;
                case "burnSpriteSize":
                    this.burnSpriteSize = value.GetValueAsFloat();
                    return;
                case "burnSpritePosition":
                    this.burnSpritePosition = value.GetValueAsFloat();
                    return;
                case "damageColorCorrectionTextureName":
                    this.damageColorCorrectionTextureName = value.GetValueAsString();
                    return;
                case "injuryColorCorrectionTextureName":
                    this.injuryColorCorrectionTextureName = value.GetValueAsString();
                    return;
                default:
				    
                    base.SetProperty(propertyName, value);
                    return;
            }
        }
        
        public override void SetPropertyElement(string propertyName, ushort index, Fox.Value value)
        {
            switch(propertyName)
            {
                default:
					
                    base.SetPropertyElement(propertyName, index, value);
                    return;
            }
        }
        
        public override void SetPropertyElement(string propertyName, string key, Fox.Value value)
        {
            switch(propertyName)
            {
                default:
					
                    base.SetPropertyElement(propertyName, key, value);
                    return;
            }
        }
    }
}