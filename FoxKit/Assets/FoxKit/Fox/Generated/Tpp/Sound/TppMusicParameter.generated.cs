//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using CsSystem = System;
using Fox;

namespace Tpp.Sound
{
    public partial class TppMusicParameter : Fox.Core.Data 
    {
        // Properties
        public string tag;
        
        public string playEvent;
        
        public string daySwitchEvent;
        
        public string nightSwitchEvent;
        
        public string dangerEasySwitchEvent;
        
        public string dangerOuterSwitchEvent;
        
        public string dangerHardSwitchEvent;
        
        public string dangerEasyLostSwitchEvent;
        
        public string dangerOuterLostSwitchEvent;
        
        public string dangerHardLostSwitchEvent;
        
        public string dangerEvasionSwitchEvent;
        
        public string dangerStrongSwitchEvent;
        
        public string safetyReflexSwitchEvent;
        
        public string safetyNeutralToSneakSwitchEvent;
        
        public string safetySneakSwitchEvent;
        
        public string safetyCautionSwitchEvent;
        
        public string safetyNoticeSwitchEvent;
        
        public string safetyCautionNoticeSwitchEvent;
        
        public string safetyAlertToCautionSwitchEvent;
        
        public string neutralSwitchEvent;
        
        // PropertyInfo
        private static Fox.EntityInfo classInfo;
        public static new Fox.EntityInfo ClassInfo
        {
            get
            {
                return classInfo;
            }
        }
        public  override Fox.EntityInfo GetClassEntityInfo()
        {
            return classInfo;
        }
        static TppMusicParameter()
        {
            classInfo = new Fox.EntityInfo("TppMusicParameter", new Fox.Core.Data(0, 0, 0).GetClassEntityInfo(), 144, "Sound", 9);
			
			classInfo.StaticProperties.Insert("tag", new Fox.Core.PropertyInfo(Fox.Core.PropertyInfo.PropertyType.String, 120, 1, Fox.Core.PropertyInfo.ContainerType.StaticArray, Fox.Core.PropertyInfo.PropertyExport.EditorAndGame, Fox.Core.PropertyInfo.PropertyExport.EditorAndGame, null, null, Fox.Core.PropertyInfo.PropertyStorage.Instance));
			classInfo.StaticProperties.Insert("playEvent", new Fox.Core.PropertyInfo(Fox.Core.PropertyInfo.PropertyType.String, 128, 1, Fox.Core.PropertyInfo.ContainerType.StaticArray, Fox.Core.PropertyInfo.PropertyExport.EditorAndGame, Fox.Core.PropertyInfo.PropertyExport.EditorAndGame, null, null, Fox.Core.PropertyInfo.PropertyStorage.Instance));
			classInfo.StaticProperties.Insert("daySwitchEvent", new Fox.Core.PropertyInfo(Fox.Core.PropertyInfo.PropertyType.String, 136, 1, Fox.Core.PropertyInfo.ContainerType.StaticArray, Fox.Core.PropertyInfo.PropertyExport.EditorAndGame, Fox.Core.PropertyInfo.PropertyExport.EditorAndGame, null, null, Fox.Core.PropertyInfo.PropertyStorage.Instance));
			classInfo.StaticProperties.Insert("nightSwitchEvent", new Fox.Core.PropertyInfo(Fox.Core.PropertyInfo.PropertyType.String, 144, 1, Fox.Core.PropertyInfo.ContainerType.StaticArray, Fox.Core.PropertyInfo.PropertyExport.EditorAndGame, Fox.Core.PropertyInfo.PropertyExport.EditorAndGame, null, null, Fox.Core.PropertyInfo.PropertyStorage.Instance));
			classInfo.StaticProperties.Insert("dangerEasySwitchEvent", new Fox.Core.PropertyInfo(Fox.Core.PropertyInfo.PropertyType.String, 208, 1, Fox.Core.PropertyInfo.ContainerType.StaticArray, Fox.Core.PropertyInfo.PropertyExport.EditorAndGame, Fox.Core.PropertyInfo.PropertyExport.EditorAndGame, null, null, Fox.Core.PropertyInfo.PropertyStorage.Instance));
			classInfo.StaticProperties.Insert("dangerOuterSwitchEvent", new Fox.Core.PropertyInfo(Fox.Core.PropertyInfo.PropertyType.String, 216, 1, Fox.Core.PropertyInfo.ContainerType.StaticArray, Fox.Core.PropertyInfo.PropertyExport.EditorAndGame, Fox.Core.PropertyInfo.PropertyExport.EditorAndGame, null, null, Fox.Core.PropertyInfo.PropertyStorage.Instance));
			classInfo.StaticProperties.Insert("dangerHardSwitchEvent", new Fox.Core.PropertyInfo(Fox.Core.PropertyInfo.PropertyType.String, 224, 1, Fox.Core.PropertyInfo.ContainerType.StaticArray, Fox.Core.PropertyInfo.PropertyExport.EditorAndGame, Fox.Core.PropertyInfo.PropertyExport.EditorAndGame, null, null, Fox.Core.PropertyInfo.PropertyStorage.Instance));
			classInfo.StaticProperties.Insert("dangerEasyLostSwitchEvent", new Fox.Core.PropertyInfo(Fox.Core.PropertyInfo.PropertyType.String, 232, 1, Fox.Core.PropertyInfo.ContainerType.StaticArray, Fox.Core.PropertyInfo.PropertyExport.EditorAndGame, Fox.Core.PropertyInfo.PropertyExport.EditorAndGame, null, null, Fox.Core.PropertyInfo.PropertyStorage.Instance));
			classInfo.StaticProperties.Insert("dangerOuterLostSwitchEvent", new Fox.Core.PropertyInfo(Fox.Core.PropertyInfo.PropertyType.String, 240, 1, Fox.Core.PropertyInfo.ContainerType.StaticArray, Fox.Core.PropertyInfo.PropertyExport.EditorAndGame, Fox.Core.PropertyInfo.PropertyExport.EditorAndGame, null, null, Fox.Core.PropertyInfo.PropertyStorage.Instance));
			classInfo.StaticProperties.Insert("dangerHardLostSwitchEvent", new Fox.Core.PropertyInfo(Fox.Core.PropertyInfo.PropertyType.String, 248, 1, Fox.Core.PropertyInfo.ContainerType.StaticArray, Fox.Core.PropertyInfo.PropertyExport.EditorAndGame, Fox.Core.PropertyInfo.PropertyExport.EditorAndGame, null, null, Fox.Core.PropertyInfo.PropertyStorage.Instance));
			classInfo.StaticProperties.Insert("dangerEvasionSwitchEvent", new Fox.Core.PropertyInfo(Fox.Core.PropertyInfo.PropertyType.String, 256, 1, Fox.Core.PropertyInfo.ContainerType.StaticArray, Fox.Core.PropertyInfo.PropertyExport.EditorAndGame, Fox.Core.PropertyInfo.PropertyExport.EditorAndGame, null, null, Fox.Core.PropertyInfo.PropertyStorage.Instance));
			classInfo.StaticProperties.Insert("dangerStrongSwitchEvent", new Fox.Core.PropertyInfo(Fox.Core.PropertyInfo.PropertyType.String, 264, 1, Fox.Core.PropertyInfo.ContainerType.StaticArray, Fox.Core.PropertyInfo.PropertyExport.EditorAndGame, Fox.Core.PropertyInfo.PropertyExport.EditorAndGame, null, null, Fox.Core.PropertyInfo.PropertyStorage.Instance));
			classInfo.StaticProperties.Insert("safetyReflexSwitchEvent", new Fox.Core.PropertyInfo(Fox.Core.PropertyInfo.PropertyType.String, 200, 1, Fox.Core.PropertyInfo.ContainerType.StaticArray, Fox.Core.PropertyInfo.PropertyExport.EditorAndGame, Fox.Core.PropertyInfo.PropertyExport.EditorAndGame, null, null, Fox.Core.PropertyInfo.PropertyStorage.Instance));
			classInfo.StaticProperties.Insert("safetyNeutralToSneakSwitchEvent", new Fox.Core.PropertyInfo(Fox.Core.PropertyInfo.PropertyType.String, 160, 1, Fox.Core.PropertyInfo.ContainerType.StaticArray, Fox.Core.PropertyInfo.PropertyExport.EditorAndGame, Fox.Core.PropertyInfo.PropertyExport.EditorAndGame, null, null, Fox.Core.PropertyInfo.PropertyStorage.Instance));
			classInfo.StaticProperties.Insert("safetySneakSwitchEvent", new Fox.Core.PropertyInfo(Fox.Core.PropertyInfo.PropertyType.String, 168, 1, Fox.Core.PropertyInfo.ContainerType.StaticArray, Fox.Core.PropertyInfo.PropertyExport.EditorAndGame, Fox.Core.PropertyInfo.PropertyExport.EditorAndGame, null, null, Fox.Core.PropertyInfo.PropertyStorage.Instance));
			classInfo.StaticProperties.Insert("safetyCautionSwitchEvent", new Fox.Core.PropertyInfo(Fox.Core.PropertyInfo.PropertyType.String, 176, 1, Fox.Core.PropertyInfo.ContainerType.StaticArray, Fox.Core.PropertyInfo.PropertyExport.EditorAndGame, Fox.Core.PropertyInfo.PropertyExport.EditorAndGame, null, null, Fox.Core.PropertyInfo.PropertyStorage.Instance));
			classInfo.StaticProperties.Insert("safetyNoticeSwitchEvent", new Fox.Core.PropertyInfo(Fox.Core.PropertyInfo.PropertyType.String, 184, 1, Fox.Core.PropertyInfo.ContainerType.StaticArray, Fox.Core.PropertyInfo.PropertyExport.EditorAndGame, Fox.Core.PropertyInfo.PropertyExport.EditorAndGame, null, null, Fox.Core.PropertyInfo.PropertyStorage.Instance));
			classInfo.StaticProperties.Insert("safetyCautionNoticeSwitchEvent", new Fox.Core.PropertyInfo(Fox.Core.PropertyInfo.PropertyType.String, 192, 1, Fox.Core.PropertyInfo.ContainerType.StaticArray, Fox.Core.PropertyInfo.PropertyExport.EditorAndGame, Fox.Core.PropertyInfo.PropertyExport.EditorAndGame, null, null, Fox.Core.PropertyInfo.PropertyStorage.Instance));
			classInfo.StaticProperties.Insert("safetyAlertToCautionSwitchEvent", new Fox.Core.PropertyInfo(Fox.Core.PropertyInfo.PropertyType.String, 272, 1, Fox.Core.PropertyInfo.ContainerType.StaticArray, Fox.Core.PropertyInfo.PropertyExport.EditorAndGame, Fox.Core.PropertyInfo.PropertyExport.EditorAndGame, null, null, Fox.Core.PropertyInfo.PropertyStorage.Instance));
			classInfo.StaticProperties.Insert("neutralSwitchEvent", new Fox.Core.PropertyInfo(Fox.Core.PropertyInfo.PropertyType.String, 152, 1, Fox.Core.PropertyInfo.ContainerType.StaticArray, Fox.Core.PropertyInfo.PropertyExport.EditorAndGame, Fox.Core.PropertyInfo.PropertyExport.EditorAndGame, null, null, Fox.Core.PropertyInfo.PropertyStorage.Instance));
        }

        // Constructor
		public TppMusicParameter(ulong address, ushort idA, ushort idB) : base(address, idA, idB) { }
        
        public override void SetProperty(string propertyName, Fox.Value value)
        {
            switch(propertyName)
            {
                case "tag":
                    this.tag = value.GetValueAsString();
                    return;
                case "playEvent":
                    this.playEvent = value.GetValueAsString();
                    return;
                case "daySwitchEvent":
                    this.daySwitchEvent = value.GetValueAsString();
                    return;
                case "nightSwitchEvent":
                    this.nightSwitchEvent = value.GetValueAsString();
                    return;
                case "dangerEasySwitchEvent":
                    this.dangerEasySwitchEvent = value.GetValueAsString();
                    return;
                case "dangerOuterSwitchEvent":
                    this.dangerOuterSwitchEvent = value.GetValueAsString();
                    return;
                case "dangerHardSwitchEvent":
                    this.dangerHardSwitchEvent = value.GetValueAsString();
                    return;
                case "dangerEasyLostSwitchEvent":
                    this.dangerEasyLostSwitchEvent = value.GetValueAsString();
                    return;
                case "dangerOuterLostSwitchEvent":
                    this.dangerOuterLostSwitchEvent = value.GetValueAsString();
                    return;
                case "dangerHardLostSwitchEvent":
                    this.dangerHardLostSwitchEvent = value.GetValueAsString();
                    return;
                case "dangerEvasionSwitchEvent":
                    this.dangerEvasionSwitchEvent = value.GetValueAsString();
                    return;
                case "dangerStrongSwitchEvent":
                    this.dangerStrongSwitchEvent = value.GetValueAsString();
                    return;
                case "safetyReflexSwitchEvent":
                    this.safetyReflexSwitchEvent = value.GetValueAsString();
                    return;
                case "safetyNeutralToSneakSwitchEvent":
                    this.safetyNeutralToSneakSwitchEvent = value.GetValueAsString();
                    return;
                case "safetySneakSwitchEvent":
                    this.safetySneakSwitchEvent = value.GetValueAsString();
                    return;
                case "safetyCautionSwitchEvent":
                    this.safetyCautionSwitchEvent = value.GetValueAsString();
                    return;
                case "safetyNoticeSwitchEvent":
                    this.safetyNoticeSwitchEvent = value.GetValueAsString();
                    return;
                case "safetyCautionNoticeSwitchEvent":
                    this.safetyCautionNoticeSwitchEvent = value.GetValueAsString();
                    return;
                case "safetyAlertToCautionSwitchEvent":
                    this.safetyAlertToCautionSwitchEvent = value.GetValueAsString();
                    return;
                case "neutralSwitchEvent":
                    this.neutralSwitchEvent = value.GetValueAsString();
                    return;
                default:
				    
                    base.SetProperty(propertyName, value);
                    return;
            }
        }
        
        public override void SetPropertyElement(string propertyName, ushort index, Fox.Value value)
        {
            switch(propertyName)
            {
                default:
					
                    base.SetPropertyElement(propertyName, index, value);
                    return;
            }
        }
        
        public override void SetPropertyElement(string propertyName, string key, Fox.Value value)
        {
            switch(propertyName)
            {
                default:
					
                    base.SetPropertyElement(propertyName, key, value);
                    return;
            }
        }
    }
}