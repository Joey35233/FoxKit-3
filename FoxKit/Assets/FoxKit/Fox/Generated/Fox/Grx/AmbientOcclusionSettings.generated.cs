//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using CsSystem = System;
using Fox;

namespace Fox.Grx
{
    public partial class AmbientOcclusionSettings : Fox.Core.Data 
    {
        // Properties
        public AmbientOcclusionSettings_Method method;
        
        public AmbientOcclusionSettings_LightAttachment attachment;
        
        public Fox.Core.EntityPtr<Fox.Grx.GrxLineSSAOParameters> lineSSAOParameters = new Fox.Core.EntityPtr<Fox.Grx.GrxLineSSAOParameters>();
        
        public Fox.Core.EntityPtr<Fox.Grx.GrxAreaSSAOParameters> areaSSAOParameters = new Fox.Core.EntityPtr<Fox.Grx.GrxAreaSSAOParameters>();
        
        // PropertyInfo
        private static Fox.EntityInfo classInfo;
        public static new Fox.EntityInfo ClassInfo
        {
            get
            {
                return classInfo;
            }
        }
        public  override Fox.EntityInfo GetClassEntityInfo()
        {
            return classInfo;
        }
        static AmbientOcclusionSettings()
        {
            classInfo = new Fox.EntityInfo("AmbientOcclusionSettings", new Fox.Core.Data(0, 0, 0).GetClassEntityInfo(), 88, "Config", 0);
			
			classInfo.StaticProperties.Insert("method", new Fox.Core.PropertyInfo(Fox.Core.PropertyInfo.PropertyType.Int32, 120, 1, Fox.Core.PropertyInfo.ContainerType.StaticArray, Fox.Core.PropertyInfo.PropertyExport.EditorAndGame, Fox.Core.PropertyInfo.PropertyExport.EditorAndGame, null, typeof(AmbientOcclusionSettings_Method), Fox.Core.PropertyInfo.PropertyStorage.Instance));
			classInfo.StaticProperties.Insert("attachment", new Fox.Core.PropertyInfo(Fox.Core.PropertyInfo.PropertyType.Int32, 124, 1, Fox.Core.PropertyInfo.ContainerType.StaticArray, Fox.Core.PropertyInfo.PropertyExport.EditorAndGame, Fox.Core.PropertyInfo.PropertyExport.EditorAndGame, null, typeof(AmbientOcclusionSettings_LightAttachment), Fox.Core.PropertyInfo.PropertyStorage.Instance));
			classInfo.StaticProperties.Insert("lineSSAOParameters", new Fox.Core.PropertyInfo(Fox.Core.PropertyInfo.PropertyType.EntityPtr, 128, 1, Fox.Core.PropertyInfo.ContainerType.StaticArray, Fox.Core.PropertyInfo.PropertyExport.EditorAndGame, Fox.Core.PropertyInfo.PropertyExport.Never, typeof(Fox.Grx.GrxLineSSAOParameters), null, Fox.Core.PropertyInfo.PropertyStorage.Instance));
			classInfo.StaticProperties.Insert("areaSSAOParameters", new Fox.Core.PropertyInfo(Fox.Core.PropertyInfo.PropertyType.EntityPtr, 136, 1, Fox.Core.PropertyInfo.ContainerType.StaticArray, Fox.Core.PropertyInfo.PropertyExport.EditorAndGame, Fox.Core.PropertyInfo.PropertyExport.Never, typeof(Fox.Grx.GrxAreaSSAOParameters), null, Fox.Core.PropertyInfo.PropertyStorage.Instance));
        }

        // Constructor
		public AmbientOcclusionSettings(ulong address, ushort idA, ushort idB) : base(address, idA, idB) { }
        
        public override void SetProperty(string propertyName, Fox.Value value)
        {
            switch(propertyName)
            {
                case "method":
                    this.method = (AmbientOcclusionSettings_Method)value.GetValueAsInt32();
                    return;
                case "attachment":
                    this.attachment = (AmbientOcclusionSettings_LightAttachment)value.GetValueAsInt32();
                    return;
                case "lineSSAOParameters":
                    this.lineSSAOParameters = value.GetValueAsEntityPtr<Fox.Grx.GrxLineSSAOParameters>();
                    return;
                case "areaSSAOParameters":
                    this.areaSSAOParameters = value.GetValueAsEntityPtr<Fox.Grx.GrxAreaSSAOParameters>();
                    return;
                default:
				    
                    base.SetProperty(propertyName, value);
                    return;
            }
        }
        
        public override void SetPropertyElement(string propertyName, ushort index, Fox.Value value)
        {
            switch(propertyName)
            {
                default:
					
                    base.SetPropertyElement(propertyName, index, value);
                    return;
            }
        }
        
        public override void SetPropertyElement(string propertyName, string key, Fox.Value value)
        {
            switch(propertyName)
            {
                default:
					
                    base.SetPropertyElement(propertyName, key, value);
                    return;
            }
        }
    }
}