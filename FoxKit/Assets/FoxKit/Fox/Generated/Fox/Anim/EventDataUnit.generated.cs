//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using CsSystem = System;
using Fox;

namespace Fox.Anim
{
    public partial class EventDataUnit : Fox.Core.Data 
    {
        // Properties
        public Fox.String eventName;
        
        public Fox.Core.DynamicArray<Fox.Core.EntityPtr<Fox.Anim.TimeSection>> sections = new Fox.Core.DynamicArray<Fox.Core.EntityPtr<Fox.Anim.TimeSection>>();
        
        public Fox.Core.DynamicArray<Fox.String> paramString = new Fox.Core.DynamicArray<Fox.String>();
        
        public Fox.Core.DynamicArray<int> paramInt = new Fox.Core.DynamicArray<int>();
        
        public Fox.Core.DynamicArray<float> paramFloat = new Fox.Core.DynamicArray<float>();
        
        // PropertyInfo
        private static Fox.EntityInfo classInfo;
        public static new Fox.EntityInfo ClassInfo
        {
            get
            {
                return classInfo;
            }
        }
        public  override Fox.EntityInfo GetClassEntityInfo()
        {
            return classInfo;
        }
        static EventDataUnit()
        {
            classInfo = new Fox.EntityInfo("EventDataUnit", new Fox.Core.Data().GetClassEntityInfo(), 136, null, 2);
			
			classInfo.StaticProperties.Insert("eventName", new Fox.Core.PropertyInfo(Fox.Core.PropertyInfo.PropertyType.String, 120, 1, Fox.Core.PropertyInfo.ContainerType.StaticArray, Fox.Core.PropertyInfo.PropertyExport.EditorAndGame, Fox.Core.PropertyInfo.PropertyExport.EditorAndGame, null, null, Fox.Core.PropertyInfo.PropertyStorage.Instance));
			classInfo.StaticProperties.Insert("sections", new Fox.Core.PropertyInfo(Fox.Core.PropertyInfo.PropertyType.EntityPtr, 128, 1, Fox.Core.PropertyInfo.ContainerType.DynamicArray, Fox.Core.PropertyInfo.PropertyExport.EditorAndGame, Fox.Core.PropertyInfo.PropertyExport.EditorAndGame, typeof(Fox.Anim.TimeSection), null, Fox.Core.PropertyInfo.PropertyStorage.Instance));
			classInfo.StaticProperties.Insert("paramString", new Fox.Core.PropertyInfo(Fox.Core.PropertyInfo.PropertyType.String, 144, 1, Fox.Core.PropertyInfo.ContainerType.DynamicArray, Fox.Core.PropertyInfo.PropertyExport.EditorAndGame, Fox.Core.PropertyInfo.PropertyExport.EditorAndGame, null, null, Fox.Core.PropertyInfo.PropertyStorage.Instance));
			classInfo.StaticProperties.Insert("paramInt", new Fox.Core.PropertyInfo(Fox.Core.PropertyInfo.PropertyType.Int32, 160, 1, Fox.Core.PropertyInfo.ContainerType.DynamicArray, Fox.Core.PropertyInfo.PropertyExport.EditorAndGame, Fox.Core.PropertyInfo.PropertyExport.EditorAndGame, null, null, Fox.Core.PropertyInfo.PropertyStorage.Instance));
			classInfo.StaticProperties.Insert("paramFloat", new Fox.Core.PropertyInfo(Fox.Core.PropertyInfo.PropertyType.Float, 176, 1, Fox.Core.PropertyInfo.ContainerType.DynamicArray, Fox.Core.PropertyInfo.PropertyExport.EditorAndGame, Fox.Core.PropertyInfo.PropertyExport.EditorAndGame, null, null, Fox.Core.PropertyInfo.PropertyStorage.Instance));
        }

        // Constructors
		public EventDataUnit(ulong address, ulong id) : base(address, id) { }
		public EventDataUnit() : base() { }
        
        public override void SetProperty(string propertyName, Fox.Value value)
        {
            switch(propertyName)
            {
                case "eventName":
                    this.eventName = value.GetValueAsString();
                    return;
                default:
				    
                    base.SetProperty(propertyName, value);
                    return;
            }
        }
        
        public override void SetPropertyElement(string propertyName, ushort index, Fox.Value value)
        {
            switch(propertyName)
            {
                case "sections":
                    while(this.sections.Count <= index) { this.sections.Add(default(Fox.Core.EntityPtr<Fox.Anim.TimeSection>)); }
                    this.sections[index] = value.GetValueAsEntityPtr<Fox.Anim.TimeSection>();
                    return;
                case "paramString":
                    while(this.paramString.Count <= index) { this.paramString.Add(default(Fox.String)); }
                    this.paramString[index] = value.GetValueAsString();
                    return;
                case "paramInt":
                    while(this.paramInt.Count <= index) { this.paramInt.Add(default(int)); }
                    this.paramInt[index] = value.GetValueAsInt32();
                    return;
                case "paramFloat":
                    while(this.paramFloat.Count <= index) { this.paramFloat.Add(default(float)); }
                    this.paramFloat[index] = value.GetValueAsFloat();
                    return;
                default:
					
                    base.SetPropertyElement(propertyName, index, value);
                    return;
            }
        }
        
        public override void SetPropertyElement(string propertyName, string key, Fox.Value value)
        {
            switch(propertyName)
            {
                default:
					
                    base.SetPropertyElement(propertyName, key, value);
                    return;
            }
        }
    }
}