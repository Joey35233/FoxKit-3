//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using CsSystem = System;
using Fox;

namespace Fox.Demox
{
	[UnityEditor.InitializeOnLoad, UnityEngine.AddComponentMenu("Demox/DemoData")]
	public partial class DemoData : Fox.Core.TransformData
	{
		// Properties
		[field: UnityEngine.SerializeField]
		public CsSystem.Collections.Generic.List<Fox.Core.FilePtr> evfFiles { get; private set; } = new CsSystem.Collections.Generic.List<Fox.Core.FilePtr>();
		
		[field: UnityEngine.SerializeField]
		public bool onMemory { get; set; }
		
		[field: UnityEngine.SerializeField]
		public int demoLength { get; set; }
		
		[field: UnityEngine.SerializeField]
		public int priority { get; set; }
		
		[field: UnityEngine.SerializeField]
		public Fox.Path scriptPath { get; set; }
		
		[field: UnityEngine.SerializeField]
		public Fox.StringMap<Fox.Core.FilePtr> fmdlFiles { get; private set; } = new Fox.StringMap<Fox.Core.FilePtr>();
		
		[field: UnityEngine.SerializeField]
		public Fox.StringMap<Fox.Core.FilePtr> helpBoneFiles { get; private set; } = new Fox.StringMap<Fox.Core.FilePtr>();
		
		[field: UnityEngine.SerializeField]
		public Fox.StringMap<Fox.Demo.PartsDesc> partsDesc { get; private set; } = new Fox.StringMap<Fox.Demo.PartsDesc>();
		
		[field: UnityEngine.SerializeField]
		public CsSystem.Collections.Generic.List<Fox.Demo.ClipData> clipDatas { get; private set; } = new CsSystem.Collections.Generic.List<Fox.Demo.ClipData>();
		
		[field: UnityEngine.SerializeField]
		public CsSystem.Collections.Generic.List<Fox.Path> loadFiles { get; private set; } = new CsSystem.Collections.Generic.List<Fox.Path>();
		
		[field: UnityEngine.SerializeField]
		public string demoId { get; set; }
		
		[field: UnityEngine.SerializeField]
		public Fox.Core.EntityLink playingRoot { get; set; }
		
		[field: UnityEngine.SerializeField]
		public Fox.Core.EntityLink streamAnimation { get; set; }
		
		[field: UnityEngine.SerializeField]
		public Fox.Path demoStreamPath { get; set; }
		
		[field: UnityEngine.SerializeField]
		public Fox.Path motionPath { get; set; }
		
		[field: UnityEngine.SerializeField]
		public Fox.Core.FilePtr motionFile { get; set; }
		
		[field: UnityEngine.SerializeField]
		public Fox.Path audioPath { get; set; }
		
		[field: UnityEngine.SerializeField]
		public Fox.Core.FilePtr subtitleFile { get; set; }
		
		[field: UnityEngine.SerializeField]
		public Fox.Core.FilePtr subtitleBinaryFile { get; set; }
		
		[field: UnityEngine.SerializeField]
		public Fox.Core.FilePtr nodeDataFile { get; set; }
		
		[field: UnityEngine.SerializeField]
		public CsSystem.Collections.Generic.List<string> stringParams { get; private set; } = new CsSystem.Collections.Generic.List<string>();
		
		[field: UnityEngine.SerializeField]
		public Fox.StringMap<Fox.Core.EntityLink> entityParams { get; private set; } = new Fox.StringMap<Fox.Core.EntityLink>();
		
		[field: UnityEngine.SerializeField]
		public Fox.StringMap<Fox.Core.FilePtr> fileParams { get; private set; } = new Fox.StringMap<Fox.Core.FilePtr>();
		
		[field: UnityEngine.SerializeField]
		public Fox.StringMap<Fox.Demo.DemoControlCharacterDesc> controlCharacters { get; private set; } = new Fox.StringMap<Fox.Demo.DemoControlCharacterDesc>();
		
		[field: UnityEngine.SerializeField]
		public Fox.StringMap<Fox.Core.EntityLink> controlDatas { get; private set; } = new Fox.StringMap<Fox.Core.EntityLink>();
		
		[field: UnityEngine.SerializeField]
		public Fox.StringMap<string> controlCollectibles { get; private set; } = new Fox.StringMap<string>();
		
		[field: UnityEngine.SerializeField]
		public Fox.StringMap<Fox.Demo.DemoParameter> parameters { get; private set; } = new Fox.StringMap<Fox.Demo.DemoParameter>();
		
		[field: UnityEngine.SerializeField]
		public Fox.StringMap<string> setupLights { get; private set; } = new Fox.StringMap<string>();
		
		[field: UnityEngine.SerializeField]
		public Utility_InterpType cameraInterpType { get; set; }
		
		[field: UnityEngine.SerializeField]
		public int cameraInterpFrame { get; set; }
		
		[field: UnityEngine.SerializeField]
		public float cameraInterpCurveRate { get; set; }
		
		[field: UnityEngine.SerializeField]
		public float cameraInterpScurveCenter { get; set; }
		
		[field: UnityEngine.SerializeField]
		public UnityEngine.Vector3 cameraTranslation { get; set; }
		
		[field: UnityEngine.SerializeField]
		public UnityEngine.Quaternion cameraRotation { get; set; }
		
		[field: UnityEngine.SerializeField]
		public float cameraParam { get; set; }
		
		[field: UnityEngine.SerializeField]
		public float cameraDistanceToLookAt { get; set; }
		
		[field: UnityEngine.SerializeField]
		public UnityEngine.Vector3 cameraStartTranslation { get; set; }
		
		[field: UnityEngine.SerializeField]
		public UnityEngine.Quaternion cameraStartRotation { get; set; }
		
		[field: UnityEngine.SerializeField]
		public float cameraStartParam { get; set; }
		
		[field: UnityEngine.SerializeField]
		public float cameraStartDistanceToLookAt { get; set; }
		
		[field: UnityEngine.SerializeField]
		public int eventCacheNum { get; set; }
		
		[field: UnityEngine.SerializeField]
		public int eventInterpCacheNum { get; set; }
		
		[field: UnityEngine.SerializeField]
		public int eventSkipCacheNum { get; set; }
		
		[field: UnityEngine.SerializeField]
		public CsSystem.Collections.Generic.List<string> highestTextureStreamModel { get; private set; } = new CsSystem.Collections.Generic.List<string>();
		
		[field: UnityEngine.SerializeField]
		public CsSystem.Collections.Generic.List<Fox.Path> highestTexture { get; private set; } = new CsSystem.Collections.Generic.List<Fox.Path>();
		
		[field: UnityEngine.SerializeField]
		public Fox.StringMap<int> objectNum { get; private set; } = new Fox.StringMap<int>();
		
		[field: UnityEngine.SerializeField]
		public Fox.Core.EntityLink blockPositionSetter { get; set; }
		
		// ClassInfos
		public static new bool ClassInfoInitialized = false;
		private static Fox.Core.EntityInfo classInfo;
		public static new Fox.Core.EntityInfo ClassInfo
		{
			get
			{
				return classInfo;
			}
		}
		public override Fox.Core.EntityInfo GetClassEntityInfo()
		{
			return classInfo;
		}
		static DemoData()
		{
			if (Fox.Core.TransformData.ClassInfoInitialized)
				classInfo = new Fox.Core.EntityInfo("DemoData", typeof(DemoData), Fox.Core.TransformData.ClassInfo, 1264, null, 36);
			classInfo.AddStaticProperty(new Fox.Core.PropertyInfo("evfFiles", Fox.Core.PropertyInfo.PropertyType.FilePtr, 304, 1, Fox.Core.PropertyInfo.ContainerType.DynamicArray, Fox.Core.PropertyInfo.PropertyExport.EditorAndGame, Fox.Core.PropertyInfo.PropertyExport.EditorAndGame, null, null, Fox.Core.PropertyInfo.PropertyStorage.Instance, Fox.Core.PropertyInfo.BackingType.Field));
			classInfo.AddStaticProperty(new Fox.Core.PropertyInfo("onMemory", Fox.Core.PropertyInfo.PropertyType.Bool, 320, 1, Fox.Core.PropertyInfo.ContainerType.StaticArray, Fox.Core.PropertyInfo.PropertyExport.EditorAndGame, Fox.Core.PropertyInfo.PropertyExport.EditorAndGame, null, null, Fox.Core.PropertyInfo.PropertyStorage.Instance, Fox.Core.PropertyInfo.BackingType.Field));
			classInfo.AddStaticProperty(new Fox.Core.PropertyInfo("demoLength", Fox.Core.PropertyInfo.PropertyType.Int32, 324, 1, Fox.Core.PropertyInfo.ContainerType.StaticArray, Fox.Core.PropertyInfo.PropertyExport.EditorAndGame, Fox.Core.PropertyInfo.PropertyExport.EditorAndGame, null, null, Fox.Core.PropertyInfo.PropertyStorage.Instance, Fox.Core.PropertyInfo.BackingType.Field));
			classInfo.AddStaticProperty(new Fox.Core.PropertyInfo("priority", Fox.Core.PropertyInfo.PropertyType.Int32, 328, 1, Fox.Core.PropertyInfo.ContainerType.StaticArray, Fox.Core.PropertyInfo.PropertyExport.EditorAndGame, Fox.Core.PropertyInfo.PropertyExport.EditorAndGame, null, null, Fox.Core.PropertyInfo.PropertyStorage.Instance, Fox.Core.PropertyInfo.BackingType.Field));
			classInfo.AddStaticProperty(new Fox.Core.PropertyInfo("scriptPath", Fox.Core.PropertyInfo.PropertyType.Path, 336, 1, Fox.Core.PropertyInfo.ContainerType.StaticArray, Fox.Core.PropertyInfo.PropertyExport.EditorAndGame, Fox.Core.PropertyInfo.PropertyExport.EditorAndGame, null, null, Fox.Core.PropertyInfo.PropertyStorage.Instance, Fox.Core.PropertyInfo.BackingType.Field));
			classInfo.AddStaticProperty(new Fox.Core.PropertyInfo("fmdlFiles", Fox.Core.PropertyInfo.PropertyType.FilePtr, 344, 1, Fox.Core.PropertyInfo.ContainerType.StringMap, Fox.Core.PropertyInfo.PropertyExport.EditorAndGame, Fox.Core.PropertyInfo.PropertyExport.EditorAndGame, null, null, Fox.Core.PropertyInfo.PropertyStorage.Instance, Fox.Core.PropertyInfo.BackingType.Field));
			classInfo.AddStaticProperty(new Fox.Core.PropertyInfo("helpBoneFiles", Fox.Core.PropertyInfo.PropertyType.FilePtr, 392, 1, Fox.Core.PropertyInfo.ContainerType.StringMap, Fox.Core.PropertyInfo.PropertyExport.EditorAndGame, Fox.Core.PropertyInfo.PropertyExport.EditorAndGame, null, null, Fox.Core.PropertyInfo.PropertyStorage.Instance, Fox.Core.PropertyInfo.BackingType.Field));
			classInfo.AddStaticProperty(new Fox.Core.PropertyInfo("partsDesc", Fox.Core.PropertyInfo.PropertyType.EntityPtr, 440, 1, Fox.Core.PropertyInfo.ContainerType.StringMap, Fox.Core.PropertyInfo.PropertyExport.EditorAndGame, Fox.Core.PropertyInfo.PropertyExport.EditorAndGame, typeof(Fox.Demo.PartsDesc), null, Fox.Core.PropertyInfo.PropertyStorage.Instance, Fox.Core.PropertyInfo.BackingType.Field));
			classInfo.AddStaticProperty(new Fox.Core.PropertyInfo("clipDatas", Fox.Core.PropertyInfo.PropertyType.EntityPtr, 488, 1, Fox.Core.PropertyInfo.ContainerType.DynamicArray, Fox.Core.PropertyInfo.PropertyExport.EditorAndGame, Fox.Core.PropertyInfo.PropertyExport.EditorAndGame, typeof(Fox.Demo.ClipData), null, Fox.Core.PropertyInfo.PropertyStorage.Instance, Fox.Core.PropertyInfo.BackingType.Field));
			classInfo.AddStaticProperty(new Fox.Core.PropertyInfo("loadFiles", Fox.Core.PropertyInfo.PropertyType.Path, 504, 1, Fox.Core.PropertyInfo.ContainerType.DynamicArray, Fox.Core.PropertyInfo.PropertyExport.EditorAndGame, Fox.Core.PropertyInfo.PropertyExport.EditorAndGame, null, null, Fox.Core.PropertyInfo.PropertyStorage.Instance, Fox.Core.PropertyInfo.BackingType.Field));
			classInfo.AddStaticProperty(new Fox.Core.PropertyInfo("demoId", Fox.Core.PropertyInfo.PropertyType.String, 608, 1, Fox.Core.PropertyInfo.ContainerType.StaticArray, Fox.Core.PropertyInfo.PropertyExport.EditorAndGame, Fox.Core.PropertyInfo.PropertyExport.EditorAndGame, null, null, Fox.Core.PropertyInfo.PropertyStorage.Instance, Fox.Core.PropertyInfo.BackingType.Field));
			classInfo.AddStaticProperty(new Fox.Core.PropertyInfo("playingRoot", Fox.Core.PropertyInfo.PropertyType.EntityLink, 616, 1, Fox.Core.PropertyInfo.ContainerType.StaticArray, Fox.Core.PropertyInfo.PropertyExport.EditorAndGame, Fox.Core.PropertyInfo.PropertyExport.EditorAndGame, null, null, Fox.Core.PropertyInfo.PropertyStorage.Instance, Fox.Core.PropertyInfo.BackingType.Field));
			classInfo.AddStaticProperty(new Fox.Core.PropertyInfo("streamAnimation", Fox.Core.PropertyInfo.PropertyType.EntityLink, 656, 1, Fox.Core.PropertyInfo.ContainerType.StaticArray, Fox.Core.PropertyInfo.PropertyExport.EditorAndGame, Fox.Core.PropertyInfo.PropertyExport.EditorAndGame, null, null, Fox.Core.PropertyInfo.PropertyStorage.Instance, Fox.Core.PropertyInfo.BackingType.Field));
			classInfo.AddStaticProperty(new Fox.Core.PropertyInfo("demoStreamPath", Fox.Core.PropertyInfo.PropertyType.Path, 696, 1, Fox.Core.PropertyInfo.ContainerType.StaticArray, Fox.Core.PropertyInfo.PropertyExport.EditorAndGame, Fox.Core.PropertyInfo.PropertyExport.EditorAndGame, null, null, Fox.Core.PropertyInfo.PropertyStorage.Instance, Fox.Core.PropertyInfo.BackingType.Field));
			classInfo.AddStaticProperty(new Fox.Core.PropertyInfo("motionPath", Fox.Core.PropertyInfo.PropertyType.Path, 704, 1, Fox.Core.PropertyInfo.ContainerType.StaticArray, Fox.Core.PropertyInfo.PropertyExport.EditorAndGame, Fox.Core.PropertyInfo.PropertyExport.EditorAndGame, null, null, Fox.Core.PropertyInfo.PropertyStorage.Instance, Fox.Core.PropertyInfo.BackingType.Field));
			classInfo.AddStaticProperty(new Fox.Core.PropertyInfo("motionFile", Fox.Core.PropertyInfo.PropertyType.FilePtr, 712, 1, Fox.Core.PropertyInfo.ContainerType.StaticArray, Fox.Core.PropertyInfo.PropertyExport.EditorAndGame, Fox.Core.PropertyInfo.PropertyExport.EditorAndGame, null, null, Fox.Core.PropertyInfo.PropertyStorage.Instance, Fox.Core.PropertyInfo.BackingType.Field));
			classInfo.AddStaticProperty(new Fox.Core.PropertyInfo("audioPath", Fox.Core.PropertyInfo.PropertyType.Path, 736, 1, Fox.Core.PropertyInfo.ContainerType.StaticArray, Fox.Core.PropertyInfo.PropertyExport.EditorAndGame, Fox.Core.PropertyInfo.PropertyExport.EditorAndGame, null, null, Fox.Core.PropertyInfo.PropertyStorage.Instance, Fox.Core.PropertyInfo.BackingType.Field));
			classInfo.AddStaticProperty(new Fox.Core.PropertyInfo("subtitleFile", Fox.Core.PropertyInfo.PropertyType.FilePtr, 744, 1, Fox.Core.PropertyInfo.ContainerType.StaticArray, Fox.Core.PropertyInfo.PropertyExport.EditorAndGame, Fox.Core.PropertyInfo.PropertyExport.EditorAndGame, null, null, Fox.Core.PropertyInfo.PropertyStorage.Instance, Fox.Core.PropertyInfo.BackingType.Field));
			classInfo.AddStaticProperty(new Fox.Core.PropertyInfo("subtitleBinaryFile", Fox.Core.PropertyInfo.PropertyType.FilePtr, 768, 1, Fox.Core.PropertyInfo.ContainerType.StaticArray, Fox.Core.PropertyInfo.PropertyExport.EditorAndGame, Fox.Core.PropertyInfo.PropertyExport.EditorAndGame, null, null, Fox.Core.PropertyInfo.PropertyStorage.Instance, Fox.Core.PropertyInfo.BackingType.Field));
			classInfo.AddStaticProperty(new Fox.Core.PropertyInfo("nodeDataFile", Fox.Core.PropertyInfo.PropertyType.FilePtr, 792, 1, Fox.Core.PropertyInfo.ContainerType.StaticArray, Fox.Core.PropertyInfo.PropertyExport.EditorAndGame, Fox.Core.PropertyInfo.PropertyExport.EditorAndGame, null, null, Fox.Core.PropertyInfo.PropertyStorage.Instance, Fox.Core.PropertyInfo.BackingType.Field));
			classInfo.AddStaticProperty(new Fox.Core.PropertyInfo("stringParams", Fox.Core.PropertyInfo.PropertyType.String, 816, 1, Fox.Core.PropertyInfo.ContainerType.DynamicArray, Fox.Core.PropertyInfo.PropertyExport.EditorAndGame, Fox.Core.PropertyInfo.PropertyExport.EditorAndGame, null, null, Fox.Core.PropertyInfo.PropertyStorage.Instance, Fox.Core.PropertyInfo.BackingType.Field));
			classInfo.AddStaticProperty(new Fox.Core.PropertyInfo("entityParams", Fox.Core.PropertyInfo.PropertyType.EntityLink, 832, 1, Fox.Core.PropertyInfo.ContainerType.StringMap, Fox.Core.PropertyInfo.PropertyExport.EditorAndGame, Fox.Core.PropertyInfo.PropertyExport.EditorAndGame, null, null, Fox.Core.PropertyInfo.PropertyStorage.Instance, Fox.Core.PropertyInfo.BackingType.Field));
			classInfo.AddStaticProperty(new Fox.Core.PropertyInfo("fileParams", Fox.Core.PropertyInfo.PropertyType.FilePtr, 880, 1, Fox.Core.PropertyInfo.ContainerType.StringMap, Fox.Core.PropertyInfo.PropertyExport.EditorAndGame, Fox.Core.PropertyInfo.PropertyExport.EditorAndGame, null, null, Fox.Core.PropertyInfo.PropertyStorage.Instance, Fox.Core.PropertyInfo.BackingType.Field));
			classInfo.AddStaticProperty(new Fox.Core.PropertyInfo("controlCharacters", Fox.Core.PropertyInfo.PropertyType.EntityPtr, 928, 1, Fox.Core.PropertyInfo.ContainerType.StringMap, Fox.Core.PropertyInfo.PropertyExport.EditorAndGame, Fox.Core.PropertyInfo.PropertyExport.EditorAndGame, typeof(Fox.Demo.DemoControlCharacterDesc), null, Fox.Core.PropertyInfo.PropertyStorage.Instance, Fox.Core.PropertyInfo.BackingType.Field));
			classInfo.AddStaticProperty(new Fox.Core.PropertyInfo("controlDatas", Fox.Core.PropertyInfo.PropertyType.EntityLink, 976, 1, Fox.Core.PropertyInfo.ContainerType.StringMap, Fox.Core.PropertyInfo.PropertyExport.EditorAndGame, Fox.Core.PropertyInfo.PropertyExport.EditorAndGame, null, null, Fox.Core.PropertyInfo.PropertyStorage.Instance, Fox.Core.PropertyInfo.BackingType.Field));
			classInfo.AddStaticProperty(new Fox.Core.PropertyInfo("controlCollectibles", Fox.Core.PropertyInfo.PropertyType.String, 1024, 1, Fox.Core.PropertyInfo.ContainerType.StringMap, Fox.Core.PropertyInfo.PropertyExport.EditorAndGame, Fox.Core.PropertyInfo.PropertyExport.EditorAndGame, null, null, Fox.Core.PropertyInfo.PropertyStorage.Instance, Fox.Core.PropertyInfo.BackingType.Field));
			classInfo.AddStaticProperty(new Fox.Core.PropertyInfo("parameters", Fox.Core.PropertyInfo.PropertyType.EntityPtr, 1072, 1, Fox.Core.PropertyInfo.ContainerType.StringMap, Fox.Core.PropertyInfo.PropertyExport.EditorAndGame, Fox.Core.PropertyInfo.PropertyExport.EditorAndGame, typeof(Fox.Demo.DemoParameter), null, Fox.Core.PropertyInfo.PropertyStorage.Instance, Fox.Core.PropertyInfo.BackingType.Field));
			classInfo.AddStaticProperty(new Fox.Core.PropertyInfo("setupLights", Fox.Core.PropertyInfo.PropertyType.String, 560, 1, Fox.Core.PropertyInfo.ContainerType.StringMap, Fox.Core.PropertyInfo.PropertyExport.EditorAndGame, Fox.Core.PropertyInfo.PropertyExport.EditorAndGame, null, null, Fox.Core.PropertyInfo.PropertyStorage.Instance, Fox.Core.PropertyInfo.BackingType.Field));
			classInfo.AddStaticProperty(new Fox.Core.PropertyInfo("cameraInterpType", Fox.Core.PropertyInfo.PropertyType.Int32, 1152, 1, Fox.Core.PropertyInfo.ContainerType.StaticArray, Fox.Core.PropertyInfo.PropertyExport.EditorAndGame, Fox.Core.PropertyInfo.PropertyExport.EditorAndGame, null, typeof(Utility_InterpType), Fox.Core.PropertyInfo.PropertyStorage.Instance, Fox.Core.PropertyInfo.BackingType.Field));
			classInfo.AddStaticProperty(new Fox.Core.PropertyInfo("cameraInterpFrame", Fox.Core.PropertyInfo.PropertyType.Int32, 1156, 1, Fox.Core.PropertyInfo.ContainerType.StaticArray, Fox.Core.PropertyInfo.PropertyExport.EditorAndGame, Fox.Core.PropertyInfo.PropertyExport.EditorAndGame, null, null, Fox.Core.PropertyInfo.PropertyStorage.Instance, Fox.Core.PropertyInfo.BackingType.Field));
			classInfo.AddStaticProperty(new Fox.Core.PropertyInfo("cameraInterpCurveRate", Fox.Core.PropertyInfo.PropertyType.Float, 1160, 1, Fox.Core.PropertyInfo.ContainerType.StaticArray, Fox.Core.PropertyInfo.PropertyExport.EditorAndGame, Fox.Core.PropertyInfo.PropertyExport.EditorAndGame, null, null, Fox.Core.PropertyInfo.PropertyStorage.Instance, Fox.Core.PropertyInfo.BackingType.Field));
			classInfo.AddStaticProperty(new Fox.Core.PropertyInfo("cameraInterpScurveCenter", Fox.Core.PropertyInfo.PropertyType.Float, 1164, 1, Fox.Core.PropertyInfo.ContainerType.StaticArray, Fox.Core.PropertyInfo.PropertyExport.EditorAndGame, Fox.Core.PropertyInfo.PropertyExport.EditorAndGame, null, null, Fox.Core.PropertyInfo.PropertyStorage.Instance, Fox.Core.PropertyInfo.BackingType.Field));
			classInfo.AddStaticProperty(new Fox.Core.PropertyInfo("cameraTranslation", Fox.Core.PropertyInfo.PropertyType.Vector3, 1168, 1, Fox.Core.PropertyInfo.ContainerType.StaticArray, Fox.Core.PropertyInfo.PropertyExport.EditorAndGame, Fox.Core.PropertyInfo.PropertyExport.EditorAndGame, null, null, Fox.Core.PropertyInfo.PropertyStorage.Instance, Fox.Core.PropertyInfo.BackingType.Field));
			classInfo.AddStaticProperty(new Fox.Core.PropertyInfo("cameraRotation", Fox.Core.PropertyInfo.PropertyType.Quat, 1184, 1, Fox.Core.PropertyInfo.ContainerType.StaticArray, Fox.Core.PropertyInfo.PropertyExport.EditorAndGame, Fox.Core.PropertyInfo.PropertyExport.EditorAndGame, null, null, Fox.Core.PropertyInfo.PropertyStorage.Instance, Fox.Core.PropertyInfo.BackingType.Field));
			classInfo.AddStaticProperty(new Fox.Core.PropertyInfo("cameraParam", Fox.Core.PropertyInfo.PropertyType.Float, 1200, 1, Fox.Core.PropertyInfo.ContainerType.StaticArray, Fox.Core.PropertyInfo.PropertyExport.EditorAndGame, Fox.Core.PropertyInfo.PropertyExport.EditorAndGame, null, null, Fox.Core.PropertyInfo.PropertyStorage.Instance, Fox.Core.PropertyInfo.BackingType.Field));
			classInfo.AddStaticProperty(new Fox.Core.PropertyInfo("cameraDistanceToLookAt", Fox.Core.PropertyInfo.PropertyType.Float, 1204, 1, Fox.Core.PropertyInfo.ContainerType.StaticArray, Fox.Core.PropertyInfo.PropertyExport.EditorAndGame, Fox.Core.PropertyInfo.PropertyExport.EditorAndGame, null, null, Fox.Core.PropertyInfo.PropertyStorage.Instance, Fox.Core.PropertyInfo.BackingType.Field));
			classInfo.AddStaticProperty(new Fox.Core.PropertyInfo("cameraStartTranslation", Fox.Core.PropertyInfo.PropertyType.Vector3, 1216, 1, Fox.Core.PropertyInfo.ContainerType.StaticArray, Fox.Core.PropertyInfo.PropertyExport.EditorAndGame, Fox.Core.PropertyInfo.PropertyExport.EditorAndGame, null, null, Fox.Core.PropertyInfo.PropertyStorage.Instance, Fox.Core.PropertyInfo.BackingType.Field));
			classInfo.AddStaticProperty(new Fox.Core.PropertyInfo("cameraStartRotation", Fox.Core.PropertyInfo.PropertyType.Quat, 1232, 1, Fox.Core.PropertyInfo.ContainerType.StaticArray, Fox.Core.PropertyInfo.PropertyExport.EditorAndGame, Fox.Core.PropertyInfo.PropertyExport.EditorAndGame, null, null, Fox.Core.PropertyInfo.PropertyStorage.Instance, Fox.Core.PropertyInfo.BackingType.Field));
			classInfo.AddStaticProperty(new Fox.Core.PropertyInfo("cameraStartParam", Fox.Core.PropertyInfo.PropertyType.Float, 1248, 1, Fox.Core.PropertyInfo.ContainerType.StaticArray, Fox.Core.PropertyInfo.PropertyExport.EditorAndGame, Fox.Core.PropertyInfo.PropertyExport.EditorAndGame, null, null, Fox.Core.PropertyInfo.PropertyStorage.Instance, Fox.Core.PropertyInfo.BackingType.Field));
			classInfo.AddStaticProperty(new Fox.Core.PropertyInfo("cameraStartDistanceToLookAt", Fox.Core.PropertyInfo.PropertyType.Float, 1252, 1, Fox.Core.PropertyInfo.ContainerType.StaticArray, Fox.Core.PropertyInfo.PropertyExport.EditorAndGame, Fox.Core.PropertyInfo.PropertyExport.EditorAndGame, null, null, Fox.Core.PropertyInfo.PropertyStorage.Instance, Fox.Core.PropertyInfo.BackingType.Field));
			classInfo.AddStaticProperty(new Fox.Core.PropertyInfo("eventCacheNum", Fox.Core.PropertyInfo.PropertyType.Int32, 1256, 1, Fox.Core.PropertyInfo.ContainerType.StaticArray, Fox.Core.PropertyInfo.PropertyExport.EditorAndGame, Fox.Core.PropertyInfo.PropertyExport.EditorAndGame, null, null, Fox.Core.PropertyInfo.PropertyStorage.Instance, Fox.Core.PropertyInfo.BackingType.Field));
			classInfo.AddStaticProperty(new Fox.Core.PropertyInfo("eventInterpCacheNum", Fox.Core.PropertyInfo.PropertyType.Int32, 1260, 1, Fox.Core.PropertyInfo.ContainerType.StaticArray, Fox.Core.PropertyInfo.PropertyExport.EditorAndGame, Fox.Core.PropertyInfo.PropertyExport.EditorAndGame, null, null, Fox.Core.PropertyInfo.PropertyStorage.Instance, Fox.Core.PropertyInfo.BackingType.Field));
			classInfo.AddStaticProperty(new Fox.Core.PropertyInfo("eventSkipCacheNum", Fox.Core.PropertyInfo.PropertyType.Int32, 1264, 1, Fox.Core.PropertyInfo.ContainerType.StaticArray, Fox.Core.PropertyInfo.PropertyExport.EditorAndGame, Fox.Core.PropertyInfo.PropertyExport.EditorAndGame, null, null, Fox.Core.PropertyInfo.PropertyStorage.Instance, Fox.Core.PropertyInfo.BackingType.Field));
			classInfo.AddStaticProperty(new Fox.Core.PropertyInfo("highestTextureStreamModel", Fox.Core.PropertyInfo.PropertyType.String, 1120, 1, Fox.Core.PropertyInfo.ContainerType.DynamicArray, Fox.Core.PropertyInfo.PropertyExport.EditorAndGame, Fox.Core.PropertyInfo.PropertyExport.EditorAndGame, null, null, Fox.Core.PropertyInfo.PropertyStorage.Instance, Fox.Core.PropertyInfo.BackingType.Field));
			classInfo.AddStaticProperty(new Fox.Core.PropertyInfo("highestTexture", Fox.Core.PropertyInfo.PropertyType.Path, 1136, 1, Fox.Core.PropertyInfo.ContainerType.DynamicArray, Fox.Core.PropertyInfo.PropertyExport.EditorAndGame, Fox.Core.PropertyInfo.PropertyExport.EditorAndGame, null, null, Fox.Core.PropertyInfo.PropertyStorage.Instance, Fox.Core.PropertyInfo.BackingType.Field));
			classInfo.AddStaticProperty(new Fox.Core.PropertyInfo("objectNum", Fox.Core.PropertyInfo.PropertyType.Int32, 1272, 1, Fox.Core.PropertyInfo.ContainerType.StringMap, Fox.Core.PropertyInfo.PropertyExport.EditorAndGame, Fox.Core.PropertyInfo.PropertyExport.EditorAndGame, null, null, Fox.Core.PropertyInfo.PropertyStorage.Instance, Fox.Core.PropertyInfo.BackingType.Field));
			classInfo.AddStaticProperty(new Fox.Core.PropertyInfo("blockPositionSetter", Fox.Core.PropertyInfo.PropertyType.EntityLink, 520, 1, Fox.Core.PropertyInfo.ContainerType.StaticArray, Fox.Core.PropertyInfo.PropertyExport.EditorAndGame, Fox.Core.PropertyInfo.PropertyExport.EditorAndGame, null, null, Fox.Core.PropertyInfo.PropertyStorage.Instance, Fox.Core.PropertyInfo.BackingType.Field));

			ClassInfoInitialized = true;
		}
		
		public override Fox.Core.Value GetProperty(string propertyName)
		{
			switch (propertyName)
			{
				case "evfFiles":
					return new Fox.Core.Value(evfFiles);
				case "onMemory":
					return new Fox.Core.Value(onMemory);
				case "demoLength":
					return new Fox.Core.Value(demoLength);
				case "priority":
					return new Fox.Core.Value(priority);
				case "scriptPath":
					return new Fox.Core.Value(scriptPath);
				case "fmdlFiles":
					return new Fox.Core.Value((Fox.IStringMap)fmdlFiles);
				case "helpBoneFiles":
					return new Fox.Core.Value((Fox.IStringMap)helpBoneFiles);
				case "partsDesc":
					return new Fox.Core.Value((Fox.IStringMap)partsDesc);
				case "clipDatas":
					return new Fox.Core.Value(clipDatas);
				case "loadFiles":
					return new Fox.Core.Value(loadFiles);
				case "demoId":
					return new Fox.Core.Value(demoId);
				case "playingRoot":
					return new Fox.Core.Value(playingRoot);
				case "streamAnimation":
					return new Fox.Core.Value(streamAnimation);
				case "demoStreamPath":
					return new Fox.Core.Value(demoStreamPath);
				case "motionPath":
					return new Fox.Core.Value(motionPath);
				case "motionFile":
					return new Fox.Core.Value(motionFile);
				case "audioPath":
					return new Fox.Core.Value(audioPath);
				case "subtitleFile":
					return new Fox.Core.Value(subtitleFile);
				case "subtitleBinaryFile":
					return new Fox.Core.Value(subtitleBinaryFile);
				case "nodeDataFile":
					return new Fox.Core.Value(nodeDataFile);
				case "stringParams":
					return new Fox.Core.Value(stringParams);
				case "entityParams":
					return new Fox.Core.Value((Fox.IStringMap)entityParams);
				case "fileParams":
					return new Fox.Core.Value((Fox.IStringMap)fileParams);
				case "controlCharacters":
					return new Fox.Core.Value((Fox.IStringMap)controlCharacters);
				case "controlDatas":
					return new Fox.Core.Value((Fox.IStringMap)controlDatas);
				case "controlCollectibles":
					return new Fox.Core.Value((Fox.IStringMap)controlCollectibles);
				case "parameters":
					return new Fox.Core.Value((Fox.IStringMap)parameters);
				case "setupLights":
					return new Fox.Core.Value((Fox.IStringMap)setupLights);
				case "cameraInterpType":
					return new Fox.Core.Value(cameraInterpType);
				case "cameraInterpFrame":
					return new Fox.Core.Value(cameraInterpFrame);
				case "cameraInterpCurveRate":
					return new Fox.Core.Value(cameraInterpCurveRate);
				case "cameraInterpScurveCenter":
					return new Fox.Core.Value(cameraInterpScurveCenter);
				case "cameraTranslation":
					return new Fox.Core.Value(cameraTranslation);
				case "cameraRotation":
					return new Fox.Core.Value(cameraRotation);
				case "cameraParam":
					return new Fox.Core.Value(cameraParam);
				case "cameraDistanceToLookAt":
					return new Fox.Core.Value(cameraDistanceToLookAt);
				case "cameraStartTranslation":
					return new Fox.Core.Value(cameraStartTranslation);
				case "cameraStartRotation":
					return new Fox.Core.Value(cameraStartRotation);
				case "cameraStartParam":
					return new Fox.Core.Value(cameraStartParam);
				case "cameraStartDistanceToLookAt":
					return new Fox.Core.Value(cameraStartDistanceToLookAt);
				case "eventCacheNum":
					return new Fox.Core.Value(eventCacheNum);
				case "eventInterpCacheNum":
					return new Fox.Core.Value(eventInterpCacheNum);
				case "eventSkipCacheNum":
					return new Fox.Core.Value(eventSkipCacheNum);
				case "highestTextureStreamModel":
					return new Fox.Core.Value(highestTextureStreamModel);
				case "highestTexture":
					return new Fox.Core.Value(highestTexture);
				case "objectNum":
					return new Fox.Core.Value((Fox.IStringMap)objectNum);
				case "blockPositionSetter":
					return new Fox.Core.Value(blockPositionSetter);
				default:
					return base.GetProperty(propertyName);
			}
		}

		public override Fox.Core.Value GetPropertyElement(string propertyName, ushort index)
		{
			switch (propertyName)
			{
				case "evfFiles":
					return new Fox.Core.Value(this.evfFiles[index]);
				case "clipDatas":
					return new Fox.Core.Value(this.clipDatas[index]);
				case "loadFiles":
					return new Fox.Core.Value(this.loadFiles[index]);
				case "stringParams":
					return new Fox.Core.Value(this.stringParams[index]);
				case "highestTextureStreamModel":
					return new Fox.Core.Value(this.highestTextureStreamModel[index]);
				case "highestTexture":
					return new Fox.Core.Value(this.highestTexture[index]);
				default:
					return base.GetPropertyElement(propertyName, index);
			}
		}

		public override Fox.Core.Value GetPropertyElement(string propertyName, string key)
		{
			switch (propertyName)
			{
				case "fmdlFiles":
					return new Fox.Core.Value(this.fmdlFiles[key]);
				case "helpBoneFiles":
					return new Fox.Core.Value(this.helpBoneFiles[key]);
				case "partsDesc":
					return new Fox.Core.Value(this.partsDesc[key]);
				case "entityParams":
					return new Fox.Core.Value(this.entityParams[key]);
				case "fileParams":
					return new Fox.Core.Value(this.fileParams[key]);
				case "controlCharacters":
					return new Fox.Core.Value(this.controlCharacters[key]);
				case "controlDatas":
					return new Fox.Core.Value(this.controlDatas[key]);
				case "controlCollectibles":
					return new Fox.Core.Value(this.controlCollectibles[key]);
				case "parameters":
					return new Fox.Core.Value(this.parameters[key]);
				case "setupLights":
					return new Fox.Core.Value(this.setupLights[key]);
				case "objectNum":
					return new Fox.Core.Value(this.objectNum[key]);
				default:
					return base.GetPropertyElement(propertyName, key);
			}
		}

		public override void SetProperty(string propertyName, Fox.Core.Value value)
		{
			switch (propertyName)
			{
				case "onMemory":
					this.onMemory = value.GetValueAsBool();
					return;
				case "demoLength":
					this.demoLength = value.GetValueAsInt32();
					return;
				case "priority":
					this.priority = value.GetValueAsInt32();
					return;
				case "scriptPath":
					this.scriptPath = value.GetValueAsPath();
					return;
				case "demoId":
					this.demoId = value.GetValueAsString();
					return;
				case "playingRoot":
					this.playingRoot = value.GetValueAsEntityLink();
					return;
				case "streamAnimation":
					this.streamAnimation = value.GetValueAsEntityLink();
					return;
				case "demoStreamPath":
					this.demoStreamPath = value.GetValueAsPath();
					return;
				case "motionPath":
					this.motionPath = value.GetValueAsPath();
					return;
				case "motionFile":
					this.motionFile = value.GetValueAsFilePtr();
					return;
				case "audioPath":
					this.audioPath = value.GetValueAsPath();
					return;
				case "subtitleFile":
					this.subtitleFile = value.GetValueAsFilePtr();
					return;
				case "subtitleBinaryFile":
					this.subtitleBinaryFile = value.GetValueAsFilePtr();
					return;
				case "nodeDataFile":
					this.nodeDataFile = value.GetValueAsFilePtr();
					return;
				case "cameraInterpType":
					this.cameraInterpType = (Utility_InterpType)value.GetValueAsInt32();
					return;
				case "cameraInterpFrame":
					this.cameraInterpFrame = value.GetValueAsInt32();
					return;
				case "cameraInterpCurveRate":
					this.cameraInterpCurveRate = value.GetValueAsFloat();
					return;
				case "cameraInterpScurveCenter":
					this.cameraInterpScurveCenter = value.GetValueAsFloat();
					return;
				case "cameraTranslation":
					this.cameraTranslation = value.GetValueAsVector3();
					return;
				case "cameraRotation":
					this.cameraRotation = value.GetValueAsQuat();
					return;
				case "cameraParam":
					this.cameraParam = value.GetValueAsFloat();
					return;
				case "cameraDistanceToLookAt":
					this.cameraDistanceToLookAt = value.GetValueAsFloat();
					return;
				case "cameraStartTranslation":
					this.cameraStartTranslation = value.GetValueAsVector3();
					return;
				case "cameraStartRotation":
					this.cameraStartRotation = value.GetValueAsQuat();
					return;
				case "cameraStartParam":
					this.cameraStartParam = value.GetValueAsFloat();
					return;
				case "cameraStartDistanceToLookAt":
					this.cameraStartDistanceToLookAt = value.GetValueAsFloat();
					return;
				case "eventCacheNum":
					this.eventCacheNum = value.GetValueAsInt32();
					return;
				case "eventInterpCacheNum":
					this.eventInterpCacheNum = value.GetValueAsInt32();
					return;
				case "eventSkipCacheNum":
					this.eventSkipCacheNum = value.GetValueAsInt32();
					return;
				case "blockPositionSetter":
					this.blockPositionSetter = value.GetValueAsEntityLink();
					return;
				default:
					base.SetProperty(propertyName, value);
					return;
			}
		}

		public override void SetPropertyElement(string propertyName, ushort index, Fox.Core.Value value)
		{
			switch (propertyName)
			{
				case "evfFiles":
					while(this.evfFiles.Count <= index) { this.evfFiles.Add(default(Fox.Core.FilePtr)); }
					this.evfFiles[index] = value.GetValueAsFilePtr();
					return;
				case "clipDatas":
					while(this.clipDatas.Count <= index) { this.clipDatas.Add(default(Fox.Demo.ClipData)); }
					this.clipDatas[index] = value.GetValueAsEntityPtr<Fox.Demo.ClipData>();
					return;
				case "loadFiles":
					while(this.loadFiles.Count <= index) { this.loadFiles.Add(default(Fox.Path)); }
					this.loadFiles[index] = value.GetValueAsPath();
					return;
				case "stringParams":
					while(this.stringParams.Count <= index) { this.stringParams.Add(default(string)); }
					this.stringParams[index] = value.GetValueAsString();
					return;
				case "highestTextureStreamModel":
					while(this.highestTextureStreamModel.Count <= index) { this.highestTextureStreamModel.Add(default(string)); }
					this.highestTextureStreamModel[index] = value.GetValueAsString();
					return;
				case "highestTexture":
					while(this.highestTexture.Count <= index) { this.highestTexture.Add(default(Fox.Path)); }
					this.highestTexture[index] = value.GetValueAsPath();
					return;
				default:
					base.SetPropertyElement(propertyName, index, value);
					return;
			}
		}

		public override void SetPropertyElement(string propertyName, string key, Fox.Core.Value value)
		{
			switch (propertyName)
			{
				case "fmdlFiles":
					if (this.fmdlFiles.ContainsKey(key))
						this.fmdlFiles[key] = value.GetValueAsFilePtr();
					else
						this.fmdlFiles.Insert(key, value.GetValueAsFilePtr());
					return;
				case "helpBoneFiles":
					if (this.helpBoneFiles.ContainsKey(key))
						this.helpBoneFiles[key] = value.GetValueAsFilePtr();
					else
						this.helpBoneFiles.Insert(key, value.GetValueAsFilePtr());
					return;
				case "partsDesc":
					if (this.partsDesc.ContainsKey(key))
						this.partsDesc[key] = value.GetValueAsEntityPtr<Fox.Demo.PartsDesc>();
					else
						this.partsDesc.Insert(key, value.GetValueAsEntityPtr<Fox.Demo.PartsDesc>());
					return;
				case "entityParams":
					if (this.entityParams.ContainsKey(key))
						this.entityParams[key] = value.GetValueAsEntityLink();
					else
						this.entityParams.Insert(key, value.GetValueAsEntityLink());
					return;
				case "fileParams":
					if (this.fileParams.ContainsKey(key))
						this.fileParams[key] = value.GetValueAsFilePtr();
					else
						this.fileParams.Insert(key, value.GetValueAsFilePtr());
					return;
				case "controlCharacters":
					if (this.controlCharacters.ContainsKey(key))
						this.controlCharacters[key] = value.GetValueAsEntityPtr<Fox.Demo.DemoControlCharacterDesc>();
					else
						this.controlCharacters.Insert(key, value.GetValueAsEntityPtr<Fox.Demo.DemoControlCharacterDesc>());
					return;
				case "controlDatas":
					if (this.controlDatas.ContainsKey(key))
						this.controlDatas[key] = value.GetValueAsEntityLink();
					else
						this.controlDatas.Insert(key, value.GetValueAsEntityLink());
					return;
				case "controlCollectibles":
					if (this.controlCollectibles.ContainsKey(key))
						this.controlCollectibles[key] = value.GetValueAsString();
					else
						this.controlCollectibles.Insert(key, value.GetValueAsString());
					return;
				case "parameters":
					if (this.parameters.ContainsKey(key))
						this.parameters[key] = value.GetValueAsEntityPtr<Fox.Demo.DemoParameter>();
					else
						this.parameters.Insert(key, value.GetValueAsEntityPtr<Fox.Demo.DemoParameter>());
					return;
				case "setupLights":
					if (this.setupLights.ContainsKey(key))
						this.setupLights[key] = value.GetValueAsString();
					else
						this.setupLights.Insert(key, value.GetValueAsString());
					return;
				case "objectNum":
					if (this.objectNum.ContainsKey(key))
						this.objectNum[key] = value.GetValueAsInt32();
					else
						this.objectNum.Insert(key, value.GetValueAsInt32());
					return;
				default:
					base.SetPropertyElement(propertyName, key, value);
					return;
			}
		}
	}
}