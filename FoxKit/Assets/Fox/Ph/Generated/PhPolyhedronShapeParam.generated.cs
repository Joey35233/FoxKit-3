//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using CsSystem = System;
using Fox;

namespace Fox.Ph
{
	[UnityEditor.InitializeOnLoad, UnityEngine.AddComponentMenu("Ph/PhPolyhedronShapeParam")]
	public partial class PhPolyhedronShapeParam : Fox.Ph.PhShapeParam
	{
		// Properties
		[field: UnityEngine.SerializeField]
		protected CsSystem.Collections.Generic.List<UnityEngine.Vector3> verts { get; private set; } = new CsSystem.Collections.Generic.List<UnityEngine.Vector3>();
		
		[field: UnityEngine.SerializeField]
		protected CsSystem.Collections.Generic.List<uint> polys { get; private set; } = new CsSystem.Collections.Generic.List<uint>();
		
		// ClassInfos
		public static new bool ClassInfoInitialized = false;
		private static Fox.Core.EntityInfo classInfo;
		public static new Fox.Core.EntityInfo ClassInfo
		{
			get
			{
				return classInfo;
			}
		}
		public override Fox.Core.EntityInfo GetClassEntityInfo()
		{
			return classInfo;
		}
		static PhPolyhedronShapeParam()
		{
			if (Fox.Ph.PhShapeParam.ClassInfoInitialized)
				classInfo = new Fox.Core.EntityInfo("PhPolyhedronShapeParam", typeof(PhPolyhedronShapeParam), Fox.Ph.PhShapeParam.ClassInfo, 0, "Ph", 0);
			classInfo.AddStaticProperty(new Fox.Core.PropertyInfo("verts", Fox.Core.PropertyInfo.PropertyType.Vector3, 112, 1, Fox.Core.PropertyInfo.ContainerType.DynamicArray, Fox.Core.PropertyInfo.PropertyExport.Never, Fox.Core.PropertyInfo.PropertyExport.Never, null, null, Fox.Core.PropertyInfo.PropertyStorage.Instance, Fox.Core.PropertyInfo.BackingType.Field));
			classInfo.AddStaticProperty(new Fox.Core.PropertyInfo("polys", Fox.Core.PropertyInfo.PropertyType.UInt32, 128, 1, Fox.Core.PropertyInfo.ContainerType.DynamicArray, Fox.Core.PropertyInfo.PropertyExport.Never, Fox.Core.PropertyInfo.PropertyExport.Never, null, null, Fox.Core.PropertyInfo.PropertyStorage.Instance, Fox.Core.PropertyInfo.BackingType.Field));

			ClassInfoInitialized = true;
		}
		
		public override Fox.Core.Value GetProperty(string propertyName)
		{
			switch (propertyName)
			{
				case "verts":
					return new Fox.Core.Value(verts);
				case "polys":
					return new Fox.Core.Value(polys);
				default:
					return base.GetProperty(propertyName);
			}
		}

		public override Fox.Core.Value GetPropertyElement(string propertyName, ushort index)
		{
			switch (propertyName)
			{
				case "verts":
					return new Fox.Core.Value(this.verts[index]);
				case "polys":
					return new Fox.Core.Value(this.polys[index]);
				default:
					return base.GetPropertyElement(propertyName, index);
			}
		}

		public override Fox.Core.Value GetPropertyElement(string propertyName, string key)
		{
			switch (propertyName)
			{
				default:
					return base.GetPropertyElement(propertyName, key);
			}
		}

		public override void SetProperty(string propertyName, Fox.Core.Value value)
		{
			switch (propertyName)
			{
				default:
					base.SetProperty(propertyName, value);
					return;
			}
		}

		public override void SetPropertyElement(string propertyName, ushort index, Fox.Core.Value value)
		{
			switch (propertyName)
			{
				case "verts":
					while(this.verts.Count <= index) { this.verts.Add(default(UnityEngine.Vector3)); }
					this.verts[index] = value.GetValueAsVector3();
					return;
				case "polys":
					while(this.polys.Count <= index) { this.polys.Add(default(uint)); }
					this.polys[index] = value.GetValueAsUInt32();
					return;
				default:
					base.SetPropertyElement(propertyName, index, value);
					return;
			}
		}

		public override void SetPropertyElement(string propertyName, string key, Fox.Core.Value value)
		{
			switch (propertyName)
			{
				default:
					base.SetPropertyElement(propertyName, key, value);
					return;
			}
		}
	}
}