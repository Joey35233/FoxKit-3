//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
namespace Fox.FoxCore
{
    public partial class TransformData : FoxCore.Data 
    {
        // Properties
        public EntityHandle parent { get; set; }
        
        public EntityPtr<FoxCore.TransformEntity> transform { get; set; }
        
        public EntityPtr<FoxCore.ShearTransformEntity> shearTransform { get; set; }
        
        public EntityPtr<FoxCore.PivotTransformEntity> pivotTransform { get; set; }
        
        public System.Collections.Generic.IList<EntityHandle> children { get; } = new System.Collections.Generic.List<EntityHandle>();
        
        public FoxCore.TransformData_Flags flags { get; set; }
        
        public bool inheritTransform { get; set; }
        
        public bool visibility { get; set; }
        
        public bool selection { get; set; }
        
        public System.Numerics.Matrix4x4 worldMatrix { get; set; }
        
        public System.Numerics.Matrix4x4 worldTransform { get; set; }
        
        // PropertyInfo
        private static EntityInfo classInfo;
        public static new EntityInfo ClassInfo
        {
            get
            {
                return classInfo;
            }
        }
        public override EntityInfo GetClassEntityInfo()
        {
            return classInfo;
        }
        static TransformData()
        {
            classInfo = new EntityInfo(new String("TransformData"), base.GetClassEntityInfo(), 0, null, 4);
			
			classInfo.StaticProperties.Insert(new String("parent"), new PropertyInfo(PropertyInfo.PropertyType.EntityHandle, 120, 1, PropertyInfo.ContainerType.StaticArray, PropertyInfo.PropertyExport.EditorAndGame, PropertyInfo.PropertyExport.EditorOnly, null, null, PropertyInfo.PropertyStorage.Instance));
			classInfo.StaticProperties.Insert(new String("transform"), new PropertyInfo(PropertyInfo.PropertyType.EntityPtr, 128, 1, PropertyInfo.ContainerType.StaticArray, PropertyInfo.PropertyExport.EditorAndGame, PropertyInfo.PropertyExport.EditorAndGame, typeof(FoxCore.TransformEntity), null, PropertyInfo.PropertyStorage.Instance));
			classInfo.StaticProperties.Insert(new String("shearTransform"), new PropertyInfo(PropertyInfo.PropertyType.EntityPtr, 136, 1, PropertyInfo.ContainerType.StaticArray, PropertyInfo.PropertyExport.EditorAndGame, PropertyInfo.PropertyExport.EditorAndGame, typeof(FoxCore.ShearTransformEntity), null, PropertyInfo.PropertyStorage.Instance));
			classInfo.StaticProperties.Insert(new String("pivotTransform"), new PropertyInfo(PropertyInfo.PropertyType.EntityPtr, 144, 1, PropertyInfo.ContainerType.StaticArray, PropertyInfo.PropertyExport.EditorAndGame, PropertyInfo.PropertyExport.EditorAndGame, typeof(FoxCore.PivotTransformEntity), null, PropertyInfo.PropertyStorage.Instance));
			classInfo.StaticProperties.Insert(new String("children"), new PropertyInfo(PropertyInfo.PropertyType.EntityHandle, 152, 1, PropertyInfo.ContainerType.List, PropertyInfo.PropertyExport.Never, PropertyInfo.PropertyExport.Never, null, null, PropertyInfo.PropertyStorage.Instance));
			classInfo.StaticProperties.Insert(new String("flags"), new PropertyInfo(PropertyInfo.PropertyType.UInt32, 184, 1, PropertyInfo.ContainerType.StaticArray, PropertyInfo.PropertyExport.Never, PropertyInfo.PropertyExport.Never, null, typeof(FoxCore.TransformData_Flags), PropertyInfo.PropertyStorage.Instance));
			classInfo.StaticProperties.Insert(new String("inheritTransform"), new PropertyInfo(PropertyInfo.PropertyType.Bool, 0, 1, PropertyInfo.ContainerType.StaticArray, PropertyInfo.PropertyExport.EditorAndGame, PropertyInfo.PropertyExport.EditorAndGame, null, null, PropertyInfo.PropertyStorage.Instance));
			classInfo.StaticProperties.Insert(new String("visibility"), new PropertyInfo(PropertyInfo.PropertyType.Bool, 0, 1, PropertyInfo.ContainerType.StaticArray, PropertyInfo.PropertyExport.EditorAndGame, PropertyInfo.PropertyExport.EditorAndGame, null, null, PropertyInfo.PropertyStorage.Instance));
			classInfo.StaticProperties.Insert(new String("selection"), new PropertyInfo(PropertyInfo.PropertyType.Bool, 0, 1, PropertyInfo.ContainerType.StaticArray, PropertyInfo.PropertyExport.EditorAndGame, PropertyInfo.PropertyExport.EditorAndGame, null, null, PropertyInfo.PropertyStorage.Instance));
			classInfo.StaticProperties.Insert(new String("worldMatrix"), new PropertyInfo(PropertyInfo.PropertyType.Matrix4, 0, 1, PropertyInfo.ContainerType.StaticArray, PropertyInfo.PropertyExport.EditorAndGame, PropertyInfo.PropertyExport.Never, null, null, PropertyInfo.PropertyStorage.Instance));
			classInfo.StaticProperties.Insert(new String("worldTransform"), new PropertyInfo(PropertyInfo.PropertyType.Matrix4, 0, 1, PropertyInfo.ContainerType.StaticArray, PropertyInfo.PropertyExport.EditorAndGame, PropertyInfo.PropertyExport.Never, null, null, PropertyInfo.PropertyStorage.Instance));
        }

        // Constructor
		public TransformData(ulong address, ushort idA, ushort idB) : base(address, idA, idB) { }
        
        public override void SetProperty(String propertyName, Value value)
        {
            switch(propertyName.CString())
            {
                case "parent":
                    this.parent = value.GetValueAsEntityHandle();
                    return;
                case "transform":
                    this.transform = EntityPtr<FoxCore.TransformEntity>.Get(value.GetValueAsEntityPtr().Entity as FoxCore.TransformEntity);
                    return;
                case "shearTransform":
                    this.shearTransform = EntityPtr<FoxCore.ShearTransformEntity>.Get(value.GetValueAsEntityPtr().Entity as FoxCore.ShearTransformEntity);
                    return;
                case "pivotTransform":
                    this.pivotTransform = EntityPtr<FoxCore.PivotTransformEntity>.Get(value.GetValueAsEntityPtr().Entity as FoxCore.PivotTransformEntity);
                    return;
                case "flags":
                    this.flags = (FoxCore.TransformData_Flags)value.GetValueAsUInt32();
                    return;
                case "inheritTransform":
                    this.inheritTransform = value.GetValueAsBool();
                    return;
                case "visibility":
                    this.visibility = value.GetValueAsBool();
                    return;
                case "selection":
                    this.selection = value.GetValueAsBool();
                    return;
                case "worldMatrix":
                    this.worldMatrix = value.GetValueAsMatrix4();
                    return;
                case "worldTransform":
                    this.worldTransform = value.GetValueAsMatrix4();
                    return;
                default:
				    
                    base.SetProperty(propertyName, value);
                    return;
            }
        }
        
        public override void SetPropertyElement(String propertyName, ushort index, Value value)
        {
            switch(propertyName.CString())
            {
                case "children":
                    while(this.children.Count <= index) { this.children.Add(default(EntityHandle)); }
                    this.children[index] = value.GetValueAsEntityHandle();
                    return;
                default:
					
                    base.SetPropertyElement(propertyName, index, value);
                    return;
            }
        }
        
        public override void SetPropertyElement(String propertyName, String key, Value value)
        {
            switch(propertyName.CString())
            {
                default:
					
                    base.SetPropertyElement(propertyName, key, value);
                    return;
            }
        }
    }
}