//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
namespace Fox.FoxCore
{
    public partial class StageBlockControllerData : FoxCore.Data 
    {
        // Properties
        public bool enable { get; set; }
        
        public String stageName { get; set; }
        
        public bool useBaseDirectoryPathAndName { get; set; }
        
        public String baseDirectoryPath { get; set; }
        
        public String baseName { get; set; }
        
        public String smallBlock1BaseDirectoryPath { get; set; }
        
        public String smallBlock1BaseName { get; set; }
        
        public uint blockSizeX { get; set; }
        
        public uint blockSizeZ { get; set; }
        
        public uint countX { get; set; }
        
        public uint countZ { get; set; }
        
        public uint centerIndexX { get; set; }
        
        public uint centerIndexZ { get; set; }
        
        public uint blockSizeInBytes { get; set; }
        
        public uint smallBlock1CountX { get; set; }
        
        public uint smallBlock1CountZ { get; set; }
        
        public uint smallBlock1BlockSizeInBytes { get; set; }
        
        public uint blockMarginX { get; set; }
        
        public uint blockMarginZ { get; set; }
        
        public uint loadingDistanceX { get; set; }
        
        public uint loadingDistanceZ { get; set; }
        
        public uint commonBlockSizeInBytes { get; set; }
        
        public uint largeBlockCount0 { get; set; }
        
        public uint largeBlockSizeInBytes0 { get; set; }
        
        public uint largeBlockCount1 { get; set; }
        
        public uint largeBlockSizeInBytes1 { get; set; }
        
        public uint largeBlockCount2 { get; set; }
        
        public uint largeBlockSizeInBytes2 { get; set; }
        
        public uint largeBlockCount3 { get; set; }
        
        public uint largeBlockSizeInBytes3 { get; set; }
        
        public uint largeBlockLoadingMarginX { get; set; }
        
        public uint largeBlockLoadingMarginZ { get; set; }
        
        public FilePtr<File> stageBlockFile { get; set; }
        
        public String lod0BaseDirectoryPath { get; set; }
        
        public String lod0BaseName { get; set; }
        
        public uint lod0blockSizeInBytes { get; set; }
        
        public byte lod0blockSizeX { get; set; }
        
        public byte lod0blockSizeZ { get; set; }
        
        public byte lod0BlockCountX { get; set; }
        
        public byte lod0BlockCountZ { get; set; }
        
        public uint lod0LargeBlock0SizeInBytes { get; set; }
        
        public byte lod0LargeBlock0Count { get; set; }
        
        public uint lod0LargeBlock1SizeInBytes { get; set; }
        
        public byte lod0LargeBlock1Count { get; set; }
        
        public uint lod0LargeBlock2SizeInBytes { get; set; }
        
        public byte lod0LargeBlock2Count { get; set; }
        
        public uint lod0LargeBlock3SizeInBytes { get; set; }
        
        public byte lod0LargeBlock3Count { get; set; }
        
        public String lod1BaseDirectoryPath { get; set; }
        
        public String lod1BaseName { get; set; }
        
        public uint lod1blockSizeInBytes { get; set; }
        
        public byte lod1blockSizeX { get; set; }
        
        public byte lod1blockSizeZ { get; set; }
        
        public byte lod1BlockCountX { get; set; }
        
        public byte lod1BlockCountZ { get; set; }
        
        public uint lod1LargeBlock0SizeInBytes { get; set; }
        
        public byte lod1LargeBlock0Count { get; set; }
        
        public uint lod1LargeBlock1SizeInBytes { get; set; }
        
        public byte lod1LargeBlock1Count { get; set; }
        
        public uint lod1LargeBlock2SizeInBytes { get; set; }
        
        public byte lod1LargeBlock2Count { get; set; }
        
        public uint lod1LargeBlock3SizeInBytes { get; set; }
        
        public byte lod1LargeBlock3Count { get; set; }
        
        // PropertyInfo
        private static EntityInfo classInfo;
        public static new EntityInfo ClassInfo
        {
            get
            {
                return classInfo;
            }
        }
        public override EntityInfo GetClassEntityInfo()
        {
            return classInfo;
        }
        static StageBlockControllerData()
        {
            classInfo = new EntityInfo(new String("StageBlockControllerData"), base.GetClassEntityInfo(), 288, null, 8);
			
			classInfo.StaticProperties.Insert(new String("enable"), new PropertyInfo(PropertyInfo.PropertyType.Bool, 120, 1, PropertyInfo.ContainerType.StaticArray, PropertyInfo.PropertyExport.EditorAndGame, PropertyInfo.PropertyExport.EditorAndGame, null, null, PropertyInfo.PropertyStorage.Instance));
			classInfo.StaticProperties.Insert(new String("stageName"), new PropertyInfo(PropertyInfo.PropertyType.String, 128, 1, PropertyInfo.ContainerType.StaticArray, PropertyInfo.PropertyExport.EditorAndGame, PropertyInfo.PropertyExport.EditorAndGame, null, null, PropertyInfo.PropertyStorage.Instance));
			classInfo.StaticProperties.Insert(new String("useBaseDirectoryPathAndName"), new PropertyInfo(PropertyInfo.PropertyType.Bool, 168, 1, PropertyInfo.ContainerType.StaticArray, PropertyInfo.PropertyExport.EditorAndGame, PropertyInfo.PropertyExport.EditorAndGame, null, null, PropertyInfo.PropertyStorage.Instance));
			classInfo.StaticProperties.Insert(new String("baseDirectoryPath"), new PropertyInfo(PropertyInfo.PropertyType.String, 136, 1, PropertyInfo.ContainerType.StaticArray, PropertyInfo.PropertyExport.EditorAndGame, PropertyInfo.PropertyExport.EditorAndGame, null, null, PropertyInfo.PropertyStorage.Instance));
			classInfo.StaticProperties.Insert(new String("baseName"), new PropertyInfo(PropertyInfo.PropertyType.String, 144, 1, PropertyInfo.ContainerType.StaticArray, PropertyInfo.PropertyExport.EditorAndGame, PropertyInfo.PropertyExport.EditorAndGame, null, null, PropertyInfo.PropertyStorage.Instance));
			classInfo.StaticProperties.Insert(new String("smallBlock1BaseDirectoryPath"), new PropertyInfo(PropertyInfo.PropertyType.String, 152, 1, PropertyInfo.ContainerType.StaticArray, PropertyInfo.PropertyExport.EditorAndGame, PropertyInfo.PropertyExport.EditorAndGame, null, null, PropertyInfo.PropertyStorage.Instance));
			classInfo.StaticProperties.Insert(new String("smallBlock1BaseName"), new PropertyInfo(PropertyInfo.PropertyType.String, 160, 1, PropertyInfo.ContainerType.StaticArray, PropertyInfo.PropertyExport.EditorAndGame, PropertyInfo.PropertyExport.EditorAndGame, null, null, PropertyInfo.PropertyStorage.Instance));
			classInfo.StaticProperties.Insert(new String("blockSizeX"), new PropertyInfo(PropertyInfo.PropertyType.UInt32, 172, 1, PropertyInfo.ContainerType.StaticArray, PropertyInfo.PropertyExport.EditorAndGame, PropertyInfo.PropertyExport.EditorAndGame, null, null, PropertyInfo.PropertyStorage.Instance));
			classInfo.StaticProperties.Insert(new String("blockSizeZ"), new PropertyInfo(PropertyInfo.PropertyType.UInt32, 176, 1, PropertyInfo.ContainerType.StaticArray, PropertyInfo.PropertyExport.EditorAndGame, PropertyInfo.PropertyExport.EditorAndGame, null, null, PropertyInfo.PropertyStorage.Instance));
			classInfo.StaticProperties.Insert(new String("countX"), new PropertyInfo(PropertyInfo.PropertyType.UInt32, 180, 1, PropertyInfo.ContainerType.StaticArray, PropertyInfo.PropertyExport.EditorAndGame, PropertyInfo.PropertyExport.EditorAndGame, null, null, PropertyInfo.PropertyStorage.Instance));
			classInfo.StaticProperties.Insert(new String("countZ"), new PropertyInfo(PropertyInfo.PropertyType.UInt32, 184, 1, PropertyInfo.ContainerType.StaticArray, PropertyInfo.PropertyExport.EditorAndGame, PropertyInfo.PropertyExport.EditorAndGame, null, null, PropertyInfo.PropertyStorage.Instance));
			classInfo.StaticProperties.Insert(new String("centerIndexX"), new PropertyInfo(PropertyInfo.PropertyType.UInt32, 188, 1, PropertyInfo.ContainerType.StaticArray, PropertyInfo.PropertyExport.EditorAndGame, PropertyInfo.PropertyExport.EditorAndGame, null, null, PropertyInfo.PropertyStorage.Instance));
			classInfo.StaticProperties.Insert(new String("centerIndexZ"), new PropertyInfo(PropertyInfo.PropertyType.UInt32, 192, 1, PropertyInfo.ContainerType.StaticArray, PropertyInfo.PropertyExport.EditorAndGame, PropertyInfo.PropertyExport.EditorAndGame, null, null, PropertyInfo.PropertyStorage.Instance));
			classInfo.StaticProperties.Insert(new String("blockSizeInBytes"), new PropertyInfo(PropertyInfo.PropertyType.UInt32, 196, 1, PropertyInfo.ContainerType.StaticArray, PropertyInfo.PropertyExport.EditorAndGame, PropertyInfo.PropertyExport.EditorAndGame, null, null, PropertyInfo.PropertyStorage.Instance));
			classInfo.StaticProperties.Insert(new String("smallBlock1CountX"), new PropertyInfo(PropertyInfo.PropertyType.UInt32, 200, 1, PropertyInfo.ContainerType.StaticArray, PropertyInfo.PropertyExport.EditorAndGame, PropertyInfo.PropertyExport.EditorAndGame, null, null, PropertyInfo.PropertyStorage.Instance));
			classInfo.StaticProperties.Insert(new String("smallBlock1CountZ"), new PropertyInfo(PropertyInfo.PropertyType.UInt32, 204, 1, PropertyInfo.ContainerType.StaticArray, PropertyInfo.PropertyExport.EditorAndGame, PropertyInfo.PropertyExport.EditorAndGame, null, null, PropertyInfo.PropertyStorage.Instance));
			classInfo.StaticProperties.Insert(new String("smallBlock1BlockSizeInBytes"), new PropertyInfo(PropertyInfo.PropertyType.UInt32, 208, 1, PropertyInfo.ContainerType.StaticArray, PropertyInfo.PropertyExport.EditorAndGame, PropertyInfo.PropertyExport.EditorAndGame, null, null, PropertyInfo.PropertyStorage.Instance));
			classInfo.StaticProperties.Insert(new String("blockMarginX"), new PropertyInfo(PropertyInfo.PropertyType.UInt32, 212, 1, PropertyInfo.ContainerType.StaticArray, PropertyInfo.PropertyExport.EditorAndGame, PropertyInfo.PropertyExport.EditorAndGame, null, null, PropertyInfo.PropertyStorage.Instance));
			classInfo.StaticProperties.Insert(new String("blockMarginZ"), new PropertyInfo(PropertyInfo.PropertyType.UInt32, 216, 1, PropertyInfo.ContainerType.StaticArray, PropertyInfo.PropertyExport.EditorAndGame, PropertyInfo.PropertyExport.EditorAndGame, null, null, PropertyInfo.PropertyStorage.Instance));
			classInfo.StaticProperties.Insert(new String("loadingDistanceX"), new PropertyInfo(PropertyInfo.PropertyType.UInt32, 220, 1, PropertyInfo.ContainerType.StaticArray, PropertyInfo.PropertyExport.EditorAndGame, PropertyInfo.PropertyExport.EditorAndGame, null, null, PropertyInfo.PropertyStorage.Instance));
			classInfo.StaticProperties.Insert(new String("loadingDistanceZ"), new PropertyInfo(PropertyInfo.PropertyType.UInt32, 224, 1, PropertyInfo.ContainerType.StaticArray, PropertyInfo.PropertyExport.EditorAndGame, PropertyInfo.PropertyExport.EditorAndGame, null, null, PropertyInfo.PropertyStorage.Instance));
			classInfo.StaticProperties.Insert(new String("commonBlockSizeInBytes"), new PropertyInfo(PropertyInfo.PropertyType.UInt32, 228, 1, PropertyInfo.ContainerType.StaticArray, PropertyInfo.PropertyExport.EditorAndGame, PropertyInfo.PropertyExport.EditorAndGame, null, null, PropertyInfo.PropertyStorage.Instance));
			classInfo.StaticProperties.Insert(new String("largeBlockCount0"), new PropertyInfo(PropertyInfo.PropertyType.UInt32, 232, 1, PropertyInfo.ContainerType.StaticArray, PropertyInfo.PropertyExport.EditorAndGame, PropertyInfo.PropertyExport.EditorAndGame, null, null, PropertyInfo.PropertyStorage.Instance));
			classInfo.StaticProperties.Insert(new String("largeBlockSizeInBytes0"), new PropertyInfo(PropertyInfo.PropertyType.UInt32, 236, 1, PropertyInfo.ContainerType.StaticArray, PropertyInfo.PropertyExport.EditorAndGame, PropertyInfo.PropertyExport.EditorAndGame, null, null, PropertyInfo.PropertyStorage.Instance));
			classInfo.StaticProperties.Insert(new String("largeBlockCount1"), new PropertyInfo(PropertyInfo.PropertyType.UInt32, 240, 1, PropertyInfo.ContainerType.StaticArray, PropertyInfo.PropertyExport.EditorAndGame, PropertyInfo.PropertyExport.EditorAndGame, null, null, PropertyInfo.PropertyStorage.Instance));
			classInfo.StaticProperties.Insert(new String("largeBlockSizeInBytes1"), new PropertyInfo(PropertyInfo.PropertyType.UInt32, 244, 1, PropertyInfo.ContainerType.StaticArray, PropertyInfo.PropertyExport.EditorAndGame, PropertyInfo.PropertyExport.EditorAndGame, null, null, PropertyInfo.PropertyStorage.Instance));
			classInfo.StaticProperties.Insert(new String("largeBlockCount2"), new PropertyInfo(PropertyInfo.PropertyType.UInt32, 248, 1, PropertyInfo.ContainerType.StaticArray, PropertyInfo.PropertyExport.EditorAndGame, PropertyInfo.PropertyExport.EditorAndGame, null, null, PropertyInfo.PropertyStorage.Instance));
			classInfo.StaticProperties.Insert(new String("largeBlockSizeInBytes2"), new PropertyInfo(PropertyInfo.PropertyType.UInt32, 252, 1, PropertyInfo.ContainerType.StaticArray, PropertyInfo.PropertyExport.EditorAndGame, PropertyInfo.PropertyExport.EditorAndGame, null, null, PropertyInfo.PropertyStorage.Instance));
			classInfo.StaticProperties.Insert(new String("largeBlockCount3"), new PropertyInfo(PropertyInfo.PropertyType.UInt32, 256, 1, PropertyInfo.ContainerType.StaticArray, PropertyInfo.PropertyExport.EditorAndGame, PropertyInfo.PropertyExport.EditorAndGame, null, null, PropertyInfo.PropertyStorage.Instance));
			classInfo.StaticProperties.Insert(new String("largeBlockSizeInBytes3"), new PropertyInfo(PropertyInfo.PropertyType.UInt32, 260, 1, PropertyInfo.ContainerType.StaticArray, PropertyInfo.PropertyExport.EditorAndGame, PropertyInfo.PropertyExport.EditorAndGame, null, null, PropertyInfo.PropertyStorage.Instance));
			classInfo.StaticProperties.Insert(new String("largeBlockLoadingMarginX"), new PropertyInfo(PropertyInfo.PropertyType.UInt32, 264, 1, PropertyInfo.ContainerType.StaticArray, PropertyInfo.PropertyExport.EditorAndGame, PropertyInfo.PropertyExport.EditorAndGame, null, null, PropertyInfo.PropertyStorage.Instance));
			classInfo.StaticProperties.Insert(new String("largeBlockLoadingMarginZ"), new PropertyInfo(PropertyInfo.PropertyType.UInt32, 268, 1, PropertyInfo.ContainerType.StaticArray, PropertyInfo.PropertyExport.EditorAndGame, PropertyInfo.PropertyExport.EditorAndGame, null, null, PropertyInfo.PropertyStorage.Instance));
			classInfo.StaticProperties.Insert(new String("stageBlockFile"), new PropertyInfo(PropertyInfo.PropertyType.FilePtr, 360, 1, PropertyInfo.ContainerType.StaticArray, PropertyInfo.PropertyExport.EditorAndGame, PropertyInfo.PropertyExport.EditorAndGame, null, null, PropertyInfo.PropertyStorage.Instance));
			classInfo.StaticProperties.Insert(new String("lod0BaseDirectoryPath"), new PropertyInfo(PropertyInfo.PropertyType.String, 272, 1, PropertyInfo.ContainerType.StaticArray, PropertyInfo.PropertyExport.EditorAndGame, PropertyInfo.PropertyExport.EditorAndGame, null, null, PropertyInfo.PropertyStorage.Instance));
			classInfo.StaticProperties.Insert(new String("lod0BaseName"), new PropertyInfo(PropertyInfo.PropertyType.String, 280, 1, PropertyInfo.ContainerType.StaticArray, PropertyInfo.PropertyExport.EditorAndGame, PropertyInfo.PropertyExport.EditorAndGame, null, null, PropertyInfo.PropertyStorage.Instance));
			classInfo.StaticProperties.Insert(new String("lod0blockSizeInBytes"), new PropertyInfo(PropertyInfo.PropertyType.UInt32, 304, 1, PropertyInfo.ContainerType.StaticArray, PropertyInfo.PropertyExport.EditorAndGame, PropertyInfo.PropertyExport.EditorAndGame, null, null, PropertyInfo.PropertyStorage.Instance));
			classInfo.StaticProperties.Insert(new String("lod0blockSizeX"), new PropertyInfo(PropertyInfo.PropertyType.UInt8, 308, 1, PropertyInfo.ContainerType.StaticArray, PropertyInfo.PropertyExport.EditorAndGame, PropertyInfo.PropertyExport.EditorAndGame, null, null, PropertyInfo.PropertyStorage.Instance));
			classInfo.StaticProperties.Insert(new String("lod0blockSizeZ"), new PropertyInfo(PropertyInfo.PropertyType.UInt8, 309, 1, PropertyInfo.ContainerType.StaticArray, PropertyInfo.PropertyExport.EditorAndGame, PropertyInfo.PropertyExport.EditorAndGame, null, null, PropertyInfo.PropertyStorage.Instance));
			classInfo.StaticProperties.Insert(new String("lod0BlockCountX"), new PropertyInfo(PropertyInfo.PropertyType.UInt8, 310, 1, PropertyInfo.ContainerType.StaticArray, PropertyInfo.PropertyExport.EditorAndGame, PropertyInfo.PropertyExport.EditorAndGame, null, null, PropertyInfo.PropertyStorage.Instance));
			classInfo.StaticProperties.Insert(new String("lod0BlockCountZ"), new PropertyInfo(PropertyInfo.PropertyType.UInt8, 311, 1, PropertyInfo.ContainerType.StaticArray, PropertyInfo.PropertyExport.EditorAndGame, PropertyInfo.PropertyExport.EditorAndGame, null, null, PropertyInfo.PropertyStorage.Instance));
			classInfo.StaticProperties.Insert(new String("lod0LargeBlock0SizeInBytes"), new PropertyInfo(PropertyInfo.PropertyType.UInt32, 312, 1, PropertyInfo.ContainerType.StaticArray, PropertyInfo.PropertyExport.EditorAndGame, PropertyInfo.PropertyExport.EditorAndGame, null, null, PropertyInfo.PropertyStorage.Instance));
			classInfo.StaticProperties.Insert(new String("lod0LargeBlock0Count"), new PropertyInfo(PropertyInfo.PropertyType.UInt8, 328, 1, PropertyInfo.ContainerType.StaticArray, PropertyInfo.PropertyExport.EditorAndGame, PropertyInfo.PropertyExport.EditorAndGame, null, null, PropertyInfo.PropertyStorage.Instance));
			classInfo.StaticProperties.Insert(new String("lod0LargeBlock1SizeInBytes"), new PropertyInfo(PropertyInfo.PropertyType.UInt32, 316, 1, PropertyInfo.ContainerType.StaticArray, PropertyInfo.PropertyExport.EditorAndGame, PropertyInfo.PropertyExport.EditorAndGame, null, null, PropertyInfo.PropertyStorage.Instance));
			classInfo.StaticProperties.Insert(new String("lod0LargeBlock1Count"), new PropertyInfo(PropertyInfo.PropertyType.UInt8, 329, 1, PropertyInfo.ContainerType.StaticArray, PropertyInfo.PropertyExport.EditorAndGame, PropertyInfo.PropertyExport.EditorAndGame, null, null, PropertyInfo.PropertyStorage.Instance));
			classInfo.StaticProperties.Insert(new String("lod0LargeBlock2SizeInBytes"), new PropertyInfo(PropertyInfo.PropertyType.UInt32, 320, 1, PropertyInfo.ContainerType.StaticArray, PropertyInfo.PropertyExport.EditorAndGame, PropertyInfo.PropertyExport.EditorAndGame, null, null, PropertyInfo.PropertyStorage.Instance));
			classInfo.StaticProperties.Insert(new String("lod0LargeBlock2Count"), new PropertyInfo(PropertyInfo.PropertyType.UInt8, 330, 1, PropertyInfo.ContainerType.StaticArray, PropertyInfo.PropertyExport.EditorAndGame, PropertyInfo.PropertyExport.EditorAndGame, null, null, PropertyInfo.PropertyStorage.Instance));
			classInfo.StaticProperties.Insert(new String("lod0LargeBlock3SizeInBytes"), new PropertyInfo(PropertyInfo.PropertyType.UInt32, 324, 1, PropertyInfo.ContainerType.StaticArray, PropertyInfo.PropertyExport.EditorAndGame, PropertyInfo.PropertyExport.EditorAndGame, null, null, PropertyInfo.PropertyStorage.Instance));
			classInfo.StaticProperties.Insert(new String("lod0LargeBlock3Count"), new PropertyInfo(PropertyInfo.PropertyType.UInt8, 331, 1, PropertyInfo.ContainerType.StaticArray, PropertyInfo.PropertyExport.EditorAndGame, PropertyInfo.PropertyExport.EditorAndGame, null, null, PropertyInfo.PropertyStorage.Instance));
			classInfo.StaticProperties.Insert(new String("lod1BaseDirectoryPath"), new PropertyInfo(PropertyInfo.PropertyType.String, 288, 1, PropertyInfo.ContainerType.StaticArray, PropertyInfo.PropertyExport.EditorAndGame, PropertyInfo.PropertyExport.EditorAndGame, null, null, PropertyInfo.PropertyStorage.Instance));
			classInfo.StaticProperties.Insert(new String("lod1BaseName"), new PropertyInfo(PropertyInfo.PropertyType.String, 296, 1, PropertyInfo.ContainerType.StaticArray, PropertyInfo.PropertyExport.EditorAndGame, PropertyInfo.PropertyExport.EditorAndGame, null, null, PropertyInfo.PropertyStorage.Instance));
			classInfo.StaticProperties.Insert(new String("lod1blockSizeInBytes"), new PropertyInfo(PropertyInfo.PropertyType.UInt32, 332, 1, PropertyInfo.ContainerType.StaticArray, PropertyInfo.PropertyExport.EditorAndGame, PropertyInfo.PropertyExport.EditorAndGame, null, null, PropertyInfo.PropertyStorage.Instance));
			classInfo.StaticProperties.Insert(new String("lod1blockSizeX"), new PropertyInfo(PropertyInfo.PropertyType.UInt8, 336, 1, PropertyInfo.ContainerType.StaticArray, PropertyInfo.PropertyExport.EditorAndGame, PropertyInfo.PropertyExport.EditorAndGame, null, null, PropertyInfo.PropertyStorage.Instance));
			classInfo.StaticProperties.Insert(new String("lod1blockSizeZ"), new PropertyInfo(PropertyInfo.PropertyType.UInt8, 337, 1, PropertyInfo.ContainerType.StaticArray, PropertyInfo.PropertyExport.EditorAndGame, PropertyInfo.PropertyExport.EditorAndGame, null, null, PropertyInfo.PropertyStorage.Instance));
			classInfo.StaticProperties.Insert(new String("lod1BlockCountX"), new PropertyInfo(PropertyInfo.PropertyType.UInt8, 338, 1, PropertyInfo.ContainerType.StaticArray, PropertyInfo.PropertyExport.EditorAndGame, PropertyInfo.PropertyExport.EditorAndGame, null, null, PropertyInfo.PropertyStorage.Instance));
			classInfo.StaticProperties.Insert(new String("lod1BlockCountZ"), new PropertyInfo(PropertyInfo.PropertyType.UInt8, 339, 1, PropertyInfo.ContainerType.StaticArray, PropertyInfo.PropertyExport.EditorAndGame, PropertyInfo.PropertyExport.EditorAndGame, null, null, PropertyInfo.PropertyStorage.Instance));
			classInfo.StaticProperties.Insert(new String("lod1LargeBlock0SizeInBytes"), new PropertyInfo(PropertyInfo.PropertyType.UInt32, 340, 1, PropertyInfo.ContainerType.StaticArray, PropertyInfo.PropertyExport.EditorAndGame, PropertyInfo.PropertyExport.EditorAndGame, null, null, PropertyInfo.PropertyStorage.Instance));
			classInfo.StaticProperties.Insert(new String("lod1LargeBlock0Count"), new PropertyInfo(PropertyInfo.PropertyType.UInt8, 356, 1, PropertyInfo.ContainerType.StaticArray, PropertyInfo.PropertyExport.EditorAndGame, PropertyInfo.PropertyExport.EditorAndGame, null, null, PropertyInfo.PropertyStorage.Instance));
			classInfo.StaticProperties.Insert(new String("lod1LargeBlock1SizeInBytes"), new PropertyInfo(PropertyInfo.PropertyType.UInt32, 344, 1, PropertyInfo.ContainerType.StaticArray, PropertyInfo.PropertyExport.EditorAndGame, PropertyInfo.PropertyExport.EditorAndGame, null, null, PropertyInfo.PropertyStorage.Instance));
			classInfo.StaticProperties.Insert(new String("lod1LargeBlock1Count"), new PropertyInfo(PropertyInfo.PropertyType.UInt8, 357, 1, PropertyInfo.ContainerType.StaticArray, PropertyInfo.PropertyExport.EditorAndGame, PropertyInfo.PropertyExport.EditorAndGame, null, null, PropertyInfo.PropertyStorage.Instance));
			classInfo.StaticProperties.Insert(new String("lod1LargeBlock2SizeInBytes"), new PropertyInfo(PropertyInfo.PropertyType.UInt32, 348, 1, PropertyInfo.ContainerType.StaticArray, PropertyInfo.PropertyExport.EditorAndGame, PropertyInfo.PropertyExport.EditorAndGame, null, null, PropertyInfo.PropertyStorage.Instance));
			classInfo.StaticProperties.Insert(new String("lod1LargeBlock2Count"), new PropertyInfo(PropertyInfo.PropertyType.UInt8, 358, 1, PropertyInfo.ContainerType.StaticArray, PropertyInfo.PropertyExport.EditorAndGame, PropertyInfo.PropertyExport.EditorAndGame, null, null, PropertyInfo.PropertyStorage.Instance));
			classInfo.StaticProperties.Insert(new String("lod1LargeBlock3SizeInBytes"), new PropertyInfo(PropertyInfo.PropertyType.UInt32, 352, 1, PropertyInfo.ContainerType.StaticArray, PropertyInfo.PropertyExport.EditorAndGame, PropertyInfo.PropertyExport.EditorAndGame, null, null, PropertyInfo.PropertyStorage.Instance));
			classInfo.StaticProperties.Insert(new String("lod1LargeBlock3Count"), new PropertyInfo(PropertyInfo.PropertyType.UInt8, 359, 1, PropertyInfo.ContainerType.StaticArray, PropertyInfo.PropertyExport.EditorAndGame, PropertyInfo.PropertyExport.EditorAndGame, null, null, PropertyInfo.PropertyStorage.Instance));
        }

        // Constructor
		public StageBlockControllerData(ulong address, ushort idA, ushort idB) : base(address, idA, idB) { }
        
        public override void SetProperty(String propertyName, Value value)
        {
            switch(propertyName.CString())
            {
                case "enable":
                    this.enable = value.GetValueAsBool();
                    return;
                case "stageName":
                    this.stageName = value.GetValueAsString();
                    return;
                case "useBaseDirectoryPathAndName":
                    this.useBaseDirectoryPathAndName = value.GetValueAsBool();
                    return;
                case "baseDirectoryPath":
                    this.baseDirectoryPath = value.GetValueAsString();
                    return;
                case "baseName":
                    this.baseName = value.GetValueAsString();
                    return;
                case "smallBlock1BaseDirectoryPath":
                    this.smallBlock1BaseDirectoryPath = value.GetValueAsString();
                    return;
                case "smallBlock1BaseName":
                    this.smallBlock1BaseName = value.GetValueAsString();
                    return;
                case "blockSizeX":
                    this.blockSizeX = value.GetValueAsUInt32();
                    return;
                case "blockSizeZ":
                    this.blockSizeZ = value.GetValueAsUInt32();
                    return;
                case "countX":
                    this.countX = value.GetValueAsUInt32();
                    return;
                case "countZ":
                    this.countZ = value.GetValueAsUInt32();
                    return;
                case "centerIndexX":
                    this.centerIndexX = value.GetValueAsUInt32();
                    return;
                case "centerIndexZ":
                    this.centerIndexZ = value.GetValueAsUInt32();
                    return;
                case "blockSizeInBytes":
                    this.blockSizeInBytes = value.GetValueAsUInt32();
                    return;
                case "smallBlock1CountX":
                    this.smallBlock1CountX = value.GetValueAsUInt32();
                    return;
                case "smallBlock1CountZ":
                    this.smallBlock1CountZ = value.GetValueAsUInt32();
                    return;
                case "smallBlock1BlockSizeInBytes":
                    this.smallBlock1BlockSizeInBytes = value.GetValueAsUInt32();
                    return;
                case "blockMarginX":
                    this.blockMarginX = value.GetValueAsUInt32();
                    return;
                case "blockMarginZ":
                    this.blockMarginZ = value.GetValueAsUInt32();
                    return;
                case "loadingDistanceX":
                    this.loadingDistanceX = value.GetValueAsUInt32();
                    return;
                case "loadingDistanceZ":
                    this.loadingDistanceZ = value.GetValueAsUInt32();
                    return;
                case "commonBlockSizeInBytes":
                    this.commonBlockSizeInBytes = value.GetValueAsUInt32();
                    return;
                case "largeBlockCount0":
                    this.largeBlockCount0 = value.GetValueAsUInt32();
                    return;
                case "largeBlockSizeInBytes0":
                    this.largeBlockSizeInBytes0 = value.GetValueAsUInt32();
                    return;
                case "largeBlockCount1":
                    this.largeBlockCount1 = value.GetValueAsUInt32();
                    return;
                case "largeBlockSizeInBytes1":
                    this.largeBlockSizeInBytes1 = value.GetValueAsUInt32();
                    return;
                case "largeBlockCount2":
                    this.largeBlockCount2 = value.GetValueAsUInt32();
                    return;
                case "largeBlockSizeInBytes2":
                    this.largeBlockSizeInBytes2 = value.GetValueAsUInt32();
                    return;
                case "largeBlockCount3":
                    this.largeBlockCount3 = value.GetValueAsUInt32();
                    return;
                case "largeBlockSizeInBytes3":
                    this.largeBlockSizeInBytes3 = value.GetValueAsUInt32();
                    return;
                case "largeBlockLoadingMarginX":
                    this.largeBlockLoadingMarginX = value.GetValueAsUInt32();
                    return;
                case "largeBlockLoadingMarginZ":
                    this.largeBlockLoadingMarginZ = value.GetValueAsUInt32();
                    return;
                case "stageBlockFile":
                    this.stageBlockFile = value.GetValueAsFilePtr();
                    return;
                case "lod0BaseDirectoryPath":
                    this.lod0BaseDirectoryPath = value.GetValueAsString();
                    return;
                case "lod0BaseName":
                    this.lod0BaseName = value.GetValueAsString();
                    return;
                case "lod0blockSizeInBytes":
                    this.lod0blockSizeInBytes = value.GetValueAsUInt32();
                    return;
                case "lod0blockSizeX":
                    this.lod0blockSizeX = value.GetValueAsUInt8();
                    return;
                case "lod0blockSizeZ":
                    this.lod0blockSizeZ = value.GetValueAsUInt8();
                    return;
                case "lod0BlockCountX":
                    this.lod0BlockCountX = value.GetValueAsUInt8();
                    return;
                case "lod0BlockCountZ":
                    this.lod0BlockCountZ = value.GetValueAsUInt8();
                    return;
                case "lod0LargeBlock0SizeInBytes":
                    this.lod0LargeBlock0SizeInBytes = value.GetValueAsUInt32();
                    return;
                case "lod0LargeBlock0Count":
                    this.lod0LargeBlock0Count = value.GetValueAsUInt8();
                    return;
                case "lod0LargeBlock1SizeInBytes":
                    this.lod0LargeBlock1SizeInBytes = value.GetValueAsUInt32();
                    return;
                case "lod0LargeBlock1Count":
                    this.lod0LargeBlock1Count = value.GetValueAsUInt8();
                    return;
                case "lod0LargeBlock2SizeInBytes":
                    this.lod0LargeBlock2SizeInBytes = value.GetValueAsUInt32();
                    return;
                case "lod0LargeBlock2Count":
                    this.lod0LargeBlock2Count = value.GetValueAsUInt8();
                    return;
                case "lod0LargeBlock3SizeInBytes":
                    this.lod0LargeBlock3SizeInBytes = value.GetValueAsUInt32();
                    return;
                case "lod0LargeBlock3Count":
                    this.lod0LargeBlock3Count = value.GetValueAsUInt8();
                    return;
                case "lod1BaseDirectoryPath":
                    this.lod1BaseDirectoryPath = value.GetValueAsString();
                    return;
                case "lod1BaseName":
                    this.lod1BaseName = value.GetValueAsString();
                    return;
                case "lod1blockSizeInBytes":
                    this.lod1blockSizeInBytes = value.GetValueAsUInt32();
                    return;
                case "lod1blockSizeX":
                    this.lod1blockSizeX = value.GetValueAsUInt8();
                    return;
                case "lod1blockSizeZ":
                    this.lod1blockSizeZ = value.GetValueAsUInt8();
                    return;
                case "lod1BlockCountX":
                    this.lod1BlockCountX = value.GetValueAsUInt8();
                    return;
                case "lod1BlockCountZ":
                    this.lod1BlockCountZ = value.GetValueAsUInt8();
                    return;
                case "lod1LargeBlock0SizeInBytes":
                    this.lod1LargeBlock0SizeInBytes = value.GetValueAsUInt32();
                    return;
                case "lod1LargeBlock0Count":
                    this.lod1LargeBlock0Count = value.GetValueAsUInt8();
                    return;
                case "lod1LargeBlock1SizeInBytes":
                    this.lod1LargeBlock1SizeInBytes = value.GetValueAsUInt32();
                    return;
                case "lod1LargeBlock1Count":
                    this.lod1LargeBlock1Count = value.GetValueAsUInt8();
                    return;
                case "lod1LargeBlock2SizeInBytes":
                    this.lod1LargeBlock2SizeInBytes = value.GetValueAsUInt32();
                    return;
                case "lod1LargeBlock2Count":
                    this.lod1LargeBlock2Count = value.GetValueAsUInt8();
                    return;
                case "lod1LargeBlock3SizeInBytes":
                    this.lod1LargeBlock3SizeInBytes = value.GetValueAsUInt32();
                    return;
                case "lod1LargeBlock3Count":
                    this.lod1LargeBlock3Count = value.GetValueAsUInt8();
                    return;
                default:
				    
                    base.SetProperty(propertyName, value);
                    return;
            }
        }
        
        public override void SetPropertyElement(String propertyName, ushort index, Value value)
        {
            switch(propertyName.CString())
            {
                default:
					
                    base.SetPropertyElement(propertyName, index, value);
                    return;
            }
        }
        
        public override void SetPropertyElement(String propertyName, String key, Value value)
        {
            switch(propertyName.CString())
            {
                default:
					
                    base.SetPropertyElement(propertyName, key, value);
                    return;
            }
        }
    }
}