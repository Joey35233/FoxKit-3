//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
namespace Tpp.MotherBaseStage
{
    public partial class TppMotherBaseStageBlockControllerData : Fox.Core.Data 
    {
        // Properties
        public MbStageBlockCreateMode createMode { get; set; }
        
        public ushort motherBaseId { get; set; }
        
        public String stageName { get; set; }
        
        public uint layoutBlockSizeInBytes { get; set; }
        
        public uint commonBlockSizeInBytes { get; set; }
        
        public uint uniqueBlockCount { get; set; }
        
        public uint uniqueBlockSizeInBytes { get; set; }
        
        public uint divisionBlockCount { get; set; }
        
        public uint divisionBlockSizeInBytes { get; set; }
        
        public byte[] cluster00divisionPackageIds { get; } = new byte[12];
        
        public byte[] cluster01divisionPackageIds { get; } = new byte[12];
        
        public byte[] cluster02divisionPackageIds { get; } = new byte[12];
        
        public byte[] cluster03divisionPackageIds { get; } = new byte[12];
        
        public byte[] cluster04divisionPackageIds { get; } = new byte[12];
        
        public byte[] cluster05divisionPackageIds { get; } = new byte[12];
        
        public byte[] cluster06divisionPackageIds { get; } = new byte[12];
        
        public byte[] cluster07divisionPackageIds { get; } = new byte[12];
        
        public System.Numerics.Vector3[] clusterPositions { get; } = new System.Numerics.Vector3[8];
        
        public uint[] clusterRequestRadiuses { get; } = new uint[8];
        
        public uint[] clusterRequireRadiuses { get; } = new uint[8];
        
        // PropertyInfo
        private static EntityInfo classInfo;
        public static new EntityInfo ClassInfo
        {
            get
            {
                return classInfo;
            }
        }
        public override EntityInfo GetClassEntityInfo()
        {
            return classInfo;
        }
        static TppMotherBaseStageBlockControllerData()
        {
            classInfo = new EntityInfo(new String("TppMotherBaseStageBlockControllerData"), base.GetClassEntityInfo(), 400, null, 3);
			
			classInfo.StaticProperties.Insert(new String("createMode"), new PropertyInfo(PropertyInfo.PropertyType.Int32, 120, 1, PropertyInfo.ContainerType.StaticArray, PropertyInfo.PropertyExport.EditorAndGame, PropertyInfo.PropertyExport.EditorAndGame, null, typeof(MbStageBlockCreateMode), PropertyInfo.PropertyStorage.Instance));
			classInfo.StaticProperties.Insert(new String("motherBaseId"), new PropertyInfo(PropertyInfo.PropertyType.UInt16, 160, 1, PropertyInfo.ContainerType.StaticArray, PropertyInfo.PropertyExport.EditorAndGame, PropertyInfo.PropertyExport.EditorAndGame, null, null, PropertyInfo.PropertyStorage.Instance));
			classInfo.StaticProperties.Insert(new String("stageName"), new PropertyInfo(PropertyInfo.PropertyType.String, 128, 1, PropertyInfo.ContainerType.StaticArray, PropertyInfo.PropertyExport.EditorAndGame, PropertyInfo.PropertyExport.EditorAndGame, null, null, PropertyInfo.PropertyStorage.Instance));
			classInfo.StaticProperties.Insert(new String("layoutBlockSizeInBytes"), new PropertyInfo(PropertyInfo.PropertyType.UInt32, 136, 1, PropertyInfo.ContainerType.StaticArray, PropertyInfo.PropertyExport.EditorAndGame, PropertyInfo.PropertyExport.EditorAndGame, null, null, PropertyInfo.PropertyStorage.Instance));
			classInfo.StaticProperties.Insert(new String("commonBlockSizeInBytes"), new PropertyInfo(PropertyInfo.PropertyType.UInt32, 140, 1, PropertyInfo.ContainerType.StaticArray, PropertyInfo.PropertyExport.EditorAndGame, PropertyInfo.PropertyExport.EditorAndGame, null, null, PropertyInfo.PropertyStorage.Instance));
			classInfo.StaticProperties.Insert(new String("uniqueBlockCount"), new PropertyInfo(PropertyInfo.PropertyType.UInt32, 144, 1, PropertyInfo.ContainerType.StaticArray, PropertyInfo.PropertyExport.EditorAndGame, PropertyInfo.PropertyExport.EditorAndGame, null, null, PropertyInfo.PropertyStorage.Instance));
			classInfo.StaticProperties.Insert(new String("uniqueBlockSizeInBytes"), new PropertyInfo(PropertyInfo.PropertyType.UInt32, 148, 1, PropertyInfo.ContainerType.StaticArray, PropertyInfo.PropertyExport.EditorAndGame, PropertyInfo.PropertyExport.EditorAndGame, null, null, PropertyInfo.PropertyStorage.Instance));
			classInfo.StaticProperties.Insert(new String("divisionBlockCount"), new PropertyInfo(PropertyInfo.PropertyType.UInt32, 152, 1, PropertyInfo.ContainerType.StaticArray, PropertyInfo.PropertyExport.EditorAndGame, PropertyInfo.PropertyExport.EditorAndGame, null, null, PropertyInfo.PropertyStorage.Instance));
			classInfo.StaticProperties.Insert(new String("divisionBlockSizeInBytes"), new PropertyInfo(PropertyInfo.PropertyType.UInt32, 156, 1, PropertyInfo.ContainerType.StaticArray, PropertyInfo.PropertyExport.EditorAndGame, PropertyInfo.PropertyExport.EditorAndGame, null, null, PropertyInfo.PropertyStorage.Instance));
			classInfo.StaticProperties.Insert(new String("cluster00divisionPackageIds"), new PropertyInfo(PropertyInfo.PropertyType.UInt8, 162, 12, PropertyInfo.ContainerType.StaticArray, PropertyInfo.PropertyExport.EditorAndGame, PropertyInfo.PropertyExport.EditorAndGame, null, null, PropertyInfo.PropertyStorage.Instance));
			classInfo.StaticProperties.Insert(new String("cluster01divisionPackageIds"), new PropertyInfo(PropertyInfo.PropertyType.UInt8, 174, 12, PropertyInfo.ContainerType.StaticArray, PropertyInfo.PropertyExport.EditorAndGame, PropertyInfo.PropertyExport.EditorAndGame, null, null, PropertyInfo.PropertyStorage.Instance));
			classInfo.StaticProperties.Insert(new String("cluster02divisionPackageIds"), new PropertyInfo(PropertyInfo.PropertyType.UInt8, 186, 12, PropertyInfo.ContainerType.StaticArray, PropertyInfo.PropertyExport.EditorAndGame, PropertyInfo.PropertyExport.EditorAndGame, null, null, PropertyInfo.PropertyStorage.Instance));
			classInfo.StaticProperties.Insert(new String("cluster03divisionPackageIds"), new PropertyInfo(PropertyInfo.PropertyType.UInt8, 198, 12, PropertyInfo.ContainerType.StaticArray, PropertyInfo.PropertyExport.EditorAndGame, PropertyInfo.PropertyExport.EditorAndGame, null, null, PropertyInfo.PropertyStorage.Instance));
			classInfo.StaticProperties.Insert(new String("cluster04divisionPackageIds"), new PropertyInfo(PropertyInfo.PropertyType.UInt8, 210, 12, PropertyInfo.ContainerType.StaticArray, PropertyInfo.PropertyExport.EditorAndGame, PropertyInfo.PropertyExport.EditorAndGame, null, null, PropertyInfo.PropertyStorage.Instance));
			classInfo.StaticProperties.Insert(new String("cluster05divisionPackageIds"), new PropertyInfo(PropertyInfo.PropertyType.UInt8, 222, 12, PropertyInfo.ContainerType.StaticArray, PropertyInfo.PropertyExport.EditorAndGame, PropertyInfo.PropertyExport.EditorAndGame, null, null, PropertyInfo.PropertyStorage.Instance));
			classInfo.StaticProperties.Insert(new String("cluster06divisionPackageIds"), new PropertyInfo(PropertyInfo.PropertyType.UInt8, 234, 12, PropertyInfo.ContainerType.StaticArray, PropertyInfo.PropertyExport.EditorAndGame, PropertyInfo.PropertyExport.EditorAndGame, null, null, PropertyInfo.PropertyStorage.Instance));
			classInfo.StaticProperties.Insert(new String("cluster07divisionPackageIds"), new PropertyInfo(PropertyInfo.PropertyType.UInt8, 246, 12, PropertyInfo.ContainerType.StaticArray, PropertyInfo.PropertyExport.EditorAndGame, PropertyInfo.PropertyExport.EditorAndGame, null, null, PropertyInfo.PropertyStorage.Instance));
			classInfo.StaticProperties.Insert(new String("clusterPositions"), new PropertyInfo(PropertyInfo.PropertyType.Vector3, 272, 8, PropertyInfo.ContainerType.StaticArray, PropertyInfo.PropertyExport.EditorAndGame, PropertyInfo.PropertyExport.EditorAndGame, null, null, PropertyInfo.PropertyStorage.Instance));
			classInfo.StaticProperties.Insert(new String("clusterRequestRadiuses"), new PropertyInfo(PropertyInfo.PropertyType.UInt32, 400, 8, PropertyInfo.ContainerType.StaticArray, PropertyInfo.PropertyExport.EditorAndGame, PropertyInfo.PropertyExport.EditorAndGame, null, null, PropertyInfo.PropertyStorage.Instance));
			classInfo.StaticProperties.Insert(new String("clusterRequireRadiuses"), new PropertyInfo(PropertyInfo.PropertyType.UInt32, 432, 8, PropertyInfo.ContainerType.StaticArray, PropertyInfo.PropertyExport.EditorAndGame, PropertyInfo.PropertyExport.EditorAndGame, null, null, PropertyInfo.PropertyStorage.Instance));
        }

        // Constructor
		public TppMotherBaseStageBlockControllerData(ulong address, ushort idA, ushort idB) : base(address, idA, idB) { }
        
        public override void SetProperty(String propertyName, Value value)
        {
            switch(propertyName.CString())
            {
                case "createMode":
                    this.createMode = (MbStageBlockCreateMode)value.GetValueAsInt32();
                    return;
                case "motherBaseId":
                    this.motherBaseId = value.GetValueAsUInt16();
                    return;
                case "stageName":
                    this.stageName = value.GetValueAsString();
                    return;
                case "layoutBlockSizeInBytes":
                    this.layoutBlockSizeInBytes = value.GetValueAsUInt32();
                    return;
                case "commonBlockSizeInBytes":
                    this.commonBlockSizeInBytes = value.GetValueAsUInt32();
                    return;
                case "uniqueBlockCount":
                    this.uniqueBlockCount = value.GetValueAsUInt32();
                    return;
                case "uniqueBlockSizeInBytes":
                    this.uniqueBlockSizeInBytes = value.GetValueAsUInt32();
                    return;
                case "divisionBlockCount":
                    this.divisionBlockCount = value.GetValueAsUInt32();
                    return;
                case "divisionBlockSizeInBytes":
                    this.divisionBlockSizeInBytes = value.GetValueAsUInt32();
                    return;
                default:
				    
                    base.SetProperty(propertyName, value);
                    return;
            }
        }
        
        public override void SetPropertyElement(String propertyName, ushort index, Value value)
        {
            switch(propertyName.CString())
            {
                case "cluster00divisionPackageIds":
                    
                    this.cluster00divisionPackageIds[index] = value.GetValueAsUInt8();
                    return;
                case "cluster01divisionPackageIds":
                    
                    this.cluster01divisionPackageIds[index] = value.GetValueAsUInt8();
                    return;
                case "cluster02divisionPackageIds":
                    
                    this.cluster02divisionPackageIds[index] = value.GetValueAsUInt8();
                    return;
                case "cluster03divisionPackageIds":
                    
                    this.cluster03divisionPackageIds[index] = value.GetValueAsUInt8();
                    return;
                case "cluster04divisionPackageIds":
                    
                    this.cluster04divisionPackageIds[index] = value.GetValueAsUInt8();
                    return;
                case "cluster05divisionPackageIds":
                    
                    this.cluster05divisionPackageIds[index] = value.GetValueAsUInt8();
                    return;
                case "cluster06divisionPackageIds":
                    
                    this.cluster06divisionPackageIds[index] = value.GetValueAsUInt8();
                    return;
                case "cluster07divisionPackageIds":
                    
                    this.cluster07divisionPackageIds[index] = value.GetValueAsUInt8();
                    return;
                case "clusterPositions":
                    
                    this.clusterPositions[index] = value.GetValueAsVector3();
                    return;
                case "clusterRequestRadiuses":
                    
                    this.clusterRequestRadiuses[index] = value.GetValueAsUInt32();
                    return;
                case "clusterRequireRadiuses":
                    
                    this.clusterRequireRadiuses[index] = value.GetValueAsUInt32();
                    return;
                default:
					
                    base.SetPropertyElement(propertyName, index, value);
                    return;
            }
        }
        
        public override void SetPropertyElement(String propertyName, String key, Value value)
        {
            switch(propertyName.CString())
            {
                default:
					
                    base.SetPropertyElement(propertyName, key, value);
                    return;
            }
        }
    }
}