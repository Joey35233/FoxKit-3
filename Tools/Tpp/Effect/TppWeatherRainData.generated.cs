//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
namespace Tpp.Effect
{
    public partial class TppWeatherRainData : Fox.Core.Data 
    {
        // Properties
        public EntityLink rainFilter { get; set; }
        
        public EntityLink floorRainSplash { get; set; }
        
        public FilePtr<File> vfxFileFallRain { get; set; }
        
        public FilePtr<File> vfxFileFallRainSlow { get; set; }
        
        public FilePtr<File> vfxFileCameraFog { get; set; }
        
        // PropertyInfo
        private static EntityInfo classInfo;
        public static new EntityInfo ClassInfo
        {
            get
            {
                return classInfo;
            }
        }
        public override EntityInfo GetClassEntityInfo()
        {
            return classInfo;
        }
        static TppWeatherRainData()
        {
            classInfo = new EntityInfo(new String("TppWeatherRainData"), base.GetClassEntityInfo(), 200, "TppEffect", 4);
			
			classInfo.StaticProperties.Insert(new String("rainFilter"), new PropertyInfo(PropertyInfo.PropertyType.EntityLink, 120, 1, PropertyInfo.ContainerType.StaticArray, PropertyInfo.PropertyExport.EditorAndGame, PropertyInfo.PropertyExport.EditorAndGame, null, null, PropertyInfo.PropertyStorage.Instance));
			classInfo.StaticProperties.Insert(new String("floorRainSplash"), new PropertyInfo(PropertyInfo.PropertyType.EntityLink, 160, 1, PropertyInfo.ContainerType.StaticArray, PropertyInfo.PropertyExport.EditorAndGame, PropertyInfo.PropertyExport.EditorAndGame, null, null, PropertyInfo.PropertyStorage.Instance));
			classInfo.StaticProperties.Insert(new String("vfxFileFallRain"), new PropertyInfo(PropertyInfo.PropertyType.FilePtr, 200, 1, PropertyInfo.ContainerType.StaticArray, PropertyInfo.PropertyExport.EditorAndGame, PropertyInfo.PropertyExport.EditorAndGame, null, null, PropertyInfo.PropertyStorage.Instance));
			classInfo.StaticProperties.Insert(new String("vfxFileFallRainSlow"), new PropertyInfo(PropertyInfo.PropertyType.FilePtr, 224, 1, PropertyInfo.ContainerType.StaticArray, PropertyInfo.PropertyExport.EditorAndGame, PropertyInfo.PropertyExport.EditorAndGame, null, null, PropertyInfo.PropertyStorage.Instance));
			classInfo.StaticProperties.Insert(new String("vfxFileCameraFog"), new PropertyInfo(PropertyInfo.PropertyType.FilePtr, 248, 1, PropertyInfo.ContainerType.StaticArray, PropertyInfo.PropertyExport.EditorAndGame, PropertyInfo.PropertyExport.EditorAndGame, null, null, PropertyInfo.PropertyStorage.Instance));
        }

        // Constructor
		public TppWeatherRainData(ulong address, ushort idA, ushort idB) : base(address, idA, idB) { }
        
        public override void SetProperty(String propertyName, Value value)
        {
            switch(propertyName.CString())
            {
                case "rainFilter":
                    this.rainFilter = value.GetValueAsEntityLink();
                    return;
                case "floorRainSplash":
                    this.floorRainSplash = value.GetValueAsEntityLink();
                    return;
                case "vfxFileFallRain":
                    this.vfxFileFallRain = value.GetValueAsFilePtr();
                    return;
                case "vfxFileFallRainSlow":
                    this.vfxFileFallRainSlow = value.GetValueAsFilePtr();
                    return;
                case "vfxFileCameraFog":
                    this.vfxFileCameraFog = value.GetValueAsFilePtr();
                    return;
                default:
				    
                    base.SetProperty(propertyName, value);
                    return;
            }
        }
        
        public override void SetPropertyElement(String propertyName, ushort index, Value value)
        {
            switch(propertyName.CString())
            {
                default:
					
                    base.SetPropertyElement(propertyName, index, value);
                    return;
            }
        }
        
        public override void SetPropertyElement(String propertyName, String key, Value value)
        {
            switch(propertyName.CString())
            {
                default:
					
                    base.SetPropertyElement(propertyName, key, value);
                    return;
            }
        }
    }
}