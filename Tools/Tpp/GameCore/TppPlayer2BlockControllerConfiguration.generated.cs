//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
namespace Tpp.GameCore
{
    public partial class TppPlayer2BlockControllerConfiguration 
    {
        // Properties
        public uint commonMotionBlockSize { get; set; }
        
        public uint commonMotionBlockSizePs3 { get; set; }
        
        public uint additiveMotionBlockCount { get; set; }
        
        public uint additiveMotionBlockSize { get; set; }
        
        public uint partsBlockCount { get; set; }
        
        public uint partsBlockSize { get; set; }
        
        // PropertyInfo
        private static EntityInfo classInfo;
        public static new EntityInfo ClassInfo
        {
            get
            {
                return classInfo;
            }
        }
        public override EntityInfo GetClassEntityInfo()
        {
            return classInfo;
        }
        static TppPlayer2BlockControllerConfiguration()
        {
            classInfo = new EntityInfo(new String("TppPlayer2BlockControllerConfiguration"), null, 0, null, 0);
			
			classInfo.StaticProperties.Insert(new String("commonMotionBlockSize"), new PropertyInfo(PropertyInfo.PropertyType.UInt32, 0, 1, PropertyInfo.ContainerType.StaticArray, PropertyInfo.PropertyExport.EditorAndGame, PropertyInfo.PropertyExport.EditorAndGame, null, null, PropertyInfo.PropertyStorage.Instance));
			classInfo.StaticProperties.Insert(new String("commonMotionBlockSizePs3"), new PropertyInfo(PropertyInfo.PropertyType.UInt32, 4, 1, PropertyInfo.ContainerType.StaticArray, PropertyInfo.PropertyExport.EditorAndGame, PropertyInfo.PropertyExport.EditorAndGame, null, null, PropertyInfo.PropertyStorage.Instance));
			classInfo.StaticProperties.Insert(new String("additiveMotionBlockCount"), new PropertyInfo(PropertyInfo.PropertyType.UInt32, 8, 1, PropertyInfo.ContainerType.StaticArray, PropertyInfo.PropertyExport.EditorAndGame, PropertyInfo.PropertyExport.EditorAndGame, null, null, PropertyInfo.PropertyStorage.Instance));
			classInfo.StaticProperties.Insert(new String("additiveMotionBlockSize"), new PropertyInfo(PropertyInfo.PropertyType.UInt32, 12, 1, PropertyInfo.ContainerType.StaticArray, PropertyInfo.PropertyExport.EditorAndGame, PropertyInfo.PropertyExport.EditorAndGame, null, null, PropertyInfo.PropertyStorage.Instance));
			classInfo.StaticProperties.Insert(new String("partsBlockCount"), new PropertyInfo(PropertyInfo.PropertyType.UInt32, 16, 1, PropertyInfo.ContainerType.StaticArray, PropertyInfo.PropertyExport.EditorAndGame, PropertyInfo.PropertyExport.EditorAndGame, null, null, PropertyInfo.PropertyStorage.Instance));
			classInfo.StaticProperties.Insert(new String("partsBlockSize"), new PropertyInfo(PropertyInfo.PropertyType.UInt32, 20, 1, PropertyInfo.ContainerType.StaticArray, PropertyInfo.PropertyExport.EditorAndGame, PropertyInfo.PropertyExport.EditorAndGame, null, null, PropertyInfo.PropertyStorage.Instance));
        }

        // Constructor
		
        
        public virtual void SetProperty(String propertyName, Value value)
        {
            switch(propertyName.CString())
            {
                case "commonMotionBlockSize":
                    this.commonMotionBlockSize = value.GetValueAsUInt32();
                    return;
                case "commonMotionBlockSizePs3":
                    this.commonMotionBlockSizePs3 = value.GetValueAsUInt32();
                    return;
                case "additiveMotionBlockCount":
                    this.additiveMotionBlockCount = value.GetValueAsUInt32();
                    return;
                case "additiveMotionBlockSize":
                    this.additiveMotionBlockSize = value.GetValueAsUInt32();
                    return;
                case "partsBlockCount":
                    this.partsBlockCount = value.GetValueAsUInt32();
                    return;
                case "partsBlockSize":
                    this.partsBlockSize = value.GetValueAsUInt32();
                    return;
                default:
				    
                    throw new System.MissingMemberException("Unrecognized property", propertyName.CString);
                    return;
            }
        }
        
        public virtual void SetPropertyElement(String propertyName, ushort index, Value value)
        {
            switch(propertyName.CString())
            {
                default:
					
                    throw new System.MissingMemberException("Unrecognized property", propertyName.CString);
                    return;
            }
        }
        
        public virtual void SetPropertyElement(String propertyName, String key, Value value)
        {
            switch(propertyName.CString())
            {
                default:
					
                    throw new System.MissingMemberException("Unrecognized property", propertyName.CString);
                    return;
            }
        }
    }
}