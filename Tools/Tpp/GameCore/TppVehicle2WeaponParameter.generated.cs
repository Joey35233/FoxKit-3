//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
namespace Tpp.GameCore
{
    public partial class TppVehicle2WeaponParameter : Fox.Core.DataElement 
    {
        // Properties
        public String attackId { get; set; }
        
        public String equipId { get; set; }
        
        public String bulletId { get; set; }
        
        public byte weaponImplTypeIndex { get; set; }
        
        public float fireInterval { get; set; }
        
        public FilePtr<File> weaponFile { get; set; }
        
        public FilePtr<File> ammoFile { get; set; }
        
        public String ownerCnpName { get; set; }
        
        public String weaponBoneName { get; set; }
        
        public String turretBoneName { get; set; }
        
        public String barrelBoneName { get; set; }
        
        public float minPitch { get; set; }
        
        public float maxPitch { get; set; }
        
        public float rotSpeed { get; set; }
        
        // PropertyInfo
        private static EntityInfo classInfo;
        public static new EntityInfo ClassInfo
        {
            get
            {
                return classInfo;
            }
        }
        public override EntityInfo GetClassEntityInfo()
        {
            return classInfo;
        }
        static TppVehicle2WeaponParameter()
        {
            classInfo = new EntityInfo(new String("TppVehicle2WeaponParameter"), base.GetClassEntityInfo(), 128, null, 2);
			
			classInfo.StaticProperties.Insert(new String("attackId"), new PropertyInfo(PropertyInfo.PropertyType.String, 104, 1, PropertyInfo.ContainerType.StaticArray, PropertyInfo.PropertyExport.Never, PropertyInfo.PropertyExport.Never, null, null, PropertyInfo.PropertyStorage.Instance));
			classInfo.StaticProperties.Insert(new String("equipId"), new PropertyInfo(PropertyInfo.PropertyType.String, 112, 1, PropertyInfo.ContainerType.StaticArray, PropertyInfo.PropertyExport.Never, PropertyInfo.PropertyExport.Never, null, null, PropertyInfo.PropertyStorage.Instance));
			classInfo.StaticProperties.Insert(new String("bulletId"), new PropertyInfo(PropertyInfo.PropertyType.String, 120, 1, PropertyInfo.ContainerType.StaticArray, PropertyInfo.PropertyExport.Never, PropertyInfo.PropertyExport.Never, null, null, PropertyInfo.PropertyStorage.Instance));
			classInfo.StaticProperties.Insert(new String("weaponImplTypeIndex"), new PropertyInfo(PropertyInfo.PropertyType.UInt8, 176, 1, PropertyInfo.ContainerType.StaticArray, PropertyInfo.PropertyExport.Never, PropertyInfo.PropertyExport.Never, null, null, PropertyInfo.PropertyStorage.Instance));
			classInfo.StaticProperties.Insert(new String("fireInterval"), new PropertyInfo(PropertyInfo.PropertyType.Float, 160, 1, PropertyInfo.ContainerType.StaticArray, PropertyInfo.PropertyExport.Never, PropertyInfo.PropertyExport.Never, null, null, PropertyInfo.PropertyStorage.Instance));
			classInfo.StaticProperties.Insert(new String("weaponFile"), new PropertyInfo(PropertyInfo.PropertyType.FilePtr, 56, 1, PropertyInfo.ContainerType.StaticArray, PropertyInfo.PropertyExport.Never, PropertyInfo.PropertyExport.Never, null, null, PropertyInfo.PropertyStorage.Instance));
			classInfo.StaticProperties.Insert(new String("ammoFile"), new PropertyInfo(PropertyInfo.PropertyType.FilePtr, 80, 1, PropertyInfo.ContainerType.StaticArray, PropertyInfo.PropertyExport.Never, PropertyInfo.PropertyExport.Never, null, null, PropertyInfo.PropertyStorage.Instance));
			classInfo.StaticProperties.Insert(new String("ownerCnpName"), new PropertyInfo(PropertyInfo.PropertyType.String, 128, 1, PropertyInfo.ContainerType.StaticArray, PropertyInfo.PropertyExport.Never, PropertyInfo.PropertyExport.Never, null, null, PropertyInfo.PropertyStorage.Instance));
			classInfo.StaticProperties.Insert(new String("weaponBoneName"), new PropertyInfo(PropertyInfo.PropertyType.String, 136, 1, PropertyInfo.ContainerType.StaticArray, PropertyInfo.PropertyExport.Never, PropertyInfo.PropertyExport.Never, null, null, PropertyInfo.PropertyStorage.Instance));
			classInfo.StaticProperties.Insert(new String("turretBoneName"), new PropertyInfo(PropertyInfo.PropertyType.String, 144, 1, PropertyInfo.ContainerType.StaticArray, PropertyInfo.PropertyExport.Never, PropertyInfo.PropertyExport.Never, null, null, PropertyInfo.PropertyStorage.Instance));
			classInfo.StaticProperties.Insert(new String("barrelBoneName"), new PropertyInfo(PropertyInfo.PropertyType.String, 152, 1, PropertyInfo.ContainerType.StaticArray, PropertyInfo.PropertyExport.Never, PropertyInfo.PropertyExport.Never, null, null, PropertyInfo.PropertyStorage.Instance));
			classInfo.StaticProperties.Insert(new String("minPitch"), new PropertyInfo(PropertyInfo.PropertyType.Float, 164, 1, PropertyInfo.ContainerType.StaticArray, PropertyInfo.PropertyExport.Never, PropertyInfo.PropertyExport.Never, null, null, PropertyInfo.PropertyStorage.Instance));
			classInfo.StaticProperties.Insert(new String("maxPitch"), new PropertyInfo(PropertyInfo.PropertyType.Float, 168, 1, PropertyInfo.ContainerType.StaticArray, PropertyInfo.PropertyExport.Never, PropertyInfo.PropertyExport.Never, null, null, PropertyInfo.PropertyStorage.Instance));
			classInfo.StaticProperties.Insert(new String("rotSpeed"), new PropertyInfo(PropertyInfo.PropertyType.Float, 172, 1, PropertyInfo.ContainerType.StaticArray, PropertyInfo.PropertyExport.Never, PropertyInfo.PropertyExport.Never, null, null, PropertyInfo.PropertyStorage.Instance));
        }

        // Constructor
		public TppVehicle2WeaponParameter(ulong address, ushort idA, ushort idB) : base(address, idA, idB) { }
        
        public override void SetProperty(String propertyName, Value value)
        {
            switch(propertyName.CString())
            {
                case "attackId":
                    this.attackId = value.GetValueAsString();
                    return;
                case "equipId":
                    this.equipId = value.GetValueAsString();
                    return;
                case "bulletId":
                    this.bulletId = value.GetValueAsString();
                    return;
                case "weaponImplTypeIndex":
                    this.weaponImplTypeIndex = value.GetValueAsUInt8();
                    return;
                case "fireInterval":
                    this.fireInterval = value.GetValueAsFloat();
                    return;
                case "weaponFile":
                    this.weaponFile = value.GetValueAsFilePtr();
                    return;
                case "ammoFile":
                    this.ammoFile = value.GetValueAsFilePtr();
                    return;
                case "ownerCnpName":
                    this.ownerCnpName = value.GetValueAsString();
                    return;
                case "weaponBoneName":
                    this.weaponBoneName = value.GetValueAsString();
                    return;
                case "turretBoneName":
                    this.turretBoneName = value.GetValueAsString();
                    return;
                case "barrelBoneName":
                    this.barrelBoneName = value.GetValueAsString();
                    return;
                case "minPitch":
                    this.minPitch = value.GetValueAsFloat();
                    return;
                case "maxPitch":
                    this.maxPitch = value.GetValueAsFloat();
                    return;
                case "rotSpeed":
                    this.rotSpeed = value.GetValueAsFloat();
                    return;
                default:
				    
                    base.SetProperty(propertyName, value);
                    return;
            }
        }
        
        public override void SetPropertyElement(String propertyName, ushort index, Value value)
        {
            switch(propertyName.CString())
            {
                default:
					
                    base.SetPropertyElement(propertyName, index, value);
                    return;
            }
        }
        
        public override void SetPropertyElement(String propertyName, String key, Value value)
        {
            switch(propertyName.CString())
            {
                default:
					
                    base.SetPropertyElement(propertyName, key, value);
                    return;
            }
        }
    }
}