//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
namespace Tpp.GameKit
{
    public partial class TppObjectBrushSkeletonModelDestructionResource : Fox.Core.Data 
    {
        // Properties
        public uint rootCount { get; set; }
        
        public uint trunkCount { get; set; }
        
        public String pluginName { get; set; }
        
        public uint flags { get; set; }
        
        public FilePtr<File> rootModelFile { get; set; }
        
        public FilePtr<File> rootGeomFile { get; set; }
        
        public FilePtr<File> trunkPartsFile { get; set; }
        
        // PropertyInfo
        private static EntityInfo classInfo;
        public static new EntityInfo ClassInfo
        {
            get
            {
                return classInfo;
            }
        }
        public override EntityInfo GetClassEntityInfo()
        {
            return classInfo;
        }
        static TppObjectBrushSkeletonModelDestructionResource()
        {
            classInfo = new EntityInfo(new String("TppObjectBrushSkeletonModelDestructionResource"), base.GetClassEntityInfo(), 152, null, 0);
			
			classInfo.StaticProperties.Insert(new String("rootCount"), new PropertyInfo(PropertyInfo.PropertyType.UInt32, 120, 1, PropertyInfo.ContainerType.StaticArray, PropertyInfo.PropertyExport.EditorAndGame, PropertyInfo.PropertyExport.EditorAndGame, null, null, PropertyInfo.PropertyStorage.Instance));
			classInfo.StaticProperties.Insert(new String("trunkCount"), new PropertyInfo(PropertyInfo.PropertyType.UInt32, 124, 1, PropertyInfo.ContainerType.StaticArray, PropertyInfo.PropertyExport.EditorAndGame, PropertyInfo.PropertyExport.EditorAndGame, null, null, PropertyInfo.PropertyStorage.Instance));
			classInfo.StaticProperties.Insert(new String("pluginName"), new PropertyInfo(PropertyInfo.PropertyType.String, 136, 1, PropertyInfo.ContainerType.StaticArray, PropertyInfo.PropertyExport.EditorAndGame, PropertyInfo.PropertyExport.EditorAndGame, null, null, PropertyInfo.PropertyStorage.Instance));
			classInfo.StaticProperties.Insert(new String("flags"), new PropertyInfo(PropertyInfo.PropertyType.UInt32, 128, 1, PropertyInfo.ContainerType.StaticArray, PropertyInfo.PropertyExport.EditorOnly, PropertyInfo.PropertyExport.EditorOnly, null, null, PropertyInfo.PropertyStorage.Instance));
			classInfo.StaticProperties.Insert(new String("rootModelFile"), new PropertyInfo(PropertyInfo.PropertyType.FilePtr, 144, 1, PropertyInfo.ContainerType.StaticArray, PropertyInfo.PropertyExport.EditorAndGame, PropertyInfo.PropertyExport.EditorAndGame, null, null, PropertyInfo.PropertyStorage.Instance));
			classInfo.StaticProperties.Insert(new String("rootGeomFile"), new PropertyInfo(PropertyInfo.PropertyType.FilePtr, 168, 1, PropertyInfo.ContainerType.StaticArray, PropertyInfo.PropertyExport.EditorAndGame, PropertyInfo.PropertyExport.EditorAndGame, null, null, PropertyInfo.PropertyStorage.Instance));
			classInfo.StaticProperties.Insert(new String("trunkPartsFile"), new PropertyInfo(PropertyInfo.PropertyType.FilePtr, 192, 1, PropertyInfo.ContainerType.StaticArray, PropertyInfo.PropertyExport.EditorAndGame, PropertyInfo.PropertyExport.EditorAndGame, null, null, PropertyInfo.PropertyStorage.Instance));
        }

        // Constructor
		public TppObjectBrushSkeletonModelDestructionResource(ulong address, ushort idA, ushort idB) : base(address, idA, idB) { }
        
        public override void SetProperty(String propertyName, Value value)
        {
            switch(propertyName.CString())
            {
                case "rootCount":
                    this.rootCount = value.GetValueAsUInt32();
                    return;
                case "trunkCount":
                    this.trunkCount = value.GetValueAsUInt32();
                    return;
                case "pluginName":
                    this.pluginName = value.GetValueAsString();
                    return;
                case "flags":
                    this.flags = value.GetValueAsUInt32();
                    return;
                case "rootModelFile":
                    this.rootModelFile = value.GetValueAsFilePtr();
                    return;
                case "rootGeomFile":
                    this.rootGeomFile = value.GetValueAsFilePtr();
                    return;
                case "trunkPartsFile":
                    this.trunkPartsFile = value.GetValueAsFilePtr();
                    return;
                default:
				    
                    base.SetProperty(propertyName, value);
                    return;
            }
        }
        
        public override void SetPropertyElement(String propertyName, ushort index, Value value)
        {
            switch(propertyName.CString())
            {
                default:
					
                    base.SetPropertyElement(propertyName, index, value);
                    return;
            }
        }
        
        public override void SetPropertyElement(String propertyName, String key, Value value)
        {
            switch(propertyName.CString())
            {
                default:
					
                    base.SetPropertyElement(propertyName, key, value);
                    return;
            }
        }
    }
}