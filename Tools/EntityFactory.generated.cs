//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System.Collections.Generic;

namespace Fox
{
    public class EntityFactory
    {
        private delegate Entity EntityConstructor(ulong address, ushort idA, ushort idB);

        private IDictionary<string, EntityConstructor> Constructors { get; }

        public EntityFactory() => this.Constructors = new Dictionary<string, EntityConstructor>
        {
			
			
			
			
			
			
			
			
			
			
			[nameof(FoxCore.Entity)] = (address, idA, idB) => new FoxCore.Entity(address, idA, idB),
			[nameof(FoxCore.Data)] = (address, idA, idB) => new FoxCore.Data(address, idA, idB),
			[nameof(FoxCore.DataElement)] = (address, idA, idB) => new FoxCore.DataElement(address, idA, idB),
			[nameof(FoxCore.TransformData)] = (address, idA, idB) => new FoxCore.TransformData(address, idA, idB),
			[nameof(FoxCore.Actor)] = (address, idA, idB) => new FoxCore.Actor(address, idA, idB),
			[nameof(FoxCore.ComponentSet)] = (address, idA, idB) => new FoxCore.ComponentSet(address, idA, idB),
			[nameof(FoxCore.PointComponentSet)] = (address, idA, idB) => new FoxCore.PointComponentSet(address, idA, idB),
			[nameof(FoxCore.LineSegmentComponentSet)] = (address, idA, idB) => new FoxCore.LineSegmentComponentSet(address, idA, idB),
			[nameof(FoxCore.TransformComponentSet)] = (address, idA, idB) => new FoxCore.TransformComponentSet(address, idA, idB),
			[nameof(FoxCore.ComponentInsertionInfo)] = (address, idA, idB) => new FoxCore.ComponentInsertionInfo(address, idA, idB),
			[nameof(FoxCore.Scene)] = (address, idA, idB) => new FoxCore.Scene(address, idA, idB),
			[nameof(FoxCore.Application)] = (address, idA, idB) => new FoxCore.Application(address, idA, idB),
			[nameof(FoxCore.Game)] = (address, idA, idB) => new FoxCore.Game(address, idA, idB),
			[nameof(FoxCore.Script)] = (address, idA, idB) => new FoxCore.Script(address, idA, idB),
			[nameof(FoxCore.SafeScript)] = (address, idA, idB) => new FoxCore.SafeScript(address, idA, idB),
			[nameof(FoxCore.Bucket)] = (address, idA, idB) => new FoxCore.Bucket(address, idA, idB),
			[nameof(FoxCore.BucketCollector)] = (address, idA, idB) => new FoxCore.BucketCollector(address, idA, idB),
			[nameof(FoxCore.EntityClassDictionary)] = (address, idA, idB) => new FoxCore.EntityClassDictionary(address, idA, idB),
			[nameof(FoxCore.PropertyValueEntity)] = (address, idA, idB) => new FoxCore.PropertyValueEntity(address, idA, idB),
			[nameof(FoxCore.Int8Entity)] = (address, idA, idB) => new FoxCore.Int8Entity(address, idA, idB),
			[nameof(FoxCore.UInt8Entity)] = (address, idA, idB) => new FoxCore.UInt8Entity(address, idA, idB),
			[nameof(FoxCore.Int16Entity)] = (address, idA, idB) => new FoxCore.Int16Entity(address, idA, idB),
			[nameof(FoxCore.UInt16Entity)] = (address, idA, idB) => new FoxCore.UInt16Entity(address, idA, idB),
			[nameof(FoxCore.Int32Entity)] = (address, idA, idB) => new FoxCore.Int32Entity(address, idA, idB),
			[nameof(FoxCore.UInt32Entity)] = (address, idA, idB) => new FoxCore.UInt32Entity(address, idA, idB),
			[nameof(FoxCore.Int64Entity)] = (address, idA, idB) => new FoxCore.Int64Entity(address, idA, idB),
			[nameof(FoxCore.UInt64Entity)] = (address, idA, idB) => new FoxCore.UInt64Entity(address, idA, idB),
			[nameof(FoxCore.FloatEntity)] = (address, idA, idB) => new FoxCore.FloatEntity(address, idA, idB),
			[nameof(FoxCore.DoubleEntity)] = (address, idA, idB) => new FoxCore.DoubleEntity(address, idA, idB),
			[nameof(FoxCore.BoolEntity)] = (address, idA, idB) => new FoxCore.BoolEntity(address, idA, idB),
			[nameof(FoxCore.StringEntity)] = (address, idA, idB) => new FoxCore.StringEntity(address, idA, idB),
			[nameof(FoxCore.PathEntity)] = (address, idA, idB) => new FoxCore.PathEntity(address, idA, idB),
			[nameof(FoxCore.EntityPtrEntity)] = (address, idA, idB) => new FoxCore.EntityPtrEntity(address, idA, idB),
			[nameof(FoxCore.Vector3Entity)] = (address, idA, idB) => new FoxCore.Vector3Entity(address, idA, idB),
			[nameof(FoxCore.Vector4Entity)] = (address, idA, idB) => new FoxCore.Vector4Entity(address, idA, idB),
			[nameof(FoxCore.QuatEntity)] = (address, idA, idB) => new FoxCore.QuatEntity(address, idA, idB),
			[nameof(FoxCore.Matrix3Entity)] = (address, idA, idB) => new FoxCore.Matrix3Entity(address, idA, idB),
			[nameof(FoxCore.Matrix4Entity)] = (address, idA, idB) => new FoxCore.Matrix4Entity(address, idA, idB),
			[nameof(FoxCore.ColorEntity)] = (address, idA, idB) => new FoxCore.ColorEntity(address, idA, idB),
			[nameof(FoxCore.FilePtrEntity)] = (address, idA, idB) => new FoxCore.FilePtrEntity(address, idA, idB),
			[nameof(FoxCore.EntityHandleEntity)] = (address, idA, idB) => new FoxCore.EntityHandleEntity(address, idA, idB),
			[nameof(FoxCore.EntityLinkEntity)] = (address, idA, idB) => new FoxCore.EntityLinkEntity(address, idA, idB),
			[nameof(FoxCore.WideVector3Entity)] = (address, idA, idB) => new FoxCore.WideVector3Entity(address, idA, idB),
			[nameof(FoxCore.UInt32ArrayEntity)] = (address, idA, idB) => new FoxCore.UInt32ArrayEntity(address, idA, idB),
			[nameof(FoxCore.StringArrayEntity)] = (address, idA, idB) => new FoxCore.StringArrayEntity(address, idA, idB),
			[nameof(FoxCore.EntityPtrArrayEntity)] = (address, idA, idB) => new FoxCore.EntityPtrArrayEntity(address, idA, idB),
			[nameof(FoxCore.EntityHandleArrayEntity)] = (address, idA, idB) => new FoxCore.EntityHandleArrayEntity(address, idA, idB),
			[nameof(FoxCore.UInt32ListEntity)] = (address, idA, idB) => new FoxCore.UInt32ListEntity(address, idA, idB),
			[nameof(FoxCore.StringListEntity)] = (address, idA, idB) => new FoxCore.StringListEntity(address, idA, idB),
			[nameof(FoxCore.EntityPtrListEntity)] = (address, idA, idB) => new FoxCore.EntityPtrListEntity(address, idA, idB),
			[nameof(FoxCore.EntityHandleListEntity)] = (address, idA, idB) => new FoxCore.EntityHandleListEntity(address, idA, idB),
			[nameof(FoxCore.StringStringMapEntity)] = (address, idA, idB) => new FoxCore.StringStringMapEntity(address, idA, idB),
			[nameof(FoxCore.EntityPtrStringMapEntity)] = (address, idA, idB) => new FoxCore.EntityPtrStringMapEntity(address, idA, idB),
			[nameof(FoxCore.TagContainerEntity)] = (address, idA, idB) => new FoxCore.TagContainerEntity(address, idA, idB),
			[nameof(FoxCore.File)] = (address, idA, idB) => new FoxCore.File(address, idA, idB),
			[nameof(FoxCore.RawFile)] = (address, idA, idB) => new FoxCore.RawFile(address, idA, idB),
			[nameof(FoxCore.DataSet)] = (address, idA, idB) => new FoxCore.DataSet(address, idA, idB),
			[nameof(FoxCore.DataBody)] = (address, idA, idB) => new FoxCore.DataBody(address, idA, idB),
			[nameof(FoxCore.CallbackProcedureDataBody)] = (address, idA, idB) => new FoxCore.CallbackProcedureDataBody(address, idA, idB),
			[nameof(FoxCore.TransformDataBody)] = (address, idA, idB) => new FoxCore.TransformDataBody(address, idA, idB),
			[nameof(FoxCore.CallbackProcedureTransformDataBody)] = (address, idA, idB) => new FoxCore.CallbackProcedureTransformDataBody(address, idA, idB),
			[nameof(FoxCore.DataBodySet)] = (address, idA, idB) => new FoxCore.DataBodySet(address, idA, idB),
			[nameof(FoxCore.DataIdentifier)] = (address, idA, idB) => new FoxCore.DataIdentifier(address, idA, idB),
			[nameof(FoxCore.ShapeData)] = (address, idA, idB) => new FoxCore.ShapeData(address, idA, idB),
			[nameof(FoxCore.ShapeDataBody)] = (address, idA, idB) => new FoxCore.ShapeDataBody(address, idA, idB),
			[nameof(FoxCore.SphereShape)] = (address, idA, idB) => new FoxCore.SphereShape(address, idA, idB),
			[nameof(FoxCore.SphereShapeBody)] = (address, idA, idB) => new FoxCore.SphereShapeBody(address, idA, idB),
			[nameof(FoxCore.BoxShape)] = (address, idA, idB) => new FoxCore.BoxShape(address, idA, idB),
			[nameof(FoxCore.BoxShapeBody)] = (address, idA, idB) => new FoxCore.BoxShapeBody(address, idA, idB),
			[nameof(FoxCore.CapsuleShape)] = (address, idA, idB) => new FoxCore.CapsuleShape(address, idA, idB),
			[nameof(FoxCore.CapsuleShapeBody)] = (address, idA, idB) => new FoxCore.CapsuleShapeBody(address, idA, idB),
			[nameof(FoxCore.TransformRTEntity)] = (address, idA, idB) => new FoxCore.TransformRTEntity(address, idA, idB),
			[nameof(FoxCore.TransformEntity)] = (address, idA, idB) => new FoxCore.TransformEntity(address, idA, idB),
			[nameof(FoxCore.ShearTransformEntity)] = (address, idA, idB) => new FoxCore.ShearTransformEntity(address, idA, idB),
			[nameof(FoxCore.PivotTransformEntity)] = (address, idA, idB) => new FoxCore.PivotTransformEntity(address, idA, idB),
			[nameof(FoxCore.StageBlockControllerData)] = (address, idA, idB) => new FoxCore.StageBlockControllerData(address, idA, idB),
			[nameof(FoxCore.StageBlockControllerDataBody)] = (address, idA, idB) => new FoxCore.StageBlockControllerDataBody(address, idA, idB),
			[nameof(FoxCore.PassiveBlockControllerData)] = (address, idA, idB) => new FoxCore.PassiveBlockControllerData(address, idA, idB),
			[nameof(FoxCore.PassiveBlockController)] = (address, idA, idB) => new FoxCore.PassiveBlockController(address, idA, idB),
			[nameof(FoxCore.BlockGroupData)] = (address, idA, idB) => new FoxCore.BlockGroupData(address, idA, idB),
			[nameof(FoxCore.BlockGroup)] = (address, idA, idB) => new FoxCore.BlockGroup(address, idA, idB),
			[nameof(FoxCore.EditableBlockPackageBase)] = (address, idA, idB) => new FoxCore.EditableBlockPackageBase(address, idA, idB),
			[nameof(FoxCore.EntityFile)] = (address, idA, idB) => new FoxCore.EntityFile(address, idA, idB),
			[nameof(FoxCore.DataSetFile)] = (address, idA, idB) => new FoxCore.DataSetFile(address, idA, idB),
			[nameof(FoxCore.DataSetFile2)] = (address, idA, idB) => new FoxCore.DataSetFile2(address, idA, idB),
			[nameof(FoxCore.ScriptFile)] = (address, idA, idB) => new FoxCore.ScriptFile(address, idA, idB),
			[nameof(FoxCore.StageBlockFile)] = (address, idA, idB) => new FoxCore.StageBlockFile(address, idA, idB),
			[nameof(FoxCore.Group)] = (address, idA, idB) => new FoxCore.Group(address, idA, idB),
			[nameof(FoxCore.Project)] = (address, idA, idB) => new FoxCore.Project(address, idA, idB),
			[nameof(FoxCore.BucketArchive)] = (address, idA, idB) => new FoxCore.BucketArchive(address, idA, idB),
			[nameof(FoxCore.Material)] = (address, idA, idB) => new FoxCore.Material(address, idA, idB),
			[nameof(FoxCore.MaterialBody)] = (address, idA, idB) => new FoxCore.MaterialBody(address, idA, idB),
			[nameof(FoxCore.PathMapper)] = (address, idA, idB) => new FoxCore.PathMapper(address, idA, idB),
			[nameof(FoxCore.PropertyDifference)] = (address, idA, idB) => new FoxCore.PropertyDifference(address, idA, idB),
			[nameof(FoxCore.Int8ArrayPropertyDifference)] = (address, idA, idB) => new FoxCore.Int8ArrayPropertyDifference(address, idA, idB),
			[nameof(FoxCore.UInt8ArrayPropertyDifference)] = (address, idA, idB) => new FoxCore.UInt8ArrayPropertyDifference(address, idA, idB),
			[nameof(FoxCore.Int16ArrayPropertyDifference)] = (address, idA, idB) => new FoxCore.Int16ArrayPropertyDifference(address, idA, idB),
			[nameof(FoxCore.UInt16ArrayPropertyDifference)] = (address, idA, idB) => new FoxCore.UInt16ArrayPropertyDifference(address, idA, idB),
			[nameof(FoxCore.Int32ArrayPropertyDifference)] = (address, idA, idB) => new FoxCore.Int32ArrayPropertyDifference(address, idA, idB),
			[nameof(FoxCore.UInt32ArrayPropertyDifference)] = (address, idA, idB) => new FoxCore.UInt32ArrayPropertyDifference(address, idA, idB),
			[nameof(FoxCore.Int64ArrayPropertyDifference)] = (address, idA, idB) => new FoxCore.Int64ArrayPropertyDifference(address, idA, idB),
			[nameof(FoxCore.UInt64ArrayPropertyDifference)] = (address, idA, idB) => new FoxCore.UInt64ArrayPropertyDifference(address, idA, idB),
			[nameof(FoxCore.FloatArrayPropertyDifference)] = (address, idA, idB) => new FoxCore.FloatArrayPropertyDifference(address, idA, idB),
			[nameof(FoxCore.DoubleArrayPropertyDifference)] = (address, idA, idB) => new FoxCore.DoubleArrayPropertyDifference(address, idA, idB),
			[nameof(FoxCore.BoolArrayPropertyDifference)] = (address, idA, idB) => new FoxCore.BoolArrayPropertyDifference(address, idA, idB),
			[nameof(FoxCore.StringArrayPropertyDifference)] = (address, idA, idB) => new FoxCore.StringArrayPropertyDifference(address, idA, idB),
			[nameof(FoxCore.PathArrayPropertyDifference)] = (address, idA, idB) => new FoxCore.PathArrayPropertyDifference(address, idA, idB),
			[nameof(FoxCore.EntityPtrArrayPropertyDifference)] = (address, idA, idB) => new FoxCore.EntityPtrArrayPropertyDifference(address, idA, idB),
			[nameof(FoxCore.Vector3ArrayPropertyDifference)] = (address, idA, idB) => new FoxCore.Vector3ArrayPropertyDifference(address, idA, idB),
			[nameof(FoxCore.Vector4ArrayPropertyDifference)] = (address, idA, idB) => new FoxCore.Vector4ArrayPropertyDifference(address, idA, idB),
			[nameof(FoxCore.QuatArrayPropertyDifference)] = (address, idA, idB) => new FoxCore.QuatArrayPropertyDifference(address, idA, idB),
			[nameof(FoxCore.Matrix3ArrayPropertyDifference)] = (address, idA, idB) => new FoxCore.Matrix3ArrayPropertyDifference(address, idA, idB),
			[nameof(FoxCore.Matrix4ArrayPropertyDifference)] = (address, idA, idB) => new FoxCore.Matrix4ArrayPropertyDifference(address, idA, idB),
			[nameof(FoxCore.ColorArrayPropertyDifference)] = (address, idA, idB) => new FoxCore.ColorArrayPropertyDifference(address, idA, idB),
			[nameof(FoxCore.FilePtrArrayPropertyDifference)] = (address, idA, idB) => new FoxCore.FilePtrArrayPropertyDifference(address, idA, idB),
			[nameof(FoxCore.EntityHandleArrayPropertyDifference)] = (address, idA, idB) => new FoxCore.EntityHandleArrayPropertyDifference(address, idA, idB),
			[nameof(FoxCore.EntityLinkArrayPropertyDifference)] = (address, idA, idB) => new FoxCore.EntityLinkArrayPropertyDifference(address, idA, idB),
			[nameof(FoxCore.WideVector3ArrayPropertyDifference)] = (address, idA, idB) => new FoxCore.WideVector3ArrayPropertyDifference(address, idA, idB),
			[nameof(FoxCore.Int8StringMapPropertyDifference)] = (address, idA, idB) => new FoxCore.Int8StringMapPropertyDifference(address, idA, idB),
			[nameof(FoxCore.UInt8StringMapPropertyDifference)] = (address, idA, idB) => new FoxCore.UInt8StringMapPropertyDifference(address, idA, idB),
			[nameof(FoxCore.Int16StringMapPropertyDifference)] = (address, idA, idB) => new FoxCore.Int16StringMapPropertyDifference(address, idA, idB),
			[nameof(FoxCore.UInt16StringMapPropertyDifference)] = (address, idA, idB) => new FoxCore.UInt16StringMapPropertyDifference(address, idA, idB),
			[nameof(FoxCore.Int32StringMapPropertyDifference)] = (address, idA, idB) => new FoxCore.Int32StringMapPropertyDifference(address, idA, idB),
			[nameof(FoxCore.UInt32StringMapPropertyDifference)] = (address, idA, idB) => new FoxCore.UInt32StringMapPropertyDifference(address, idA, idB),
			[nameof(FoxCore.Int64StringMapPropertyDifference)] = (address, idA, idB) => new FoxCore.Int64StringMapPropertyDifference(address, idA, idB),
			[nameof(FoxCore.UInt64StringMapPropertyDifference)] = (address, idA, idB) => new FoxCore.UInt64StringMapPropertyDifference(address, idA, idB),
			[nameof(FoxCore.FloatStringMapPropertyDifference)] = (address, idA, idB) => new FoxCore.FloatStringMapPropertyDifference(address, idA, idB),
			[nameof(FoxCore.DoubleStringMapPropertyDifference)] = (address, idA, idB) => new FoxCore.DoubleStringMapPropertyDifference(address, idA, idB),
			[nameof(FoxCore.BoolStringMapPropertyDifference)] = (address, idA, idB) => new FoxCore.BoolStringMapPropertyDifference(address, idA, idB),
			[nameof(FoxCore.StringStringMapPropertyDifference)] = (address, idA, idB) => new FoxCore.StringStringMapPropertyDifference(address, idA, idB),
			[nameof(FoxCore.PathStringMapPropertyDifference)] = (address, idA, idB) => new FoxCore.PathStringMapPropertyDifference(address, idA, idB),
			[nameof(FoxCore.EntityPtrStringMapPropertyDifference)] = (address, idA, idB) => new FoxCore.EntityPtrStringMapPropertyDifference(address, idA, idB),
			[nameof(FoxCore.Vector3StringMapPropertyDifference)] = (address, idA, idB) => new FoxCore.Vector3StringMapPropertyDifference(address, idA, idB),
			[nameof(FoxCore.Vector4StringMapPropertyDifference)] = (address, idA, idB) => new FoxCore.Vector4StringMapPropertyDifference(address, idA, idB),
			[nameof(FoxCore.QuatStringMapPropertyDifference)] = (address, idA, idB) => new FoxCore.QuatStringMapPropertyDifference(address, idA, idB),
			[nameof(FoxCore.Matrix3StringMapPropertyDifference)] = (address, idA, idB) => new FoxCore.Matrix3StringMapPropertyDifference(address, idA, idB),
			[nameof(FoxCore.Matrix4StringMapPropertyDifference)] = (address, idA, idB) => new FoxCore.Matrix4StringMapPropertyDifference(address, idA, idB),
			[nameof(FoxCore.ColorStringMapPropertyDifference)] = (address, idA, idB) => new FoxCore.ColorStringMapPropertyDifference(address, idA, idB),
			[nameof(FoxCore.FilePtrStringMapPropertyDifference)] = (address, idA, idB) => new FoxCore.FilePtrStringMapPropertyDifference(address, idA, idB),
			[nameof(FoxCore.EntityHandleStringMapPropertyDifference)] = (address, idA, idB) => new FoxCore.EntityHandleStringMapPropertyDifference(address, idA, idB),
			[nameof(FoxCore.EntityLinkStringMapPropertyDifference)] = (address, idA, idB) => new FoxCore.EntityLinkStringMapPropertyDifference(address, idA, idB),
			[nameof(FoxCore.WideVector3StringMapPropertyDifference)] = (address, idA, idB) => new FoxCore.WideVector3StringMapPropertyDifference(address, idA, idB),
			[nameof(FoxCore.EntityDifference)] = (address, idA, idB) => new FoxCore.EntityDifference(address, idA, idB),
			[nameof(FoxCore.DataSetDifference)] = (address, idA, idB) => new FoxCore.DataSetDifference(address, idA, idB),
			[nameof(FoxCore.DataSetReference)] = (address, idA, idB) => new FoxCore.DataSetReference(address, idA, idB),
			[nameof(FoxCore.DataSetReferenceBody)] = (address, idA, idB) => new FoxCore.DataSetReferenceBody(address, idA, idB),
			[nameof(FoxCore.FoxFlagContainer)] = (address, idA, idB) => new FoxCore.FoxFlagContainer(address, idA, idB),
			[nameof(FoxCore.Locator)] = (address, idA, idB) => new FoxCore.Locator(address, idA, idB),
			[nameof(FoxGameKit.LocatorBody)] = (address, idA, idB) => new FoxGameKit.LocatorBody(address, idA, idB),
			[nameof(FoxCore.LabelObject)] = (address, idA, idB) => new FoxCore.LabelObject(address, idA, idB),
			[nameof(FoxCore.ConnectPointFile)] = (address, idA, idB) => new FoxCore.ConnectPointFile(address, idA, idB),
			[nameof(FoxCore.FoxDataLinkCollectorData)] = (address, idA, idB) => new FoxCore.FoxDataLinkCollectorData(address, idA, idB),
			[nameof(FoxCore.FoxDataLinkCollectorDataBody)] = (address, idA, idB) => new FoxCore.FoxDataLinkCollectorDataBody(address, idA, idB),
			[nameof(FoxCore.FoxDataLinkCollector)] = (address, idA, idB) => new FoxCore.FoxDataLinkCollector(address, idA, idB),
			[nameof(FoxCore.ScriptBlockScript)] = (address, idA, idB) => new FoxCore.ScriptBlockScript(address, idA, idB),
			[nameof(FoxCore.ScriptBlockData)] = (address, idA, idB) => new FoxCore.ScriptBlockData(address, idA, idB),
			[nameof(Nt.SyncUniqueId)] = (address, idA, idB) => new Nt.SyncUniqueId(address, idA, idB),
			[nameof(Nt.SyncInstance)] = (address, idA, idB) => new Nt.SyncInstance(address, idA, idB),
			[nameof(Nt.SyncFactory2)] = (address, idA, idB) => new Nt.SyncFactory2(address, idA, idB),
			[nameof(Nt.Replay)] = (address, idA, idB) => new Nt.Replay(address, idA, idB),
			[nameof(Nt.NtMemberSyncInstance)] = (address, idA, idB) => new Nt.NtMemberSyncInstance(address, idA, idB),
			[nameof(Anim.RigFile)] = (address, idA, idB) => new Anim.RigFile(address, idA, idB),
			[nameof(Anim.GaniBaseFile)] = (address, idA, idB) => new Anim.GaniBaseFile(address, idA, idB),
			[nameof(Anim.MtFile)] = (address, idA, idB) => new Anim.MtFile(address, idA, idB),
			[nameof(Anim.EvbFile)] = (address, idA, idB) => new Anim.EvbFile(address, idA, idB),
			[nameof(Anim.EvfFile)] = (address, idA, idB) => new Anim.EvfFile(address, idA, idB),
			[nameof(Anim.MtarFile)] = (address, idA, idB) => new Anim.MtarFile(address, idA, idB),
			[nameof(Anim.CaarFile)] = (address, idA, idB) => new Anim.CaarFile(address, idA, idB),
			[nameof(Anim.SandFile)] = (address, idA, idB) => new Anim.SandFile(address, idA, idB),
			[nameof(Anim.TimeSection)] = (address, idA, idB) => new Anim.TimeSection(address, idA, idB),
			[nameof(Anim.EventDataUnit)] = (address, idA, idB) => new Anim.EventDataUnit(address, idA, idB),
			[nameof(Anim.ParameterMaskElement)] = (address, idA, idB) => new Anim.ParameterMaskElement(address, idA, idB),
			[nameof(Anim.FacialMaskElement)] = (address, idA, idB) => new Anim.FacialMaskElement(address, idA, idB),
			[nameof(Anim.FacialSettingData)] = (address, idA, idB) => new Anim.FacialSettingData(address, idA, idB),
			[nameof(Geo.MaterialInfoBase)] = (address, idA, idB) => new Geo.MaterialInfoBase(address, idA, idB),
			[nameof(Geo.MaterialInfo)] = (address, idA, idB) => new Geo.MaterialInfo(address, idA, idB),
			[nameof(Geo.ColorInfo)] = (address, idA, idB) => new Geo.ColorInfo(address, idA, idB),
			[nameof(Geo.GeoMaterialCache)] = (address, idA, idB) => new Geo.GeoMaterialCache(address, idA, idB),
			[nameof(Geo.GeoShape)] = (address, idA, idB) => new Geo.GeoShape(address, idA, idB),
			[nameof(Geo.GeoShapeBody)] = (address, idA, idB) => new Geo.GeoShapeBody(address, idA, idB),
			[nameof(Geo.GeoGeomFile)] = (address, idA, idB) => new Geo.GeoGeomFile(address, idA, idB),
			[nameof(Geo.GeoGsklFile)] = (address, idA, idB) => new Geo.GeoGsklFile(address, idA, idB),
			[nameof(Geo.GeoTrapFile)] = (address, idA, idB) => new Geo.GeoTrapFile(address, idA, idB),
			[nameof(Geo.GeoBoundingVolumeFile)] = (address, idA, idB) => new Geo.GeoBoundingVolumeFile(address, idA, idB),
			[nameof(Geo.CollisionObject)] = (address, idA, idB) => new Geo.CollisionObject(address, idA, idB),
			[nameof(Geo.CollisionPoly)] = (address, idA, idB) => new Geo.CollisionPoly(address, idA, idB),
			[nameof(Geo.CollisionReference)] = (address, idA, idB) => new Geo.CollisionReference(address, idA, idB),
			[nameof(Geo.CollisionReferenceSet)] = (address, idA, idB) => new Geo.CollisionReferenceSet(address, idA, idB),
			[nameof(Geo.CollisionGeomSet)] = (address, idA, idB) => new Geo.CollisionGeomSet(address, idA, idB),
			[nameof(Geo.CollisionSkeleton)] = (address, idA, idB) => new Geo.CollisionSkeleton(address, idA, idB),
			[nameof(Geo.CollisionSkeletonCreater)] = (address, idA, idB) => new Geo.CollisionSkeletonCreater(address, idA, idB),
			[nameof(Geo.GeoCollisionTerrain2)] = (address, idA, idB) => new Geo.GeoCollisionTerrain2(address, idA, idB),
			[nameof(Geo.GeoCollisionTerrainMap)] = (address, idA, idB) => new Geo.GeoCollisionTerrainMap(address, idA, idB),
			[nameof(Geo.GeoCollisionPrimitiveBase)] = (address, idA, idB) => new Geo.GeoCollisionPrimitiveBase(address, idA, idB),
			[nameof(Geo.GeoCollisionCircle)] = (address, idA, idB) => new Geo.GeoCollisionCircle(address, idA, idB),
			[nameof(Geo.GeoCollisionRect)] = (address, idA, idB) => new Geo.GeoCollisionRect(address, idA, idB),
			[nameof(Geo.GeoCollisionFreeShape)] = (address, idA, idB) => new Geo.GeoCollisionFreeShape(address, idA, idB),
			[nameof(Geo.GeoCollisionPyramidFreeShape)] = (address, idA, idB) => new Geo.GeoCollisionPyramidFreeShape(address, idA, idB),
			[nameof(Geo.GeoPathUnit)] = (address, idA, idB) => new Geo.GeoPathUnit(address, idA, idB),
			[nameof(Geo.GeoPathUnitBody)] = (address, idA, idB) => new Geo.GeoPathUnitBody(address, idA, idB),
			[nameof(Geo.GeoPathGeomHeader)] = (address, idA, idB) => new Geo.GeoPathGeomHeader(address, idA, idB),
			[nameof(Geo.GeoPathFixedPackFile)] = (address, idA, idB) => new Geo.GeoPathFixedPackFile(address, idA, idB),
			[nameof(Geo.GeoPathService)] = (address, idA, idB) => new Geo.GeoPathService(address, idA, idB),
			[nameof(Geo.GeoSearchObject)] = (address, idA, idB) => new Geo.GeoSearchObject(address, idA, idB),
			[nameof(Geo.GeoSearchService)] = (address, idA, idB) => new Geo.GeoSearchService(address, idA, idB),
			[nameof(Geo.GeoSearchPoint)] = (address, idA, idB) => new Geo.GeoSearchPoint(address, idA, idB),
			[nameof(Geo.GeoSearchAABB)] = (address, idA, idB) => new Geo.GeoSearchAABB(address, idA, idB),
			[nameof(Geo.GeoSearchOBB)] = (address, idA, idB) => new Geo.GeoSearchOBB(address, idA, idB),
			[nameof(Geo.GeoSearchSphere)] = (address, idA, idB) => new Geo.GeoSearchSphere(address, idA, idB),
			[nameof(Geo.GeoSearchLine)] = (address, idA, idB) => new Geo.GeoSearchLine(address, idA, idB),
			[nameof(Geo.GeoSearchSegment)] = (address, idA, idB) => new Geo.GeoSearchSegment(address, idA, idB),
			[nameof(Geo.GeoSearchCapsule)] = (address, idA, idB) => new Geo.GeoSearchCapsule(address, idA, idB),
			[nameof(Geo.GeoSearchDynamic)] = (address, idA, idB) => new Geo.GeoSearchDynamic(address, idA, idB),
			[nameof(Geo.TargetExtensionData)] = (address, idA, idB) => new Geo.TargetExtensionData(address, idA, idB),
			[nameof(Geo.GeoTrapCondition)] = (address, idA, idB) => new Geo.GeoTrapCondition(address, idA, idB),
			[nameof(Geo.GeoTrapConditionBody)] = (address, idA, idB) => new Geo.GeoTrapConditionBody(address, idA, idB),
			[nameof(Geo.GeoTrapScriptCondition)] = (address, idA, idB) => new Geo.GeoTrapScriptCondition(address, idA, idB),
			[nameof(Geo.GeoTrapScriptConditionBody)] = (address, idA, idB) => new Geo.GeoTrapScriptConditionBody(address, idA, idB),
			[nameof(Geo.GeoTrapScriptModuleCondition)] = (address, idA, idB) => new Geo.GeoTrapScriptModuleCondition(address, idA, idB),
			[nameof(Geo.GeoTrapScriptModuleConditionBody)] = (address, idA, idB) => new Geo.GeoTrapScriptModuleConditionBody(address, idA, idB),
			[nameof(Geo.GeoTrapInfo)] = (address, idA, idB) => new Geo.GeoTrapInfo(address, idA, idB),
			[nameof(Geo.GeoTrap)] = (address, idA, idB) => new Geo.GeoTrap(address, idA, idB),
			[nameof(Geo.GeoTrapBody)] = (address, idA, idB) => new Geo.GeoTrapBody(address, idA, idB),
			[nameof(Geo.GeoTriggerTrap)] = (address, idA, idB) => new Geo.GeoTriggerTrap(address, idA, idB),
			[nameof(Geo.GeoTrapGeomHeader)] = (address, idA, idB) => new Geo.GeoTrapGeomHeader(address, idA, idB),
			[nameof(Geo.GeoTrapModuleCallbackDataElement)] = (address, idA, idB) => new Geo.GeoTrapModuleCallbackDataElement(address, idA, idB),
			[nameof(Geo.GeoCheckModuleCondition)] = (address, idA, idB) => new Geo.GeoCheckModuleCondition(address, idA, idB),
			[nameof(Geo.GeoCheckModuleConditionBody)] = (address, idA, idB) => new Geo.GeoCheckModuleConditionBody(address, idA, idB),
			[nameof(Geo.GeoModuleCondition)] = (address, idA, idB) => new Geo.GeoModuleCondition(address, idA, idB),
			[nameof(Geo.GeoModuleConditionBody)] = (address, idA, idB) => new Geo.GeoModuleConditionBody(address, idA, idB),
			[nameof(Geo.GeoTrapExecScriptCondition)] = (address, idA, idB) => new Geo.GeoTrapExecScriptCondition(address, idA, idB),
			[nameof(Geo.GeoTrapExecScriptConditionBody)] = (address, idA, idB) => new Geo.GeoTrapExecScriptConditionBody(address, idA, idB),
			[nameof(Geo.GeoTrapScriptCallbackDataElement)] = (address, idA, idB) => new Geo.GeoTrapScriptCallbackDataElement(address, idA, idB),
			[nameof(Geo.RailFile)] = (address, idA, idB) => new Geo.RailFile(address, idA, idB),
			[nameof(Geo.RailUniqueIdFile)] = (address, idA, idB) => new Geo.RailUniqueIdFile(address, idA, idB),
			[nameof(Gr.GrDaemon)] = (address, idA, idB) => new Gr.GrDaemon(address, idA, idB),
			[nameof(Gr.GrCamera)] = (address, idA, idB) => new Gr.GrCamera(address, idA, idB),
			[nameof(Gr.GrTools)] = (address, idA, idB) => new Gr.GrTools(address, idA, idB),
			[nameof(Gr.TerrainMaterialConfigration)] = (address, idA, idB) => new Gr.TerrainMaterialConfigration(address, idA, idB),
			[nameof(Gr.GrViewport)] = (address, idA, idB) => new Gr.GrViewport(address, idA, idB),
			[nameof(Gr.TerrainTileFile)] = (address, idA, idB) => new Gr.TerrainTileFile(address, idA, idB),
			[nameof(Gr.TerrainFile)] = (address, idA, idB) => new Gr.TerrainFile(address, idA, idB),
			[nameof(Gr.FmdlFile)] = (address, idA, idB) => new Gr.FmdlFile(address, idA, idB),
			[nameof(Gr.GrGraphicsSettingManager)] = (address, idA, idB) => new Gr.GrGraphicsSettingManager(address, idA, idB),
			[nameof(Gr.GrRenderPlugin)] = (address, idA, idB) => new Gr.GrRenderPlugin(address, idA, idB),
			[nameof(Gr.GrPlugin2D)] = (address, idA, idB) => new Gr.GrPlugin2D(address, idA, idB),
			[nameof(Gr.GrPlugin2DFrontmost)] = (address, idA, idB) => new Gr.GrPlugin2DFrontmost(address, idA, idB),
			[nameof(Gr.GrPlugin2DShrink)] = (address, idA, idB) => new Gr.GrPlugin2DShrink(address, idA, idB),
			[nameof(Gr.GrPluginAlphaModel)] = (address, idA, idB) => new Gr.GrPluginAlphaModel(address, idA, idB),
			[nameof(Gr.GrPluginClone)] = (address, idA, idB) => new Gr.GrPluginClone(address, idA, idB),
			[nameof(Gr.GrPluginCloneDeferred)] = (address, idA, idB) => new Gr.GrPluginCloneDeferred(address, idA, idB),
			[nameof(Gr.GrPluginCloneWireframe)] = (address, idA, idB) => new Gr.GrPluginCloneWireframe(address, idA, idB),
			[nameof(Gr.GrPluginColorCorrection)] = (address, idA, idB) => new Gr.GrPluginColorCorrection(address, idA, idB),
			[nameof(Gr.GrPluginDecal)] = (address, idA, idB) => new Gr.GrPluginDecal(address, idA, idB),
			[nameof(Gr.GrPluginRawDecal)] = (address, idA, idB) => new Gr.GrPluginRawDecal(address, idA, idB),
			[nameof(Gr.GrPluginDeferredGeometry)] = (address, idA, idB) => new Gr.GrPluginDeferredGeometry(address, idA, idB),
			[nameof(Gr.GrPluginDeferredGeometryOpaque)] = (address, idA, idB) => new Gr.GrPluginDeferredGeometryOpaque(address, idA, idB),
			[nameof(Gr.GrPluginDeferredGeometryDecal)] = (address, idA, idB) => new Gr.GrPluginDeferredGeometryDecal(address, idA, idB),
			[nameof(Gr.GrPluginDeferredGeometryMasked)] = (address, idA, idB) => new Gr.GrPluginDeferredGeometryMasked(address, idA, idB),
			[nameof(Gr.GrPluginMaterialLayer)] = (address, idA, idB) => new Gr.GrPluginMaterialLayer(address, idA, idB),
			[nameof(Gr.GrPluginDeferredRendering)] = (address, idA, idB) => new Gr.GrPluginDeferredRendering(address, idA, idB),
			[nameof(Gr.GrPluginDeferredShading)] = (address, idA, idB) => new Gr.GrPluginDeferredShading(address, idA, idB),
			[nameof(Gr.GrPluginDepthOfField)] = (address, idA, idB) => new Gr.GrPluginDepthOfField(address, idA, idB),
			[nameof(Gr.GrPluginExtendFxModel)] = (address, idA, idB) => new Gr.GrPluginExtendFxModel(address, idA, idB),
			[nameof(Gr.GrPluginForwardRendering)] = (address, idA, idB) => new Gr.GrPluginForwardRendering(address, idA, idB),
			[nameof(Gr.GrPluginOverlayModel)] = (address, idA, idB) => new Gr.GrPluginOverlayModel(address, idA, idB),
			[nameof(Gr.GrPluginGlobalVolumetricFog)] = (address, idA, idB) => new Gr.GrPluginGlobalVolumetricFog(address, idA, idB),
			[nameof(Gr.GrPluginLightAccumulateLayer)] = (address, idA, idB) => new Gr.GrPluginLightAccumulateLayer(address, idA, idB),
			[nameof(Gr.GrPluginLineIntegralSSAO)] = (address, idA, idB) => new Gr.GrPluginLineIntegralSSAO(address, idA, idB),
			[nameof(Gr.GrPluginLocalLight)] = (address, idA, idB) => new Gr.GrPluginLocalLight(address, idA, idB),
			[nameof(Gr.GrPluginModel)] = (address, idA, idB) => new Gr.GrPluginModel(address, idA, idB),
			[nameof(Gr.GrPluginModelSetup)] = (address, idA, idB) => new Gr.GrPluginModelSetup(address, idA, idB),
			[nameof(Gr.GrPluginMotionBlur)] = (address, idA, idB) => new Gr.GrPluginMotionBlur(address, idA, idB),
			[nameof(Gr.GrPluginOccluder)] = (address, idA, idB) => new Gr.GrPluginOccluder(address, idA, idB),
			[nameof(Gr.GrPluginOpticalCamouflage)] = (address, idA, idB) => new Gr.GrPluginOpticalCamouflage(address, idA, idB),
			[nameof(Gr.GrPluginPostFilter)] = (address, idA, idB) => new Gr.GrPluginPostFilter(address, idA, idB),
			[nameof(Gr.GrPluginPrecomputeSky)] = (address, idA, idB) => new Gr.GrPluginPrecomputeSky(address, idA, idB),
			[nameof(Gr.GrPluginPrimitive)] = (address, idA, idB) => new Gr.GrPluginPrimitive(address, idA, idB),
			[nameof(Gr.GrPluginPrimitiveUnfiltered)] = (address, idA, idB) => new Gr.GrPluginPrimitiveUnfiltered(address, idA, idB),
			[nameof(Gr.GrPluginScreenCapture)] = (address, idA, idB) => new Gr.GrPluginScreenCapture(address, idA, idB),
			[nameof(Gr.GrPluginScreenSpaceAmbientOcclusion)] = (address, idA, idB) => new Gr.GrPluginScreenSpaceAmbientOcclusion(address, idA, idB),
			[nameof(Gr.GrPluginShadow)] = (address, idA, idB) => new Gr.GrPluginShadow(address, idA, idB),
			[nameof(Gr.GrPluginSphericalHarmonics)] = (address, idA, idB) => new Gr.GrPluginSphericalHarmonics(address, idA, idB),
			[nameof(Gr.GrPluginSky)] = (address, idA, idB) => new Gr.GrPluginSky(address, idA, idB),
			[nameof(Gr.GrPluginSunlight)] = (address, idA, idB) => new Gr.GrPluginSunlight(address, idA, idB),
			[nameof(Gr.GrPluginSubSurfaceScatter)] = (address, idA, idB) => new Gr.GrPluginSubSurfaceScatter(address, idA, idB),
			[nameof(Gr.GrPluginAmbientObscuranceSSAO)] = (address, idA, idB) => new Gr.GrPluginAmbientObscuranceSSAO(address, idA, idB),
			[nameof(Gr.GrPluginTerrain)] = (address, idA, idB) => new Gr.GrPluginTerrain(address, idA, idB),
			[nameof(Gr.GrPluginSeflShadowOfTerrain)] = (address, idA, idB) => new Gr.GrPluginSeflShadowOfTerrain(address, idA, idB),
			[nameof(Gr.GrPluginTerrainDepth)] = (address, idA, idB) => new Gr.GrPluginTerrainDepth(address, idA, idB),
			[nameof(Gr.GrPluginThermography)] = (address, idA, idB) => new Gr.GrPluginThermography(address, idA, idB),
			[nameof(Gr.GrPluginTonemap)] = (address, idA, idB) => new Gr.GrPluginTonemap(address, idA, idB),
			[nameof(Gr.GrPluginViewCallback)] = (address, idA, idB) => new Gr.GrPluginViewCallback(address, idA, idB),
			[nameof(Gr.GrPluginFxaa)] = (address, idA, idB) => new Gr.GrPluginFxaa(address, idA, idB),
			[nameof(Gr.GrPluginWormhole)] = (address, idA, idB) => new Gr.GrPluginWormhole(address, idA, idB),
			[nameof(Gr.GrPluginLocelReflection)] = (address, idA, idB) => new Gr.GrPluginLocelReflection(address, idA, idB),
			[nameof(Gr.GrPluginPrimitiveDebug)] = (address, idA, idB) => new Gr.GrPluginPrimitiveDebug(address, idA, idB),
			[nameof(Gr.GrViewportParameter)] = (address, idA, idB) => new Gr.GrViewportParameter(address, idA, idB),
			[nameof(Gr.GrFilmicTonemapParameter)] = (address, idA, idB) => new Gr.GrFilmicTonemapParameter(address, idA, idB),
			[nameof(Gr.GrSkyParameter)] = (address, idA, idB) => new Gr.GrSkyParameter(address, idA, idB),
			[nameof(Gr.GrViewportRenderingParameters)] = (address, idA, idB) => new Gr.GrViewportRenderingParameters(address, idA, idB),
			[nameof(Gr.GrViewportLightingParameters)] = (address, idA, idB) => new Gr.GrViewportLightingParameters(address, idA, idB),
			[nameof(Gr.GrViewportColorCorrectionParameters)] = (address, idA, idB) => new Gr.GrViewportColorCorrectionParameters(address, idA, idB),
			[nameof(Gr.GrFilmicTonemap)] = (address, idA, idB) => new Gr.GrFilmicTonemap(address, idA, idB),
			[nameof(Gr.FilmicTonemapBody)] = (address, idA, idB) => new Gr.FilmicTonemapBody(address, idA, idB),
			[nameof(Nav.NavCurrentNavigationDesc)] = (address, idA, idB) => new Nav.NavCurrentNavigationDesc(address, idA, idB),
			[nameof(Nav.NavNavFile)] = (address, idA, idB) => new Nav.NavNavFile(address, idA, idB),
			[nameof(Nav.NavWorldDesc)] = (address, idA, idB) => new Nav.NavWorldDesc(address, idA, idB),
			[nameof(Nav.NavUnitHandleEntity)] = (address, idA, idB) => new Nav.NavUnitHandleEntity(address, idA, idB),
			[nameof(Nav.NavNavigationGraphHandleEntity)] = (address, idA, idB) => new Nav.NavNavigationGraphHandleEntity(address, idA, idB),
			[nameof(Nav.NavEdgeHandleEntity)] = (address, idA, idB) => new Nav.NavEdgeHandleEntity(address, idA, idB),
			[nameof(Nav.NavWorldDaemon)] = (address, idA, idB) => new Nav.NavWorldDaemon(address, idA, idB),
			[nameof(Nav.NavNavigationParameter)] = (address, idA, idB) => new Nav.NavNavigationParameter(address, idA, idB),
			[nameof(Nav.NavNavigationParameterHolder)] = (address, idA, idB) => new Nav.NavNavigationParameterHolder(address, idA, idB),
			[nameof(Nav.NavVehicleNavigationParameter)] = (address, idA, idB) => new Nav.NavVehicleNavigationParameter(address, idA, idB),
			[nameof(Ncl.NclDaemon)] = (address, idA, idB) => new Ncl.NclDaemon(address, idA, idB),
			
			[nameof(GameCore.GameObject)] = (address, idA, idB) => new GameCore.GameObject(address, idA, idB),
			[nameof(GameCore.GameObjectDataBody)] = (address, idA, idB) => new GameCore.GameObjectDataBody(address, idA, idB),
			[nameof(GameCore.GameObjectLocator)] = (address, idA, idB) => new GameCore.GameObjectLocator(address, idA, idB),
			[nameof(GameCore.GameObjectLocatorBody)] = (address, idA, idB) => new GameCore.GameObjectLocatorBody(address, idA, idB),
			[nameof(FoxCore.BlockScript)] = (address, idA, idB) => new FoxCore.BlockScript(address, idA, idB),
			[nameof(FoxCore.BlockScriptBody)] = (address, idA, idB) => new FoxCore.BlockScriptBody(address, idA, idB),
			[nameof(Grx.GrxShape)] = (address, idA, idB) => new Grx.GrxShape(address, idA, idB),
			[nameof(Grx.LightUtility)] = (address, idA, idB) => new Grx.LightUtility(address, idA, idB),
			[nameof(Grx.PointLightBody)] = (address, idA, idB) => new Grx.PointLightBody(address, idA, idB),
			[nameof(Grx.PointLight)] = (address, idA, idB) => new Grx.PointLight(address, idA, idB),
			[nameof(Grx.DirectionalLightBody)] = (address, idA, idB) => new Grx.DirectionalLightBody(address, idA, idB),
			[nameof(Grx.DirectionalLight)] = (address, idA, idB) => new Grx.DirectionalLight(address, idA, idB),
			[nameof(Grx.SpotLightBody)] = (address, idA, idB) => new Grx.SpotLightBody(address, idA, idB),
			[nameof(Grx.SpotLight)] = (address, idA, idB) => new Grx.SpotLight(address, idA, idB),
			[nameof(Grx.HorizonBody)] = (address, idA, idB) => new Grx.HorizonBody(address, idA, idB),
			[nameof(Grx.Horizon)] = (address, idA, idB) => new Grx.Horizon(address, idA, idB),
			[nameof(Grx.LightArray)] = (address, idA, idB) => new Grx.LightArray(address, idA, idB),
			[nameof(Grx.LightArrayBody)] = (address, idA, idB) => new Grx.LightArrayBody(address, idA, idB),
			[nameof(Grx.LightArrayFile)] = (address, idA, idB) => new Grx.LightArrayFile(address, idA, idB),
			[nameof(Grx.PeriodicActor)] = (address, idA, idB) => new Grx.PeriodicActor(address, idA, idB),
			[nameof(Grx.PluginSettingsBody)] = (address, idA, idB) => new Grx.PluginSettingsBody(address, idA, idB),
			[nameof(Grx.GrPluginSettings)] = (address, idA, idB) => new Grx.GrPluginSettings(address, idA, idB),
			[nameof(Grx.ColorCorrectionData)] = (address, idA, idB) => new Grx.ColorCorrectionData(address, idA, idB),
			[nameof(Grx.ColorCorrection)] = (address, idA, idB) => new Grx.ColorCorrection(address, idA, idB),
			[nameof(Grx.GlobalCameraSettings)] = (address, idA, idB) => new Grx.GlobalCameraSettings(address, idA, idB),
			[nameof(Grx.GlobalCameraSettingsBody)] = (address, idA, idB) => new Grx.GlobalCameraSettingsBody(address, idA, idB),
			[nameof(Grx.GrxLineSSAOParameters)] = (address, idA, idB) => new Grx.GrxLineSSAOParameters(address, idA, idB),
			[nameof(Grx.GrxAreaSSAOParameters)] = (address, idA, idB) => new Grx.GrxAreaSSAOParameters(address, idA, idB),
			[nameof(Grx.AmbientOcclusionSettings)] = (address, idA, idB) => new Grx.AmbientOcclusionSettings(address, idA, idB),
			[nameof(Grx.AmbientOcclusionSettingsBody)] = (address, idA, idB) => new Grx.AmbientOcclusionSettingsBody(address, idA, idB),
			[nameof(Grx.GrxUtil)] = (address, idA, idB) => new Grx.GrxUtil(address, idA, idB),
			[nameof(Grx.Occluder)] = (address, idA, idB) => new Grx.Occluder(address, idA, idB),
			[nameof(Grx.GrxOccluderBody)] = (address, idA, idB) => new Grx.GrxOccluderBody(address, idA, idB),
			[nameof(Grx.OccluderEx)] = (address, idA, idB) => new Grx.OccluderEx(address, idA, idB),
			[nameof(Grx.GrxOccluderExBody)] = (address, idA, idB) => new Grx.GrxOccluderExBody(address, idA, idB),
			[nameof(Grx.OccluderArray)] = (address, idA, idB) => new Grx.OccluderArray(address, idA, idB),
			[nameof(Grx.OccluderArrayBody)] = (address, idA, idB) => new Grx.OccluderArrayBody(address, idA, idB),
			[nameof(Grx.OccluderArrayFile)] = (address, idA, idB) => new Grx.OccluderArrayFile(address, idA, idB),
			[nameof(Grx.GrReflectionSetting)] = (address, idA, idB) => new Grx.GrReflectionSetting(address, idA, idB),
			[nameof(Grx.ReflectionSettingBody)] = (address, idA, idB) => new Grx.ReflectionSettingBody(address, idA, idB),
			[nameof(Ph.PhDaemon)] = (address, idA, idB) => new Ph.PhDaemon(address, idA, idB),
			[nameof(Ph.PhMaterialInfo)] = (address, idA, idB) => new Ph.PhMaterialInfo(address, idA, idB),
			[nameof(Ph.PhMaterialManager)] = (address, idA, idB) => new Ph.PhMaterialManager(address, idA, idB),
			[nameof(Ph.PhObjectParam)] = (address, idA, idB) => new Ph.PhObjectParam(address, idA, idB),
			[nameof(Ph.PhObject)] = (address, idA, idB) => new Ph.PhObject(address, idA, idB),
			[nameof(Ph.PhSubObject)] = (address, idA, idB) => new Ph.PhSubObject(address, idA, idB),
			[nameof(Ph.PhObjectDesc)] = (address, idA, idB) => new Ph.PhObjectDesc(address, idA, idB),
			[nameof(Ph.PhRigidBodyParam)] = (address, idA, idB) => new Ph.PhRigidBodyParam(address, idA, idB),
			[nameof(Ph.PhRigidBody)] = (address, idA, idB) => new Ph.PhRigidBody(address, idA, idB),
			[nameof(Ph.PhShapeParam)] = (address, idA, idB) => new Ph.PhShapeParam(address, idA, idB),
			[nameof(Ph.PhShape)] = (address, idA, idB) => new Ph.PhShape(address, idA, idB),
			[nameof(Ph.PhPrimitiveShapeParam)] = (address, idA, idB) => new Ph.PhPrimitiveShapeParam(address, idA, idB),
			[nameof(Ph.PhPrimitiveShape)] = (address, idA, idB) => new Ph.PhPrimitiveShape(address, idA, idB),
			[nameof(Ph.PhPolyhedronShapeParam)] = (address, idA, idB) => new Ph.PhPolyhedronShapeParam(address, idA, idB),
			[nameof(Ph.PhConstraintParam)] = (address, idA, idB) => new Ph.PhConstraintParam(address, idA, idB),
			[nameof(Ph.PhConstraint)] = (address, idA, idB) => new Ph.PhConstraint(address, idA, idB),
			[nameof(Ph.PhBallsocketConstraintParam)] = (address, idA, idB) => new Ph.PhBallsocketConstraintParam(address, idA, idB),
			[nameof(Ph.PhBallsocketConstraint)] = (address, idA, idB) => new Ph.PhBallsocketConstraint(address, idA, idB),
			[nameof(Ph.PhHingeConstraintParam)] = (address, idA, idB) => new Ph.PhHingeConstraintParam(address, idA, idB),
			[nameof(Ph.PhHingeConstraint)] = (address, idA, idB) => new Ph.PhHingeConstraint(address, idA, idB),
			[nameof(Ph.PhShoulderConstraintParam)] = (address, idA, idB) => new Ph.PhShoulderConstraintParam(address, idA, idB),
			[nameof(Ph.PhShoulderConstraint)] = (address, idA, idB) => new Ph.PhShoulderConstraint(address, idA, idB),
			[nameof(Ph.PhMultiShoulderConstraintParam)] = (address, idA, idB) => new Ph.PhMultiShoulderConstraintParam(address, idA, idB),
			[nameof(Ph.PhMultiShoulderConstraint)] = (address, idA, idB) => new Ph.PhMultiShoulderConstraint(address, idA, idB),
			[nameof(Ph.PhMultiHingeConstraintParam)] = (address, idA, idB) => new Ph.PhMultiHingeConstraintParam(address, idA, idB),
			[nameof(Ph.PhMultiHingeConstraint)] = (address, idA, idB) => new Ph.PhMultiHingeConstraint(address, idA, idB),
			[nameof(Ph.PhStiffConstraintParam)] = (address, idA, idB) => new Ph.PhStiffConstraintParam(address, idA, idB),
			[nameof(Ph.PhStiffConstraint)] = (address, idA, idB) => new Ph.PhStiffConstraint(address, idA, idB),
			[nameof(Ph.PhClothHConstraintParam)] = (address, idA, idB) => new Ph.PhClothHConstraintParam(address, idA, idB),
			[nameof(Ph.PhClothVConstraintParam)] = (address, idA, idB) => new Ph.PhClothVConstraintParam(address, idA, idB),
			[nameof(Ph.PhCylinderConstraintParam)] = (address, idA, idB) => new Ph.PhCylinderConstraintParam(address, idA, idB),
			[nameof(Ph.PhCylinderConstraint)] = (address, idA, idB) => new Ph.PhCylinderConstraint(address, idA, idB),
			[nameof(Ph.PhActionParam)] = (address, idA, idB) => new Ph.PhActionParam(address, idA, idB),
			[nameof(Ph.PhWindActionParam)] = (address, idA, idB) => new Ph.PhWindActionParam(address, idA, idB),
			[nameof(MotionGraph.MogFile)] = (address, idA, idB) => new MotionGraph.MogFile(address, idA, idB),
			[nameof(MotionGraph.MotionGraphEnterNodeCallback)] = (address, idA, idB) => new MotionGraph.MotionGraphEnterNodeCallback(address, idA, idB),
			[nameof(MotionGraph.MotionGraphBlendValueConverter)] = (address, idA, idB) => new MotionGraph.MotionGraphBlendValueConverter(address, idA, idB),
			[nameof(MotionGraph.MotionGraphBlendValueStringConverter)] = (address, idA, idB) => new MotionGraph.MotionGraphBlendValueStringConverter(address, idA, idB),
			[nameof(Tactical.GkTacticalObject)] = (address, idA, idB) => new Tactical.GkTacticalObject(address, idA, idB),
			[nameof(Tactical.GkTacticalObjectDesc)] = (address, idA, idB) => new Tactical.GkTacticalObjectDesc(address, idA, idB),
			[nameof(Tactical.GkTacticalPoint)] = (address, idA, idB) => new Tactical.GkTacticalPoint(address, idA, idB),
			[nameof(Tactical.GkTacticalPointBody)] = (address, idA, idB) => new Tactical.GkTacticalPointBody(address, idA, idB),
			[nameof(Tactical.GkTacticalActionEdge)] = (address, idA, idB) => new Tactical.GkTacticalActionEdge(address, idA, idB),
			[nameof(Tactical.GkTacticalActionWaypoint)] = (address, idA, idB) => new Tactical.GkTacticalActionWaypoint(address, idA, idB),
			[nameof(Tactical.GkTacticalAction)] = (address, idA, idB) => new Tactical.GkTacticalAction(address, idA, idB),
			[nameof(Tactical.GkTacticalActionBody)] = (address, idA, idB) => new Tactical.GkTacticalActionBody(address, idA, idB),
			[nameof(Ui.UiDaemon)] = (address, idA, idB) => new Ui.UiDaemon(address, idA, idB),
			[nameof(Ui.UiManager)] = (address, idA, idB) => new Ui.UiManager(address, idA, idB),
			[nameof(Ui.UiObjControl)] = (address, idA, idB) => new Ui.UiObjControl(address, idA, idB),
			
			[nameof(UiScene.UiModelNodeElement)] = (address, idA, idB) => new UiScene.UiModelNodeElement(address, idA, idB),
			[nameof(UiScene.UiModelData)] = (address, idA, idB) => new UiScene.UiModelData(address, idA, idB),
			[nameof(UiScene.UiModelDataBody)] = (address, idA, idB) => new UiScene.UiModelDataBody(address, idA, idB),
			[nameof(UiScene.UiLayoutData)] = (address, idA, idB) => new UiScene.UiLayoutData(address, idA, idB),
			[nameof(UiScene.UiLayoutDataBody)] = (address, idA, idB) => new UiScene.UiLayoutDataBody(address, idA, idB),
			[nameof(UiScene.UiCameraData)] = (address, idA, idB) => new UiScene.UiCameraData(address, idA, idB),
			[nameof(UiScene.UiCameraDataBody)] = (address, idA, idB) => new UiScene.UiCameraDataBody(address, idA, idB),
			[nameof(UiScene.UiAnimData)] = (address, idA, idB) => new UiScene.UiAnimData(address, idA, idB),
			[nameof(UiScene.UiAnimDataBody)] = (address, idA, idB) => new UiScene.UiAnimDataBody(address, idA, idB),
			[nameof(UiScene.UiPaletteData)] = (address, idA, idB) => new UiScene.UiPaletteData(address, idA, idB),
			[nameof(UiScene.UiPaletteDataBody)] = (address, idA, idB) => new UiScene.UiPaletteDataBody(address, idA, idB),
			[nameof(UiScene.UiReplaceTextureData)] = (address, idA, idB) => new UiScene.UiReplaceTextureData(address, idA, idB),
			[nameof(UiScene.UiAnimWorkMemoryData)] = (address, idA, idB) => new UiScene.UiAnimWorkMemoryData(address, idA, idB),
			[nameof(UiScene.UiAnimWorkMemoryDataBody)] = (address, idA, idB) => new UiScene.UiAnimWorkMemoryDataBody(address, idA, idB),
			[nameof(Ui.UiFontData)] = (address, idA, idB) => new Ui.UiFontData(address, idA, idB),
			[nameof(Ui.UiFontDataBody)] = (address, idA, idB) => new Ui.UiFontDataBody(address, idA, idB),
			[nameof(Ui.UiFontGroupData)] = (address, idA, idB) => new Ui.UiFontGroupData(address, idA, idB),
			[nameof(Ui.UiFontGroupDataBody)] = (address, idA, idB) => new Ui.UiFontGroupDataBody(address, idA, idB),
			[nameof(Ui.UiFontDataElement)] = (address, idA, idB) => new Ui.UiFontDataElement(address, idA, idB),
			[nameof(Ui.UiInstanceData)] = (address, idA, idB) => new Ui.UiInstanceData(address, idA, idB),
			[nameof(Ui.UiGraphEntry)] = (address, idA, idB) => new Ui.UiGraphEntry(address, idA, idB),
			[nameof(Ui.UiGraphEntryBody)] = (address, idA, idB) => new Ui.UiGraphEntryBody(address, idA, idB),
			[nameof(Ui.UiNodeData)] = (address, idA, idB) => new Ui.UiNodeData(address, idA, idB),
			[nameof(Ui.UiNodeDataBody)] = (address, idA, idB) => new Ui.UiNodeDataBody(address, idA, idB),
			[nameof(Ui.UiEventNode)] = (address, idA, idB) => new Ui.UiEventNode(address, idA, idB),
			[nameof(Ui.UiEventNodeBody)] = (address, idA, idB) => new Ui.UiEventNodeBody(address, idA, idB),
			[nameof(Ui.UiActionNode)] = (address, idA, idB) => new Ui.UiActionNode(address, idA, idB),
			[nameof(Ui.UiActionNodeBody)] = (address, idA, idB) => new Ui.UiActionNodeBody(address, idA, idB),
			[nameof(Ui.UiOperationNode)] = (address, idA, idB) => new Ui.UiOperationNode(address, idA, idB),
			[nameof(Ui.UiOperationNodeBody)] = (address, idA, idB) => new Ui.UiOperationNodeBody(address, idA, idB),
			[nameof(Ui.UiEdgeData)] = (address, idA, idB) => new Ui.UiEdgeData(address, idA, idB),
			[nameof(Ui.UiEdgeDataBody)] = (address, idA, idB) => new Ui.UiEdgeDataBody(address, idA, idB),
			[nameof(Ui.TexListFile)] = (address, idA, idB) => new Ui.TexListFile(address, idA, idB),
			[nameof(Ui.LangDaemon)] = (address, idA, idB) => new Ui.LangDaemon(address, idA, idB),
			[nameof(Ui.LangFile)] = (address, idA, idB) => new Ui.LangFile(address, idA, idB),
			[nameof(Ui.LangData)] = (address, idA, idB) => new Ui.LangData(address, idA, idB),
			[nameof(Ui.LangDataBody)] = (address, idA, idB) => new Ui.LangDataBody(address, idA, idB),
			[nameof(Graphx.GraphxSpatialGraph)] = (address, idA, idB) => new Graphx.GraphxSpatialGraph(address, idA, idB),
			[nameof(Graphx.GraphxSpatialGraphData)] = (address, idA, idB) => new Graphx.GraphxSpatialGraphData(address, idA, idB),
			[nameof(Graphx.GraphxSpatialGraphDataNode)] = (address, idA, idB) => new Graphx.GraphxSpatialGraphDataNode(address, idA, idB),
			[nameof(Graphx.GraphxSpatialGraphDataEdge)] = (address, idA, idB) => new Graphx.GraphxSpatialGraphDataEdge(address, idA, idB),
			[nameof(Graphx.GraphxPath)] = (address, idA, idB) => new Graphx.GraphxPath(address, idA, idB),
			[nameof(Graphx.GraphxPathData)] = (address, idA, idB) => new Graphx.GraphxPathData(address, idA, idB),
			[nameof(Graphx.GraphxPathVolume)] = (address, idA, idB) => new Graphx.GraphxPathVolume(address, idA, idB),
			[nameof(Graphx.GraphxPathVolumeBody)] = (address, idA, idB) => new Graphx.GraphxPathVolumeBody(address, idA, idB),
			[nameof(Graphx.GraphxPathVertexInsertionInfo)] = (address, idA, idB) => new Graphx.GraphxPathVertexInsertionInfo(address, idA, idB),
			[nameof(Fx.FxVfxFile)] = (address, idA, idB) => new Fx.FxVfxFile(address, idA, idB),
			[nameof(Fx.FxVfxBinaryFile)] = (address, idA, idB) => new Fx.FxVfxBinaryFile(address, idA, idB),
			[nameof(Fx.FxLocatorData)] = (address, idA, idB) => new Fx.FxLocatorData(address, idA, idB),
			[nameof(Fx.FxLocator)] = (address, idA, idB) => new Fx.FxLocator(address, idA, idB),
			[nameof(Fx.FxLocatorGroup)] = (address, idA, idB) => new Fx.FxLocatorGroup(address, idA, idB),
			[nameof(Fx.LocatorGroupBody)] = (address, idA, idB) => new Fx.LocatorGroupBody(address, idA, idB),
			[nameof(Fx.FxLocatorArrayData)] = (address, idA, idB) => new Fx.FxLocatorArrayData(address, idA, idB),
			[nameof(Fx.FxLocatorArrayDataBody)] = (address, idA, idB) => new Fx.FxLocatorArrayDataBody(address, idA, idB),
			[nameof(Sdx.SoundPackage)] = (address, idA, idB) => new Sdx.SoundPackage(address, idA, idB),
			[nameof(Sdx.SoundPackageBody)] = (address, idA, idB) => new Sdx.SoundPackageBody(address, idA, idB),
			[nameof(Sdx.SoundDataFile)] = (address, idA, idB) => new Sdx.SoundDataFile(address, idA, idB),
			[nameof(Sdx.SoundDataFileInfo)] = (address, idA, idB) => new Sdx.SoundDataFileInfo(address, idA, idB),
			[nameof(Sdx.SoundSource)] = (address, idA, idB) => new Sdx.SoundSource(address, idA, idB),
			[nameof(Sdx.SoundSourceBody)] = (address, idA, idB) => new Sdx.SoundSourceBody(address, idA, idB),
			[nameof(Sdx.SoundAreaGlobal)] = (address, idA, idB) => new Sdx.SoundAreaGlobal(address, idA, idB),
			[nameof(Sdx.SoundAreaGlobalBody)] = (address, idA, idB) => new Sdx.SoundAreaGlobalBody(address, idA, idB),
			[nameof(Sdx.SoundAreaGroup)] = (address, idA, idB) => new Sdx.SoundAreaGroup(address, idA, idB),
			[nameof(Sdx.SoundAreaGroupBody)] = (address, idA, idB) => new Sdx.SoundAreaGroupBody(address, idA, idB),
			[nameof(Sdx.SoundAreaMember)] = (address, idA, idB) => new Sdx.SoundAreaMember(address, idA, idB),
			[nameof(Sdx.SoundAreaMemberBody)] = (address, idA, idB) => new Sdx.SoundAreaMemberBody(address, idA, idB),
			[nameof(Sdx.SoundAreaParameter)] = (address, idA, idB) => new Sdx.SoundAreaParameter(address, idA, idB),
			[nameof(Sdx.SoundAreaEdge)] = (address, idA, idB) => new Sdx.SoundAreaEdge(address, idA, idB),
			[nameof(Sdx.SoundAreaEdgeBody)] = (address, idA, idB) => new Sdx.SoundAreaEdgeBody(address, idA, idB),
			[nameof(Sdx.SoundAreaEdgeParameter)] = (address, idA, idB) => new Sdx.SoundAreaEdgeParameter(address, idA, idB),
			[nameof(Sdx.SoundSourceTrapParameter)] = (address, idA, idB) => new Sdx.SoundSourceTrapParameter(address, idA, idB),
			[nameof(Sdx.SoundPhysicsParameter)] = (address, idA, idB) => new Sdx.SoundPhysicsParameter(address, idA, idB),
			[nameof(Phx.PhxAssociationUnitElement)] = (address, idA, idB) => new Phx.PhxAssociationUnitElement(address, idA, idB),
			[nameof(Phx.PhAssociationParam)] = (address, idA, idB) => new Phx.PhAssociationParam(address, idA, idB),
			[nameof(Phx.PhxAssociation)] = (address, idA, idB) => new Phx.PhxAssociation(address, idA, idB),
			[nameof(Phx.PhVehicleNormalEngineParam)] = (address, idA, idB) => new Phx.PhVehicleNormalEngineParam(address, idA, idB),
			[nameof(Phx.PhxVehicleNormalEngine)] = (address, idA, idB) => new Phx.PhxVehicleNormalEngine(address, idA, idB),
			[nameof(Phx.PhxVehicleTransmission)] = (address, idA, idB) => new Phx.PhxVehicleTransmission(address, idA, idB),
			[nameof(Phx.PhVehicleAxisParam)] = (address, idA, idB) => new Phx.PhVehicleAxisParam(address, idA, idB),
			[nameof(Phx.PhxVehicleAxis)] = (address, idA, idB) => new Phx.PhxVehicleAxis(address, idA, idB),
			[nameof(Phx.PhxWheelConstraintParam)] = (address, idA, idB) => new Phx.PhxWheelConstraintParam(address, idA, idB),
			[nameof(Phx.PhxWheelAssociationUnitParam)] = (address, idA, idB) => new Phx.PhxWheelAssociationUnitParam(address, idA, idB),
			[nameof(Graphx.GeoxPath)] = (address, idA, idB) => new Graphx.GeoxPath(address, idA, idB),
			[nameof(Geox.GeoxPathBody)] = (address, idA, idB) => new Geox.GeoxPathBody(address, idA, idB),
			[nameof(Geox.GeoxPath2)] = (address, idA, idB) => new Geox.GeoxPath2(address, idA, idB),
			[nameof(Geox.GeoxPath2Body)] = (address, idA, idB) => new Geox.GeoxPath2Body(address, idA, idB),
			[nameof(Geox.GeoxPathNode)] = (address, idA, idB) => new Geox.GeoxPathNode(address, idA, idB),
			[nameof(Geox.GeoxPathEdge)] = (address, idA, idB) => new Geox.GeoxPathEdge(address, idA, idB),
			[nameof(Geox.GeoxPathPack)] = (address, idA, idB) => new Geox.GeoxPathPack(address, idA, idB),
			[nameof(Geox.GeoxPathPackBody)] = (address, idA, idB) => new Geox.GeoxPathPackBody(address, idA, idB),
			[nameof(Geox.GeoxTrapAreaPath)] = (address, idA, idB) => new Geox.GeoxTrapAreaPath(address, idA, idB),
			[nameof(Geox.GeoxTrapAreaPathBody)] = (address, idA, idB) => new Geox.GeoxTrapAreaPathBody(address, idA, idB),
			[nameof(Geox.GeoxTextureMaterialRegister)] = (address, idA, idB) => new Geox.GeoxTextureMaterialRegister(address, idA, idB),
			[nameof(Geox.GeoxTextureMaterialRegisterBody)] = (address, idA, idB) => new Geox.GeoxTextureMaterialRegisterBody(address, idA, idB),
			[nameof(Geox.GeoxPartsTargetObject)] = (address, idA, idB) => new Geox.GeoxPartsTargetObject(address, idA, idB),
			[nameof(Geox.GeoxPartsTargetObjectBody)] = (address, idA, idB) => new Geox.GeoxPartsTargetObjectBody(address, idA, idB),
			[nameof(Geox.GeoxPartsTargetDefenseObject)] = (address, idA, idB) => new Geox.GeoxPartsTargetDefenseObject(address, idA, idB),
			[nameof(Geox.GeoxPartsTargetDefenseObjectBody)] = (address, idA, idB) => new Geox.GeoxPartsTargetDefenseObjectBody(address, idA, idB),
			[nameof(Geox.GeoxPartsTargetOffenseObject)] = (address, idA, idB) => new Geox.GeoxPartsTargetOffenseObject(address, idA, idB),
			[nameof(Geox.GeoxPartsTargetOffenseObjectBody)] = (address, idA, idB) => new Geox.GeoxPartsTargetOffenseObjectBody(address, idA, idB),
			[nameof(Geox.GeoxPartsTargetUnit)] = (address, idA, idB) => new Geox.GeoxPartsTargetUnit(address, idA, idB),
			[nameof(Geox.GeoxPartsTargetUnitBody)] = (address, idA, idB) => new Geox.GeoxPartsTargetUnitBody(address, idA, idB),
			[nameof(Geox.GeoxPartsTargetExtension)] = (address, idA, idB) => new Geox.GeoxPartsTargetExtension(address, idA, idB),
			[nameof(Geox.GeoxPartsTargetExtensionBody)] = (address, idA, idB) => new Geox.GeoxPartsTargetExtensionBody(address, idA, idB),
			[nameof(Geox.GeoxTargetDesc)] = (address, idA, idB) => new Geox.GeoxTargetDesc(address, idA, idB),
			[nameof(Geox.GeoxTargetModifyCallbackBase)] = (address, idA, idB) => new Geox.GeoxTargetModifyCallbackBase(address, idA, idB),
			[nameof(Geox.GeoxTargetApplicationData)] = (address, idA, idB) => new Geox.GeoxTargetApplicationData(address, idA, idB),
			[nameof(Geox.GeoxPartsTargetFollowSkeleton)] = (address, idA, idB) => new Geox.GeoxPartsTargetFollowSkeleton(address, idA, idB),
			[nameof(Geox.GeoxPartsTargetFollowSkeletonBody)] = (address, idA, idB) => new Geox.GeoxPartsTargetFollowSkeletonBody(address, idA, idB),
			[nameof(Geox.GeoxPathWall)] = (address, idA, idB) => new Geox.GeoxPathWall(address, idA, idB),
			[nameof(Geox.GeoxPathWallBody)] = (address, idA, idB) => new Geox.GeoxPathWallBody(address, idA, idB),
			[nameof(Geox.GeoxPolygonMarker)] = (address, idA, idB) => new Geox.GeoxPolygonMarker(address, idA, idB),
			[nameof(Geox.GeoxPolygonMarkerBody)] = (address, idA, idB) => new Geox.GeoxPolygonMarkerBody(address, idA, idB),
			[nameof(Geox.GeoxDynamicPolygon)] = (address, idA, idB) => new Geox.GeoxDynamicPolygon(address, idA, idB),
			[nameof(Geox.GeoxDynamicPolygonBody)] = (address, idA, idB) => new Geox.GeoxDynamicPolygonBody(address, idA, idB),
			[nameof(Geox.GeoxBoundingVolumeFileParameter)] = (address, idA, idB) => new Geox.GeoxBoundingVolumeFileParameter(address, idA, idB),
			[nameof(Geox.GeoxBoundingVolumeFileParameterLarge)] = (address, idA, idB) => new Geox.GeoxBoundingVolumeFileParameterLarge(address, idA, idB),
			[nameof(Geox.GeoxDynamicBoundingVolumeArea)] = (address, idA, idB) => new Geox.GeoxDynamicBoundingVolumeArea(address, idA, idB),
			[nameof(Geox.GeoxDynamicBoundingVolumeActivator)] = (address, idA, idB) => new Geox.GeoxDynamicBoundingVolumeActivator(address, idA, idB),
			[nameof(Geox.GeoxCollisionPrimitive)] = (address, idA, idB) => new Geox.GeoxCollisionPrimitive(address, idA, idB),
			[nameof(Geox.GeoxCollisionPrimitiveBody)] = (address, idA, idB) => new Geox.GeoxCollisionPrimitiveBody(address, idA, idB),
			[nameof(Geox.CollisionLocator)] = (address, idA, idB) => new Geox.CollisionLocator(address, idA, idB),
			[nameof(Geox.GeoxGeomSetLoader)] = (address, idA, idB) => new Geox.GeoxGeomSetLoader(address, idA, idB),
			[nameof(Geox.GeoxGeomSetLoaderBody)] = (address, idA, idB) => new Geox.GeoxGeomSetLoaderBody(address, idA, idB),
			[nameof(Geox.GeoxCollisionFreeShape)] = (address, idA, idB) => new Geox.GeoxCollisionFreeShape(address, idA, idB),
			[nameof(Geox.GeoxCollisionFreeShapeBody)] = (address, idA, idB) => new Geox.GeoxCollisionFreeShapeBody(address, idA, idB),
			[nameof(Geox.GeoxCollisionPyraidFreeShape)] = (address, idA, idB) => new Geox.GeoxCollisionPyraidFreeShape(address, idA, idB),
			[nameof(Geox.GeoxCollisionPyraidFreeShapeBody)] = (address, idA, idB) => new Geox.GeoxCollisionPyraidFreeShapeBody(address, idA, idB),
			[nameof(Navx.NavxNavBlock)] = (address, idA, idB) => new Navx.NavxNavBlock(address, idA, idB),
			[nameof(Navx.NavxNavBlockBody)] = (address, idA, idB) => new Navx.NavxNavBlockBody(address, idA, idB),
			[nameof(Navx.NavxNavigableParameter)] = (address, idA, idB) => new Navx.NavxNavigableParameter(address, idA, idB),
			[nameof(Navx.NavxWorldGenerateParameter)] = (address, idA, idB) => new Navx.NavxWorldGenerateParameter(address, idA, idB),
			[nameof(Navx.NavxWorldGenerateParameterBody)] = (address, idA, idB) => new Navx.NavxWorldGenerateParameterBody(address, idA, idB),
			[nameof(Navx.NavxBounderData)] = (address, idA, idB) => new Navx.NavxBounderData(address, idA, idB),
			[nameof(Navx.NavxBounderDataBody)] = (address, idA, idB) => new Navx.NavxBounderDataBody(address, idA, idB),
			[nameof(Navx.NavxSwitchBounderData)] = (address, idA, idB) => new Navx.NavxSwitchBounderData(address, idA, idB),
			[nameof(Navx.NavxSwitchBounderDataBody)] = (address, idA, idB) => new Navx.NavxSwitchBounderDataBody(address, idA, idB),
			[nameof(Navx.NavxSquareGraphBounderData)] = (address, idA, idB) => new Navx.NavxSquareGraphBounderData(address, idA, idB),
			[nameof(Navx.NavxSquareGraphBounderDataBody)] = (address, idA, idB) => new Navx.NavxSquareGraphBounderDataBody(address, idA, idB),
			[nameof(Navx.NavxBounderLocator)] = (address, idA, idB) => new Navx.NavxBounderLocator(address, idA, idB),
			[nameof(Navx.NavxBounderLocatorBody)] = (address, idA, idB) => new Navx.NavxBounderLocatorBody(address, idA, idB),
			[nameof(Navx.NavxNavFileLocator)] = (address, idA, idB) => new Navx.NavxNavFileLocator(address, idA, idB),
			[nameof(Navx.NavxNavFileLocatorBody)] = (address, idA, idB) => new Navx.NavxNavFileLocatorBody(address, idA, idB),
			[nameof(Navx.NavxNavFilter)] = (address, idA, idB) => new Navx.NavxNavFilter(address, idA, idB),
			[nameof(Navx.NavxNavFilterBody)] = (address, idA, idB) => new Navx.NavxNavFilterBody(address, idA, idB),
			[nameof(Navx.NavxNavFilterVolume)] = (address, idA, idB) => new Navx.NavxNavFilterVolume(address, idA, idB),
			[nameof(Navx.NavxNavFilterVolumeBody)] = (address, idA, idB) => new Navx.NavxNavFilterVolumeBody(address, idA, idB),
			[nameof(Navx.NavxKeepNavLocator)] = (address, idA, idB) => new Navx.NavxKeepNavLocator(address, idA, idB),
			[nameof(Navx.NavxKeepNavLocatorBody)] = (address, idA, idB) => new Navx.NavxKeepNavLocatorBody(address, idA, idB),
			[nameof(Navx.NavxAttributeInfo)] = (address, idA, idB) => new Navx.NavxAttributeInfo(address, idA, idB),
			[nameof(Navx.NavxAttributePathVolume)] = (address, idA, idB) => new Navx.NavxAttributePathVolume(address, idA, idB),
			[nameof(Navx.NavxAttributePathVolumeBody)] = (address, idA, idB) => new Navx.NavxAttributePathVolumeBody(address, idA, idB),
			[nameof(Navx.NavxHoleSimplificationParameterVolume)] = (address, idA, idB) => new Navx.NavxHoleSimplificationParameterVolume(address, idA, idB),
			[nameof(Navx.NavxHoleSimplificationParameterVolumeBody)] = (address, idA, idB) => new Navx.NavxHoleSimplificationParameterVolumeBody(address, idA, idB),
			[nameof(Navx.NavxFillNavVolume)] = (address, idA, idB) => new Navx.NavxFillNavVolume(address, idA, idB),
			[nameof(Navx.NavxFillNavVolumeBody)] = (address, idA, idB) => new Navx.NavxFillNavVolumeBody(address, idA, idB),
			[nameof(Navx.NavxNavFileConnector)] = (address, idA, idB) => new Navx.NavxNavFileConnector(address, idA, idB),
			[nameof(Navx.NavxNavFileConnectorBody)] = (address, idA, idB) => new Navx.NavxNavFileConnectorBody(address, idA, idB),
			
			[nameof(Animx.HelpBoneFile)] = (address, idA, idB) => new Animx.HelpBoneFile(address, idA, idB),
			[nameof(Sim.SimDaemon)] = (address, idA, idB) => new Sim.SimDaemon(address, idA, idB),
			[nameof(Sim.SimObjectParam)] = (address, idA, idB) => new Sim.SimObjectParam(address, idA, idB),
			[nameof(Sim.SimEngineParam)] = (address, idA, idB) => new Sim.SimEngineParam(address, idA, idB),
			[nameof(Sim.SimEngineOnPhysicsParam)] = (address, idA, idB) => new Sim.SimEngineOnPhysicsParam(address, idA, idB),
			[nameof(Sim.SimEngineOnPhysicsDefaultInfo)] = (address, idA, idB) => new Sim.SimEngineOnPhysicsDefaultInfo(address, idA, idB),
			[nameof(Sim.SimObject)] = (address, idA, idB) => new Sim.SimObject(address, idA, idB),
			[nameof(Sim.SimOnPhysics)] = (address, idA, idB) => new Sim.SimOnPhysics(address, idA, idB),
			[nameof(Sim.SimAssociationUnitParam)] = (address, idA, idB) => new Sim.SimAssociationUnitParam(address, idA, idB),
			[nameof(Sim.SimAssociationUnit)] = (address, idA, idB) => new Sim.SimAssociationUnit(address, idA, idB),
			[nameof(Sim.SimControlElement)] = (address, idA, idB) => new Sim.SimControlElement(address, idA, idB),
			[nameof(Sim.SimWindControl)] = (address, idA, idB) => new Sim.SimWindControl(address, idA, idB),
			[nameof(Sim.SimGravityControl)] = (address, idA, idB) => new Sim.SimGravityControl(address, idA, idB),
			[nameof(Sim.SimInertialControl)] = (address, idA, idB) => new Sim.SimInertialControl(address, idA, idB),
			[nameof(Sim.SimDirectionControl)] = (address, idA, idB) => new Sim.SimDirectionControl(address, idA, idB),
			[nameof(Sim.SimClothControl)] = (address, idA, idB) => new Sim.SimClothControl(address, idA, idB),
			[nameof(Sim.SimClothControlUnit)] = (address, idA, idB) => new Sim.SimClothControlUnit(address, idA, idB),
			[nameof(Sim.SimHitGroupControl)] = (address, idA, idB) => new Sim.SimHitGroupControl(address, idA, idB),
			[nameof(Sim.SimControlParam)] = (address, idA, idB) => new Sim.SimControlParam(address, idA, idB),
			[nameof(Sim.SimWindControlParam)] = (address, idA, idB) => new Sim.SimWindControlParam(address, idA, idB),
			[nameof(Sim.SimGravityControlParam)] = (address, idA, idB) => new Sim.SimGravityControlParam(address, idA, idB),
			[nameof(Sim.SimInertialControlParam)] = (address, idA, idB) => new Sim.SimInertialControlParam(address, idA, idB),
			[nameof(Sim.SimDirectionControlParam)] = (address, idA, idB) => new Sim.SimDirectionControlParam(address, idA, idB),
			[nameof(Sim.SimClothControlParam)] = (address, idA, idB) => new Sim.SimClothControlParam(address, idA, idB),
			[nameof(Sim.SimClothControlUnitParam)] = (address, idA, idB) => new Sim.SimClothControlUnitParam(address, idA, idB),
			[nameof(Sim.SimHitGroupControlParam)] = (address, idA, idB) => new Sim.SimHitGroupControlParam(address, idA, idB),
			[nameof(Sim.SimClothSettingData)] = (address, idA, idB) => new Sim.SimClothSettingData(address, idA, idB),
			[nameof(Des.DesDaemon)] = (address, idA, idB) => new Des.DesDaemon(address, idA, idB),
			[nameof(Des.DesParamData)] = (address, idA, idB) => new Des.DesParamData(address, idA, idB),
			[nameof(Des.DesEffectData)] = (address, idA, idB) => new Des.DesEffectData(address, idA, idB),
			[nameof(Des.DesFixData)] = (address, idA, idB) => new Des.DesFixData(address, idA, idB),
			[nameof(Demo.DemoModelDataNode)] = (address, idA, idB) => new Demo.DemoModelDataNode(address, idA, idB),
			[nameof(Demo.PartsDesc)] = (address, idA, idB) => new Demo.PartsDesc(address, idA, idB),
			[nameof(Demo.ClipData)] = (address, idA, idB) => new Demo.ClipData(address, idA, idB),
			[nameof(Demo.FxBaseLocator)] = (address, idA, idB) => new Demo.FxBaseLocator(address, idA, idB),
			[nameof(Demo.BaseLocatorBody)] = (address, idA, idB) => new Demo.BaseLocatorBody(address, idA, idB),
			[nameof(Demo.DemoBlockPositionSetter)] = (address, idA, idB) => new Demo.DemoBlockPositionSetter(address, idA, idB),
			[nameof(Demo.DemoBlockPositionSetterBody)] = (address, idA, idB) => new Demo.DemoBlockPositionSetterBody(address, idA, idB),
			[nameof(Demo.DemoParameter)] = (address, idA, idB) => new Demo.DemoParameter(address, idA, idB),
			[nameof(Demo.DemoControlCharacterDesc)] = (address, idA, idB) => new Demo.DemoControlCharacterDesc(address, idA, idB),
			[nameof(Demo.DemoFileProxy)] = (address, idA, idB) => new Demo.DemoFileProxy(address, idA, idB),
			[nameof(Demo.DemoFileProxyBody)] = (address, idA, idB) => new Demo.DemoFileProxyBody(address, idA, idB),
			[nameof(Demox.ProceduralDemoData)] = (address, idA, idB) => new Demox.ProceduralDemoData(address, idA, idB),
			[nameof(FoxGameKit.Pad)] = (address, idA, idB) => new FoxGameKit.Pad(address, idA, idB),
			[nameof(FoxGameKit.Pad2)] = (address, idA, idB) => new FoxGameKit.Pad2(address, idA, idB),
			[nameof(FoxGameKit.PadMapping)] = (address, idA, idB) => new FoxGameKit.PadMapping(address, idA, idB),
			[nameof(FoxGameKit.CameraPriority)] = (address, idA, idB) => new FoxGameKit.CameraPriority(address, idA, idB),
			[nameof(FoxGameKit.Camera)] = (address, idA, idB) => new FoxGameKit.Camera(address, idA, idB),
			[nameof(FoxGameKit.CameraSelector)] = (address, idA, idB) => new FoxGameKit.CameraSelector(address, idA, idB),
			[nameof(FoxGameKit.AimCamera)] = (address, idA, idB) => new FoxGameKit.AimCamera(address, idA, idB),
			[nameof(FoxGameKit.OrthogonalCamera)] = (address, idA, idB) => new FoxGameKit.OrthogonalCamera(address, idA, idB),
			[nameof(FoxGameKit.OrthogonalAimCamera)] = (address, idA, idB) => new FoxGameKit.OrthogonalAimCamera(address, idA, idB),
			[nameof(Character.GkPathLineTarget)] = (address, idA, idB) => new Character.GkPathLineTarget(address, idA, idB),
			[nameof(Character.GkPathLineTargetBody)] = (address, idA, idB) => new Character.GkPathLineTargetBody(address, idA, idB),
			[nameof(FoxGameKit.GkTargetData)] = (address, idA, idB) => new FoxGameKit.GkTargetData(address, idA, idB),
			[nameof(FoxGameKit.GkOffenseTargetData)] = (address, idA, idB) => new FoxGameKit.GkOffenseTargetData(address, idA, idB),
			[nameof(FoxGameKit.GkDefenseTargetData)] = (address, idA, idB) => new FoxGameKit.GkDefenseTargetData(address, idA, idB),
			[nameof(FoxGameKit.GkTargetHitInfo)] = (address, idA, idB) => new FoxGameKit.GkTargetHitInfo(address, idA, idB),
			[nameof(FoxGameKit.TargetHitInfoCollector)] = (address, idA, idB) => new FoxGameKit.TargetHitInfoCollector(address, idA, idB),
			[nameof(FoxGameKit.StaticModel)] = (address, idA, idB) => new FoxGameKit.StaticModel(address, idA, idB),
			[nameof(FoxGameKit.StaticModelBody)] = (address, idA, idB) => new FoxGameKit.StaticModelBody(address, idA, idB),
			[nameof(FoxGameKit.StaticModelArray)] = (address, idA, idB) => new FoxGameKit.StaticModelArray(address, idA, idB),
			[nameof(FoxGameKit.StaticModelArrayBody)] = (address, idA, idB) => new FoxGameKit.StaticModelArrayBody(address, idA, idB),
			[nameof(FoxGameKit.StaticModelArrayLinkTarget)] = (address, idA, idB) => new FoxGameKit.StaticModelArrayLinkTarget(address, idA, idB),
			[nameof(FoxGameKit.StaticModelArrayLinkTargetBody)] = (address, idA, idB) => new FoxGameKit.StaticModelArrayLinkTargetBody(address, idA, idB),
			[nameof(FoxGameKit.StaticModelArrayLocator)] = (address, idA, idB) => new FoxGameKit.StaticModelArrayLocator(address, idA, idB),
			[nameof(FoxGameKit.StaticModelArrayLocatorBody)] = (address, idA, idB) => new FoxGameKit.StaticModelArrayLocatorBody(address, idA, idB),
			[nameof(FoxGameKit.StaticModelArrayPathFilter)] = (address, idA, idB) => new FoxGameKit.StaticModelArrayPathFilter(address, idA, idB),
			[nameof(FoxGameKit.StageModel)] = (address, idA, idB) => new FoxGameKit.StageModel(address, idA, idB),
			[nameof(FoxGameKit.StageModelBody)] = (address, idA, idB) => new FoxGameKit.StageModelBody(address, idA, idB),
			[nameof(FoxGameKit.Decal)] = (address, idA, idB) => new FoxGameKit.Decal(address, idA, idB),
			[nameof(FoxGameKit.DecalBody)] = (address, idA, idB) => new FoxGameKit.DecalBody(address, idA, idB),
			[nameof(FoxGameKit.DecalArray)] = (address, idA, idB) => new FoxGameKit.DecalArray(address, idA, idB),
			[nameof(FoxGameKit.DecalArrayBody)] = (address, idA, idB) => new FoxGameKit.DecalArrayBody(address, idA, idB),
			[nameof(FoxGameKit.OpticalCamo)] = (address, idA, idB) => new FoxGameKit.OpticalCamo(address, idA, idB),
			[nameof(FoxGameKit.OpticalCamoBody)] = (address, idA, idB) => new FoxGameKit.OpticalCamoBody(address, idA, idB),
			[nameof(FoxGameKit.OverlayModel)] = (address, idA, idB) => new FoxGameKit.OverlayModel(address, idA, idB),
			[nameof(FoxGameKit.OverlayModelBody)] = (address, idA, idB) => new FoxGameKit.OverlayModelBody(address, idA, idB),
			[nameof(FoxGameKit.PauseController)] = (address, idA, idB) => new FoxGameKit.PauseController(address, idA, idB),
			[nameof(FoxGameKit.TerrainRender)] = (address, idA, idB) => new FoxGameKit.TerrainRender(address, idA, idB),
			[nameof(FoxGameKit.TerrainRenderBody)] = (address, idA, idB) => new FoxGameKit.TerrainRenderBody(address, idA, idB),
			[nameof(FoxGameKit.TerrainBody)] = (address, idA, idB) => new FoxGameKit.TerrainBody(address, idA, idB),
			[nameof(FoxGameKit.Terrain)] = (address, idA, idB) => new FoxGameKit.Terrain(address, idA, idB),
			[nameof(FoxGameKit.LevelingTerrain)] = (address, idA, idB) => new FoxGameKit.LevelingTerrain(address, idA, idB),
			[nameof(FoxGameKit.LevelingTerrainBody)] = (address, idA, idB) => new FoxGameKit.LevelingTerrainBody(address, idA, idB),
			[nameof(FoxGameKit.TerrainHole)] = (address, idA, idB) => new FoxGameKit.TerrainHole(address, idA, idB),
			[nameof(FoxGameKit.TerrainHoleBody)] = (address, idA, idB) => new FoxGameKit.TerrainHoleBody(address, idA, idB),
			[nameof(FoxGameKit.TerrainDecal)] = (address, idA, idB) => new FoxGameKit.TerrainDecal(address, idA, idB),
			[nameof(FoxGameKit.TerrainDecalBody)] = (address, idA, idB) => new FoxGameKit.TerrainDecalBody(address, idA, idB),
			[nameof(FoxGameKit.TerrainDecalPack)] = (address, idA, idB) => new FoxGameKit.TerrainDecalPack(address, idA, idB),
			[nameof(FoxGameKit.TerrainDecalPackBody)] = (address, idA, idB) => new FoxGameKit.TerrainDecalPackBody(address, idA, idB),
			[nameof(FoxGameKit.FoxTerrainDecalPackFile)] = (address, idA, idB) => new FoxGameKit.FoxTerrainDecalPackFile(address, idA, idB),
			[nameof(FoxGameKit.TerrainBlock)] = (address, idA, idB) => new FoxGameKit.TerrainBlock(address, idA, idB),
			[nameof(FoxGameKit.TerrainBlockBody)] = (address, idA, idB) => new FoxGameKit.TerrainBlockBody(address, idA, idB),
			[nameof(FoxGameKit.ObjectBrush)] = (address, idA, idB) => new FoxGameKit.ObjectBrush(address, idA, idB),
			[nameof(FoxGameKit.ObjectBrushBody)] = (address, idA, idB) => new FoxGameKit.ObjectBrushBody(address, idA, idB),
			[nameof(FoxGameKit.ObjectBrushBlock)] = (address, idA, idB) => new FoxGameKit.ObjectBrushBlock(address, idA, idB),
			[nameof(FoxGameKit.ObjectBrushPlugin)] = (address, idA, idB) => new FoxGameKit.ObjectBrushPlugin(address, idA, idB),
			[nameof(FoxGameKit.ObjectBrushPluginBody)] = (address, idA, idB) => new FoxGameKit.ObjectBrushPluginBody(address, idA, idB),
			[nameof(FoxGameKit.ObjectBrushPluginStaticModel)] = (address, idA, idB) => new FoxGameKit.ObjectBrushPluginStaticModel(address, idA, idB),
			[nameof(FoxGameKit.ObjectBrushPluginStaticModelBody)] = (address, idA, idB) => new FoxGameKit.ObjectBrushPluginStaticModelBody(address, idA, idB),
			[nameof(FoxGameKit.ObjectBrushPluginClone)] = (address, idA, idB) => new FoxGameKit.ObjectBrushPluginClone(address, idA, idB),
			[nameof(FoxGameKit.ObjectBrushPluginCloneBody)] = (address, idA, idB) => new FoxGameKit.ObjectBrushPluginCloneBody(address, idA, idB),
			[nameof(FoxGameKit.ViewGroupControlCondition)] = (address, idA, idB) => new FoxGameKit.ViewGroupControlCondition(address, idA, idB),
			[nameof(FoxGameKit.FoxTrapExecViewGroupControlCallbackDataElement)] = (address, idA, idB) => new FoxGameKit.FoxTrapExecViewGroupControlCallbackDataElement(address, idA, idB),
			[nameof(FoxGameKit.GkSightCheckParam)] = (address, idA, idB) => new FoxGameKit.GkSightCheckParam(address, idA, idB),
			[nameof(FoxGameKit.GkSightCheckParamContainer)] = (address, idA, idB) => new FoxGameKit.GkSightCheckParamContainer(address, idA, idB),
			[nameof(FoxGameKit.GkConeSightCheckParam)] = (address, idA, idB) => new FoxGameKit.GkConeSightCheckParam(address, idA, idB),
			[nameof(FoxGameKit.GkSmartObject)] = (address, idA, idB) => new FoxGameKit.GkSmartObject(address, idA, idB),
			[nameof(FoxGameKit.GkSmartObjectBody)] = (address, idA, idB) => new FoxGameKit.GkSmartObjectBody(address, idA, idB),
			[nameof(FoxGameKit.GkSmartObjectSet)] = (address, idA, idB) => new FoxGameKit.GkSmartObjectSet(address, idA, idB),
			[nameof(FoxGameKit.GkSmartObjectSetBody)] = (address, idA, idB) => new FoxGameKit.GkSmartObjectSetBody(address, idA, idB),
			[nameof(FoxGameKit.FoxFadeIo)] = (address, idA, idB) => new FoxGameKit.FoxFadeIo(address, idA, idB),
			[nameof(FoxGameKit.LadbFile)] = (address, idA, idB) => new FoxGameKit.LadbFile(address, idA, idB),
			[nameof(FoxGameKit.SubtitlesDaemon)] = (address, idA, idB) => new FoxGameKit.SubtitlesDaemon(address, idA, idB),
			[nameof(FoxGameKit.SubtitlesGenerator)] = (address, idA, idB) => new FoxGameKit.SubtitlesGenerator(address, idA, idB),
			[nameof(FoxGameKit.SubtitlesGeneratorBody)] = (address, idA, idB) => new FoxGameKit.SubtitlesGeneratorBody(address, idA, idB),
			[nameof(FoxGameKit.SubtitlesPackage)] = (address, idA, idB) => new FoxGameKit.SubtitlesPackage(address, idA, idB),
			[nameof(FoxGameKit.SubtitlesPackageBody)] = (address, idA, idB) => new FoxGameKit.SubtitlesPackageBody(address, idA, idB),
			[nameof(FoxGameKit.SubtitlesPackageFile)] = (address, idA, idB) => new FoxGameKit.SubtitlesPackageFile(address, idA, idB),
			[nameof(FoxGameKit.SubtitlesBlockControllerData)] = (address, idA, idB) => new FoxGameKit.SubtitlesBlockControllerData(address, idA, idB),
			[nameof(FoxGameKit.SubtitlesBlockControllerDataBody)] = (address, idA, idB) => new FoxGameKit.SubtitlesBlockControllerDataBody(address, idA, idB),
			[nameof(FoxGameKit.SubtitlesOptionBlockControllerData)] = (address, idA, idB) => new FoxGameKit.SubtitlesOptionBlockControllerData(address, idA, idB),
			[nameof(FoxGameKit.SubtitlesOptionBlockControllerDataBody)] = (address, idA, idB) => new FoxGameKit.SubtitlesOptionBlockControllerDataBody(address, idA, idB),
			[nameof(FoxGameKit.SubtitlesTrapCondition)] = (address, idA, idB) => new FoxGameKit.SubtitlesTrapCondition(address, idA, idB),
			[nameof(FoxGameKit.SubtitlesTrapConditionBody)] = (address, idA, idB) => new FoxGameKit.SubtitlesTrapConditionBody(address, idA, idB),
			[nameof(FoxGameKit.EvSubtitlesNodeBody)] = (address, idA, idB) => new FoxGameKit.EvSubtitlesNodeBody(address, idA, idB),
			[nameof(FoxGameKit.EvSubtitlesNode)] = (address, idA, idB) => new FoxGameKit.EvSubtitlesNode(address, idA, idB),
			[nameof(FoxGameKit.EvControlSubtitlesNodeBody)] = (address, idA, idB) => new FoxGameKit.EvControlSubtitlesNodeBody(address, idA, idB),
			[nameof(FoxGameKit.EvControlSubtitlesNode)] = (address, idA, idB) => new FoxGameKit.EvControlSubtitlesNode(address, idA, idB),
			[nameof(FoxGameKit.Checkpoint)] = (address, idA, idB) => new FoxGameKit.Checkpoint(address, idA, idB),
			[nameof(FoxGameKit.CheckpointDaemon)] = (address, idA, idB) => new FoxGameKit.CheckpointDaemon(address, idA, idB),
			[nameof(FoxGameKit.CheckpointContainer)] = (address, idA, idB) => new FoxGameKit.CheckpointContainer(address, idA, idB),
			[nameof(FoxGameKit.CheckpointUnit)] = (address, idA, idB) => new FoxGameKit.CheckpointUnit(address, idA, idB),
			[nameof(FoxGameKit.CheckpointObserver)] = (address, idA, idB) => new FoxGameKit.CheckpointObserver(address, idA, idB),
			[nameof(FoxGameKit.CheckpointData)] = (address, idA, idB) => new FoxGameKit.CheckpointData(address, idA, idB),
			[nameof(FoxGameKit.CheckpointTrapScriptModuleCondition)] = (address, idA, idB) => new FoxGameKit.CheckpointTrapScriptModuleCondition(address, idA, idB),
			[nameof(FoxGameKit.CheckpointTrapScriptModuleConditionBody)] = (address, idA, idB) => new FoxGameKit.CheckpointTrapScriptModuleConditionBody(address, idA, idB),
			[nameof(FoxGameKit.GameSequenceController)] = (address, idA, idB) => new FoxGameKit.GameSequenceController(address, idA, idB),
			[nameof(FoxGameKit.EnvironmentDaemon)] = (address, idA, idB) => new FoxGameKit.EnvironmentDaemon(address, idA, idB),
			[nameof(FoxGameKit.EnvironmentManager)] = (address, idA, idB) => new FoxGameKit.EnvironmentManager(address, idA, idB),
			[nameof(FoxGameKit.EnvironmentGlobal)] = (address, idA, idB) => new FoxGameKit.EnvironmentGlobal(address, idA, idB),
			[nameof(FoxGameKit.EnvironmentGlobalBody)] = (address, idA, idB) => new FoxGameKit.EnvironmentGlobalBody(address, idA, idB),
			[nameof(FoxGameKit.EnvironmentArea)] = (address, idA, idB) => new FoxGameKit.EnvironmentArea(address, idA, idB),
			[nameof(FoxGameKit.EnvironmentAreaBody)] = (address, idA, idB) => new FoxGameKit.EnvironmentAreaBody(address, idA, idB),
			[nameof(FoxGameKit.EnvironmentParameter)] = (address, idA, idB) => new FoxGameKit.EnvironmentParameter(address, idA, idB),
			[nameof(FoxGameKit.EnvironmentObject)] = (address, idA, idB) => new FoxGameKit.EnvironmentObject(address, idA, idB),
			[nameof(FoxGameKit.WindManager)] = (address, idA, idB) => new FoxGameKit.WindManager(address, idA, idB),
			[nameof(FoxGameKit.WindGlobal)] = (address, idA, idB) => new FoxGameKit.WindGlobal(address, idA, idB),
			[nameof(FoxGameKit.WindGlobalBody)] = (address, idA, idB) => new FoxGameKit.WindGlobalBody(address, idA, idB),
			[nameof(FoxGameKit.WindArea)] = (address, idA, idB) => new FoxGameKit.WindArea(address, idA, idB),
			[nameof(FoxGameKit.WindAreaBody)] = (address, idA, idB) => new FoxGameKit.WindAreaBody(address, idA, idB),
			[nameof(FoxGameKit.WindParameter)] = (address, idA, idB) => new FoxGameKit.WindParameter(address, idA, idB),
			[nameof(FoxGameKit.WindObject)] = (address, idA, idB) => new FoxGameKit.WindObject(address, idA, idB),
			[nameof(FoxGameKit.GameScript)] = (address, idA, idB) => new FoxGameKit.GameScript(address, idA, idB),
			[nameof(FoxGameKit.GameScriptBody)] = (address, idA, idB) => new FoxGameKit.GameScriptBody(address, idA, idB),
			[nameof(FoxGameKit.GameScriptCheckpointObserver)] = (address, idA, idB) => new FoxGameKit.GameScriptCheckpointObserver(address, idA, idB),
			[nameof(FoxGameKit.GkEventTimerData)] = (address, idA, idB) => new FoxGameKit.GkEventTimerData(address, idA, idB),
			[nameof(FoxGameKit.GkEventTimer)] = (address, idA, idB) => new FoxGameKit.GkEventTimer(address, idA, idB),
			[nameof(FoxGameKit.GkEventTimerManager)] = (address, idA, idB) => new FoxGameKit.GkEventTimerManager(address, idA, idB),
			[nameof(FoxGameKit.Watermark)] = (address, idA, idB) => new FoxGameKit.Watermark(address, idA, idB),
			[nameof(FoxGameKit.WatermarkBody)] = (address, idA, idB) => new FoxGameKit.WatermarkBody(address, idA, idB),
			[nameof(FoxGameKit.IntervalRegulator)] = (address, idA, idB) => new FoxGameKit.IntervalRegulator(address, idA, idB),
			[nameof(FoxGameKit.StageBlockLowModel)] = (address, idA, idB) => new FoxGameKit.StageBlockLowModel(address, idA, idB),
			[nameof(FoxGameKit.StageBlockLowModelBody)] = (address, idA, idB) => new FoxGameKit.StageBlockLowModelBody(address, idA, idB),
			[nameof(FoxGameKit.StageLightFadeData)] = (address, idA, idB) => new FoxGameKit.StageLightFadeData(address, idA, idB),
			[nameof(Demox.StageLightFadeDataBody)] = (address, idA, idB) => new Demox.StageLightFadeDataBody(address, idA, idB),
			[nameof(FoxGameKit.TexturePackLoadConditioner)] = (address, idA, idB) => new FoxGameKit.TexturePackLoadConditioner(address, idA, idB),
			[nameof(FoxGameKit.TexturePackLoadConditionerBody)] = (address, idA, idB) => new FoxGameKit.TexturePackLoadConditionerBody(address, idA, idB),
			[nameof(PartsBuilder.PartDescription)] = (address, idA, idB) => new PartsBuilder.PartDescription(address, idA, idB),
			[nameof(PartsBuilder.ModelDescription)] = (address, idA, idB) => new PartsBuilder.ModelDescription(address, idA, idB),
			[nameof(PartsBuilder.DestructionModelDescription)] = (address, idA, idB) => new PartsBuilder.DestructionModelDescription(address, idA, idB),
			[nameof(PartsBuilder.ConnectModelDescription)] = (address, idA, idB) => new PartsBuilder.ConnectModelDescription(address, idA, idB),
			[nameof(PartsBuilder.CoverModelDescription)] = (address, idA, idB) => new PartsBuilder.CoverModelDescription(address, idA, idB),
			[nameof(PartsBuilder.FoxOffsetModelDescription)] = (address, idA, idB) => new PartsBuilder.FoxOffsetModelDescription(address, idA, idB),
			[nameof(PartsBuilder.EffectDescription)] = (address, idA, idB) => new PartsBuilder.EffectDescription(address, idA, idB),
			[nameof(PartsBuilder.BounderDescription)] = (address, idA, idB) => new PartsBuilder.BounderDescription(address, idA, idB),
			[nameof(PartsBuilder.GeomDescription)] = (address, idA, idB) => new PartsBuilder.GeomDescription(address, idA, idB),
			[nameof(PartsBuilder.GeomSkeletonDescription)] = (address, idA, idB) => new PartsBuilder.GeomSkeletonDescription(address, idA, idB),
			[nameof(PartsBuilder.FoxTargetDescription)] = (address, idA, idB) => new PartsBuilder.FoxTargetDescription(address, idA, idB),
			[nameof(PartsBuilder.PhysicsDescription)] = (address, idA, idB) => new PartsBuilder.PhysicsDescription(address, idA, idB),
			[nameof(PartsBuilder.SimDescription)] = (address, idA, idB) => new PartsBuilder.SimDescription(address, idA, idB),
			[nameof(PartsBuilder.SoundDescription)] = (address, idA, idB) => new PartsBuilder.SoundDescription(address, idA, idB),
			[nameof(PartsBuilder.ClothDescription)] = (address, idA, idB) => new PartsBuilder.ClothDescription(address, idA, idB),
			[nameof(PartsBuilder.VehicleDescription)] = (address, idA, idB) => new PartsBuilder.VehicleDescription(address, idA, idB),
			[nameof(PartsBuilder.FileResourceDescription)] = (address, idA, idB) => new PartsBuilder.FileResourceDescription(address, idA, idB),
			[nameof(FoxGameKit.FormVariationFile2)] = (address, idA, idB) => new FoxGameKit.FormVariationFile2(address, idA, idB),
			[nameof(TppSystem.TppDefaultParameterElement)] = (address, idA, idB) => new TppSystem.TppDefaultParameterElement(address, idA, idB),
			[nameof(TppSystem.TppDefaultParameterContainer)] = (address, idA, idB) => new TppSystem.TppDefaultParameterContainer(address, idA, idB),
			[nameof(TppSystem.TppDefaultParameter)] = (address, idA, idB) => new TppSystem.TppDefaultParameter(address, idA, idB),
			[nameof(TppSystem.TppLocationInformationData)] = (address, idA, idB) => new TppSystem.TppLocationInformationData(address, idA, idB),
			[nameof(TppSystem.TppLocationData)] = (address, idA, idB) => new TppSystem.TppLocationData(address, idA, idB),
			[nameof(TppSystem.TppWeatherManager)] = (address, idA, idB) => new TppSystem.TppWeatherManager(address, idA, idB),
			[nameof(TppSystem.TppRequestWeatherTagTrapExecDataElement)] = (address, idA, idB) => new TppSystem.TppRequestWeatherTagTrapExecDataElement(address, idA, idB),
			[nameof(TppSystem.TppSystemUtility)] = (address, idA, idB) => new TppSystem.TppSystemUtility(address, idA, idB),
			[nameof(TppSystem.TppOffenseTargetData)] = (address, idA, idB) => new TppSystem.TppOffenseTargetData(address, idA, idB),
			[nameof(TppSystem.TppBlastOffenseTargetData)] = (address, idA, idB) => new TppSystem.TppBlastOffenseTargetData(address, idA, idB),
			[nameof(TppSystem.TppCheckPointTrapExecDataElement)] = (address, idA, idB) => new TppSystem.TppCheckPointTrapExecDataElement(address, idA, idB),
			[nameof(TppSystem.TppCheckPointLocator)] = (address, idA, idB) => new TppSystem.TppCheckPointLocator(address, idA, idB),
			[nameof(TppSystem.ParametersFile)] = (address, idA, idB) => new TppSystem.ParametersFile(address, idA, idB),
			[nameof(TppSystem.TppPauseMenu)] = (address, idA, idB) => new TppSystem.TppPauseMenu(address, idA, idB),
			[nameof(TppSystem.TppTrapChangeEventSequenceCallbackDataElement)] = (address, idA, idB) => new TppSystem.TppTrapChangeEventSequenceCallbackDataElement(address, idA, idB),
			[nameof(TppSystem.TppTrapLockEventSequenceCallbackDataElement)] = (address, idA, idB) => new TppSystem.TppTrapLockEventSequenceCallbackDataElement(address, idA, idB),
			[nameof(TppSystem.VideoPlayerMemoryBlock)] = (address, idA, idB) => new TppSystem.VideoPlayerMemoryBlock(address, idA, idB),
			[nameof(Demox.DemoData)] = (address, idA, idB) => new Demox.DemoData(address, idA, idB),
			[nameof(Demox.DemoDataBody)] = (address, idA, idB) => new Demox.DemoDataBody(address, idA, idB),
			[nameof(Demox.DemoDynamicFileChangeModel)] = (address, idA, idB) => new Demox.DemoDynamicFileChangeModel(address, idA, idB),
			[nameof(Demox.DemoFv2ResourceMemory)] = (address, idA, idB) => new Demox.DemoFv2ResourceMemory(address, idA, idB),
			[nameof(Demox.DemoStreamAnimation)] = (address, idA, idB) => new Demox.DemoStreamAnimation(address, idA, idB),
			[nameof(Demox.DemoStreamAnimationBody)] = (address, idA, idB) => new Demox.DemoStreamAnimationBody(address, idA, idB),
			[nameof(Demox.DemoResource)] = (address, idA, idB) => new Demox.DemoResource(address, idA, idB),
			[nameof(Demox.DemoResourceBody)] = (address, idA, idB) => new Demox.DemoResourceBody(address, idA, idB),
			[nameof(EdDemo.DemoRelativePlayParameter)] = (address, idA, idB) => new EdDemo.DemoRelativePlayParameter(address, idA, idB),
			[nameof(Demox.DemoxEffectMemoryPoolData)] = (address, idA, idB) => new Demox.DemoxEffectMemoryPoolData(address, idA, idB),
			[nameof(Demox.DemoxEffectMemoryPoolDataBody)] = (address, idA, idB) => new Demox.DemoxEffectMemoryPoolDataBody(address, idA, idB),
			[nameof(TppSound.TppSoundDaemon)] = (address, idA, idB) => new TppSound.TppSoundDaemon(address, idA, idB),
			[nameof(TppSound.TppSoundWorld)] = (address, idA, idB) => new TppSound.TppSoundWorld(address, idA, idB),
			[nameof(TppSound.TppSoundWorldBody)] = (address, idA, idB) => new TppSound.TppSoundWorldBody(address, idA, idB),
			[nameof(TppSound.TppAmbientFile)] = (address, idA, idB) => new TppSound.TppAmbientFile(address, idA, idB),
			[nameof(TppSound.TppAmbientParameter)] = (address, idA, idB) => new TppSound.TppAmbientParameter(address, idA, idB),
			[nameof(TppSound.TppAmbientSoundSource)] = (address, idA, idB) => new TppSound.TppAmbientSoundSource(address, idA, idB),
			[nameof(TppSound.TppAmbientSourceBody)] = (address, idA, idB) => new TppSound.TppAmbientSourceBody(address, idA, idB),
			[nameof(TppSound.TppMusicManager)] = (address, idA, idB) => new TppSound.TppMusicManager(address, idA, idB),
			[nameof(TppSound.TppMusicParameter)] = (address, idA, idB) => new TppSound.TppMusicParameter(address, idA, idB),
			[nameof(TppSound.MusicFader)] = (address, idA, idB) => new TppSound.MusicFader(address, idA, idB),
			[nameof(TppSound.MusicFaderBody)] = (address, idA, idB) => new TppSound.MusicFaderBody(address, idA, idB),
			[nameof(TppSound.TppAreaEdgeParameter)] = (address, idA, idB) => new TppSound.TppAreaEdgeParameter(address, idA, idB),
			[nameof(TppEffect.TppEffectUtility)] = (address, idA, idB) => new TppEffect.TppEffectUtility(address, idA, idB),
			[nameof(TppEffect.TppEffectCallbackFunction)] = (address, idA, idB) => new TppEffect.TppEffectCallbackFunction(address, idA, idB),
			[nameof(TppEffect.TppWeatherEffectBase)] = (address, idA, idB) => new TppEffect.TppWeatherEffectBase(address, idA, idB),
			
			[nameof(TppEffect.TppMuddledFilter)] = (address, idA, idB) => new TppEffect.TppMuddledFilter(address, idA, idB),
			
			[nameof(TppEffect.TppMuddledFilter2)] = (address, idA, idB) => new TppEffect.TppMuddledFilter2(address, idA, idB),
			[nameof(TppEffect.TppMarshModelPrimitive)] = (address, idA, idB) => new TppEffect.TppMarshModelPrimitive(address, idA, idB),
			[nameof(TppEffect.TppMarshModelPrimitiveBody)] = (address, idA, idB) => new TppEffect.TppMarshModelPrimitiveBody(address, idA, idB),
			[nameof(TppEffect.TppPrimRiverModel)] = (address, idA, idB) => new TppEffect.TppPrimRiverModel(address, idA, idB),
			[nameof(TppEffect.TppPrimRiverModelParam)] = (address, idA, idB) => new TppEffect.TppPrimRiverModelParam(address, idA, idB),
			[nameof(TppEffect.TppPrimRiverModelParamBody)] = (address, idA, idB) => new TppEffect.TppPrimRiverModelParamBody(address, idA, idB),
			[nameof(TppEffect.TppPrimRiverModelTwoLayer)] = (address, idA, idB) => new TppEffect.TppPrimRiverModelTwoLayer(address, idA, idB),
			[nameof(TppEffect.TppPrimRiverModelParamTwoLayer)] = (address, idA, idB) => new TppEffect.TppPrimRiverModelParamTwoLayer(address, idA, idB),
			[nameof(TppEffect.TppPrimRiverModelParamTwoLayerBody)] = (address, idA, idB) => new TppEffect.TppPrimRiverModelParamTwoLayerBody(address, idA, idB),
			[nameof(TppEffect.TppPrimRiverModelOverlay)] = (address, idA, idB) => new TppEffect.TppPrimRiverModelOverlay(address, idA, idB),
			[nameof(TppEffect.TppPrimRiverModelParamOverlay)] = (address, idA, idB) => new TppEffect.TppPrimRiverModelParamOverlay(address, idA, idB),
			[nameof(TppEffect.TppPrimRiverModelParamOverlayBody)] = (address, idA, idB) => new TppEffect.TppPrimRiverModelParamOverlayBody(address, idA, idB),
			[nameof(TppEffect.TppWaterBounding)] = (address, idA, idB) => new TppEffect.TppWaterBounding(address, idA, idB),
			[nameof(TppEffect.TppWaterRippleViewport)] = (address, idA, idB) => new TppEffect.TppWaterRippleViewport(address, idA, idB),
			[nameof(TppEffect.TppDemoIntelligenceObject)] = (address, idA, idB) => new TppEffect.TppDemoIntelligenceObject(address, idA, idB),
			[nameof(TppEffect.TppFocusBokehFilterData)] = (address, idA, idB) => new TppEffect.TppFocusBokehFilterData(address, idA, idB),
			[nameof(TppEffect.TppFocusBokehFilterDataBody)] = (address, idA, idB) => new TppEffect.TppFocusBokehFilterDataBody(address, idA, idB),
			[nameof(TppEffect.TppEyelidFilterData)] = (address, idA, idB) => new TppEffect.TppEyelidFilterData(address, idA, idB),
			[nameof(TppEffect.TppEyelidFilterDataBody)] = (address, idA, idB) => new TppEffect.TppEyelidFilterDataBody(address, idA, idB),
			[nameof(TppEffect.TppWeatherParasiteUnit)] = (address, idA, idB) => new TppEffect.TppWeatherParasiteUnit(address, idA, idB),
			[nameof(TppEffect.TppWeatherParasiteUnitParam)] = (address, idA, idB) => new TppEffect.TppWeatherParasiteUnitParam(address, idA, idB),
			[nameof(TppEffect.TppWeatherSandStormData)] = (address, idA, idB) => new TppEffect.TppWeatherSandStormData(address, idA, idB),
			[nameof(TppEffect.TppEyelidFilterStateManager)] = (address, idA, idB) => new TppEffect.TppEyelidFilterStateManager(address, idA, idB),
			[nameof(TppEffect.TppHeatHaze)] = (address, idA, idB) => new TppEffect.TppHeatHaze(address, idA, idB),
			[nameof(TppEffect.TppHeatHazeDataBody)] = (address, idA, idB) => new TppEffect.TppHeatHazeDataBody(address, idA, idB),
			[nameof(TppEffect.TppDroplets)] = (address, idA, idB) => new TppEffect.TppDroplets(address, idA, idB),
			[nameof(TppEffect.TppDropletsDataBody)] = (address, idA, idB) => new TppEffect.TppDropletsDataBody(address, idA, idB),
			[nameof(TppEffect.TppFireLights)] = (address, idA, idB) => new TppEffect.TppFireLights(address, idA, idB),
			[nameof(TppEffect.TppFireLightsDataBody)] = (address, idA, idB) => new TppEffect.TppFireLightsDataBody(address, idA, idB),
			[nameof(TppEffect.TppFirePropagationLights)] = (address, idA, idB) => new TppEffect.TppFirePropagationLights(address, idA, idB),
			[nameof(TppEffect.TppFirePropagationLightsDataBody)] = (address, idA, idB) => new TppEffect.TppFirePropagationLightsDataBody(address, idA, idB),
			[nameof(TppEffect.TppGrenadeShock)] = (address, idA, idB) => new TppEffect.TppGrenadeShock(address, idA, idB),
			[nameof(TppEffect.TppGrenadeShockDataBody)] = (address, idA, idB) => new TppEffect.TppGrenadeShockDataBody(address, idA, idB),
			[nameof(TppEffect.TppSandWind)] = (address, idA, idB) => new TppEffect.TppSandWind(address, idA, idB),
			[nameof(TppEffect.TppSandWindDataBody)] = (address, idA, idB) => new TppEffect.TppSandWindDataBody(address, idA, idB),
			[nameof(TppEffect.TppFourierOcean)] = (address, idA, idB) => new TppEffect.TppFourierOcean(address, idA, idB),
			[nameof(TppEffect.TppFourierOceanDataBody)] = (address, idA, idB) => new TppEffect.TppFourierOceanDataBody(address, idA, idB),
			[nameof(TppEffect.TppCigaretteSmokeGlobalManager)] = (address, idA, idB) => new TppEffect.TppCigaretteSmokeGlobalManager(address, idA, idB),
			[nameof(TppEffect.TppHiSpeedDustActor)] = (address, idA, idB) => new TppEffect.TppHiSpeedDustActor(address, idA, idB),
			[nameof(TppEffect.TppHighSpeedFilter)] = (address, idA, idB) => new TppEffect.TppHighSpeedFilter(address, idA, idB),
			[nameof(TppEffect.TppBrainDamagedFilter)] = (address, idA, idB) => new TppEffect.TppBrainDamagedFilter(address, idA, idB),
			[nameof(TppEffect.TppOcean)] = (address, idA, idB) => new TppEffect.TppOcean(address, idA, idB),
			[nameof(TppEffect.TppWaterDropsOnCameraLens)] = (address, idA, idB) => new TppEffect.TppWaterDropsOnCameraLens(address, idA, idB),
			[nameof(TppEffect.TppSubViewport)] = (address, idA, idB) => new TppEffect.TppSubViewport(address, idA, idB),
			[nameof(TppEffect.TppVfxFileLoader)] = (address, idA, idB) => new TppEffect.TppVfxFileLoader(address, idA, idB),
			[nameof(TppEffect.TppTextureLoader)] = (address, idA, idB) => new TppEffect.TppTextureLoader(address, idA, idB),
			[nameof(TppEffect.TppNvgFilterNoise)] = (address, idA, idB) => new TppEffect.TppNvgFilterNoise(address, idA, idB),
			[nameof(TppEffect.TppModelMarkerFilterSettings)] = (address, idA, idB) => new TppEffect.TppModelMarkerFilterSettings(address, idA, idB),
			[nameof(TppEffect.TppDamageFilterParam)] = (address, idA, idB) => new TppEffect.TppDamageFilterParam(address, idA, idB),
			[nameof(TppEffect.TppDamageFilterExposure)] = (address, idA, idB) => new TppEffect.TppDamageFilterExposure(address, idA, idB),
			[nameof(TppEffect.TppCollectibleIndicationParam)] = (address, idA, idB) => new TppEffect.TppCollectibleIndicationParam(address, idA, idB),
			[nameof(TppEffect.TppSkySimTimeUpdater)] = (address, idA, idB) => new TppEffect.TppSkySimTimeUpdater(address, idA, idB),
			[nameof(TppEffect.TppSkyEffectControler)] = (address, idA, idB) => new TppEffect.TppSkyEffectControler(address, idA, idB),
			[nameof(TppEffect.TppWeatherCloudShadow)] = (address, idA, idB) => new TppEffect.TppWeatherCloudShadow(address, idA, idB),
			[nameof(TppEffect.TppWeatherCloudShadowSettings)] = (address, idA, idB) => new TppEffect.TppWeatherCloudShadowSettings(address, idA, idB),
			[nameof(TppEffect.TppStar)] = (address, idA, idB) => new TppEffect.TppStar(address, idA, idB),
			[nameof(TppEffect.TppWeatherClimateUpdator)] = (address, idA, idB) => new TppEffect.TppWeatherClimateUpdator(address, idA, idB),
			[nameof(TppEffect.TppWeatherRain)] = (address, idA, idB) => new TppEffect.TppWeatherRain(address, idA, idB),
			[nameof(TppEffect.TppWeatherRainData)] = (address, idA, idB) => new TppEffect.TppWeatherRainData(address, idA, idB),
			[nameof(TppEffect.TppWeatherRainDataBody)] = (address, idA, idB) => new TppEffect.TppWeatherRainDataBody(address, idA, idB),
			[nameof(TppEffect.TppWeatherThunderEffect)] = (address, idA, idB) => new TppEffect.TppWeatherThunderEffect(address, idA, idB),
			[nameof(TppEffect.TppWeatherThunder)] = (address, idA, idB) => new TppEffect.TppWeatherThunder(address, idA, idB),
			[nameof(TppEffect.TppWeatherThunderBody)] = (address, idA, idB) => new TppEffect.TppWeatherThunderBody(address, idA, idB),
			[nameof(TppEffect.TppSkyClouds3)] = (address, idA, idB) => new TppEffect.TppSkyClouds3(address, idA, idB),
			[nameof(TppEffect.TppSkyClouds3Param)] = (address, idA, idB) => new TppEffect.TppSkyClouds3Param(address, idA, idB),
			[nameof(TppEffect.TppSky)] = (address, idA, idB) => new TppEffect.TppSky(address, idA, idB),
			[nameof(TppEffect.TppDirtyModelManager)] = (address, idA, idB) => new TppEffect.TppDirtyModelManager(address, idA, idB),
			[nameof(TppEffect.TppDirtyModelController)] = (address, idA, idB) => new TppEffect.TppDirtyModelController(address, idA, idB),
			[nameof(TppEffect.TppDirtyModelData)] = (address, idA, idB) => new TppEffect.TppDirtyModelData(address, idA, idB),
			[nameof(TppEffect.TppFootPrint)] = (address, idA, idB) => new TppEffect.TppFootPrint(address, idA, idB),
			[nameof(TppEffect.TppFootPrintBody)] = (address, idA, idB) => new TppEffect.TppFootPrintBody(address, idA, idB),
			[nameof(TppEffect.TppRainFilter)] = (address, idA, idB) => new TppEffect.TppRainFilter(address, idA, idB),
			[nameof(TppEffect.TppRainFilterBody)] = (address, idA, idB) => new TppEffect.TppRainFilterBody(address, idA, idB),
			[nameof(TppEffect.TppRainFilterInterrupt)] = (address, idA, idB) => new TppEffect.TppRainFilterInterrupt(address, idA, idB),
			[nameof(TppEffect.TppRainFilterInterruptBody)] = (address, idA, idB) => new TppEffect.TppRainFilterInterruptBody(address, idA, idB),
			[nameof(TppEffect.TppRainFilterInterruptTrans)] = (address, idA, idB) => new TppEffect.TppRainFilterInterruptTrans(address, idA, idB),
			[nameof(TppEffect.TppRainFilterInterruptTransBody)] = (address, idA, idB) => new TppEffect.TppRainFilterInterruptTransBody(address, idA, idB),
			[nameof(TppEffect.TppRainFilterInterruptManager)] = (address, idA, idB) => new TppEffect.TppRainFilterInterruptManager(address, idA, idB),
			[nameof(TppEffect.TppFloorRainSplashData)] = (address, idA, idB) => new TppEffect.TppFloorRainSplashData(address, idA, idB),
			[nameof(TppEffect.TppFloorRainSplashDataBody)] = (address, idA, idB) => new TppEffect.TppFloorRainSplashDataBody(address, idA, idB),
			[nameof(TppEffect.TppLensFlareRootBase)] = (address, idA, idB) => new TppEffect.TppLensFlareRootBase(address, idA, idB),
			[nameof(TppEffect.TppLensFlareRoot)] = (address, idA, idB) => new TppEffect.TppLensFlareRoot(address, idA, idB),
			[nameof(TppEffect.TppLensFlareRootBody)] = (address, idA, idB) => new TppEffect.TppLensFlareRootBody(address, idA, idB),
			[nameof(TppEffect.TppHandLightLensFlareRoot)] = (address, idA, idB) => new TppEffect.TppHandLightLensFlareRoot(address, idA, idB),
			[nameof(TppEffect.TppHandLightLensFlareRootBody)] = (address, idA, idB) => new TppEffect.TppHandLightLensFlareRootBody(address, idA, idB),
			[nameof(TppEffect.TppLensFlareShape)] = (address, idA, idB) => new TppEffect.TppLensFlareShape(address, idA, idB),
			[nameof(TppEffect.TppLensFlareShapeBody)] = (address, idA, idB) => new TppEffect.TppLensFlareShapeBody(address, idA, idB),
			[nameof(TppEffect.TppLensFlareShapeArray)] = (address, idA, idB) => new TppEffect.TppLensFlareShapeArray(address, idA, idB),
			[nameof(TppEffect.TppLensFlareShapeCircle)] = (address, idA, idB) => new TppEffect.TppLensFlareShapeCircle(address, idA, idB),
			[nameof(TppEffect.TppLensFlareShapeCircleBody)] = (address, idA, idB) => new TppEffect.TppLensFlareShapeCircleBody(address, idA, idB),
			[nameof(TppEffect.TppLensFlareMaterial)] = (address, idA, idB) => new TppEffect.TppLensFlareMaterial(address, idA, idB),
			[nameof(TppEffect.TppLensFlareMaterialBody)] = (address, idA, idB) => new TppEffect.TppLensFlareMaterialBody(address, idA, idB),
			[nameof(TppEffect.TppLensFlareField)] = (address, idA, idB) => new TppEffect.TppLensFlareField(address, idA, idB),
			[nameof(TppEffect.TppLensFlareAsymmetricField)] = (address, idA, idB) => new TppEffect.TppLensFlareAsymmetricField(address, idA, idB),
			[nameof(TppEffect.TppLensFlareRateGraph)] = (address, idA, idB) => new TppEffect.TppLensFlareRateGraph(address, idA, idB),
			[nameof(TppEffect.TppLensFlareMultipleShapeManager)] = (address, idA, idB) => new TppEffect.TppLensFlareMultipleShapeManager(address, idA, idB),
			[nameof(TppEffect.TppSunLightFlare)] = (address, idA, idB) => new TppEffect.TppSunLightFlare(address, idA, idB),
			[nameof(TppEffect.TppImplEffectParam)] = (address, idA, idB) => new TppEffect.TppImplEffectParam(address, idA, idB),
			[nameof(TppEffect.TppFadeOutEffectHolder)] = (address, idA, idB) => new TppEffect.TppFadeOutEffectHolder(address, idA, idB),
			[nameof(TppEffect.TppTonemap)] = (address, idA, idB) => new TppEffect.TppTonemap(address, idA, idB),
			[nameof(TppEffect.TppVolumetricFogManager)] = (address, idA, idB) => new TppEffect.TppVolumetricFogManager(address, idA, idB),
			[nameof(TppEffect.TppGlobalVolumetricFogParam)] = (address, idA, idB) => new TppEffect.TppGlobalVolumetricFogParam(address, idA, idB),
			[nameof(TppEffect.TppGlobalVolumetricFog)] = (address, idA, idB) => new TppEffect.TppGlobalVolumetricFog(address, idA, idB),
			[nameof(TppEffect.TppAreaVolumetricFogParam)] = (address, idA, idB) => new TppEffect.TppAreaVolumetricFogParam(address, idA, idB),
			[nameof(TppEffect.TppAreaVolumetricFog)] = (address, idA, idB) => new TppEffect.TppAreaVolumetricFog(address, idA, idB),
			[nameof(TppEffect.TppAreaVolumetricFogBody)] = (address, idA, idB) => new TppEffect.TppAreaVolumetricFogBody(address, idA, idB),
			[nameof(TppEffect.TppSprintBlur)] = (address, idA, idB) => new TppEffect.TppSprintBlur(address, idA, idB),
			[nameof(TppEffect.TppSprintBlurData)] = (address, idA, idB) => new TppEffect.TppSprintBlurData(address, idA, idB),
			[nameof(TppEffect.TppLightProbe)] = (address, idA, idB) => new TppEffect.TppLightProbe(address, idA, idB),
			[nameof(TppEffect.TppLightProbeBody)] = (address, idA, idB) => new TppEffect.TppLightProbeBody(address, idA, idB),
			[nameof(TppEffect.TppLightProbeSHCoefficients)] = (address, idA, idB) => new TppEffect.TppLightProbeSHCoefficients(address, idA, idB),
			[nameof(TppEffect.TppLightProbeSHCoefficientsBody)] = (address, idA, idB) => new TppEffect.TppLightProbeSHCoefficientsBody(address, idA, idB),
			[nameof(TppEffect.TppLightProbeUtility)] = (address, idA, idB) => new TppEffect.TppLightProbeUtility(address, idA, idB),
			[nameof(TppEffect.TppLightProbeArray)] = (address, idA, idB) => new TppEffect.TppLightProbeArray(address, idA, idB),
			[nameof(TppEffect.TppLightProbeArrayBody)] = (address, idA, idB) => new TppEffect.TppLightProbeArrayBody(address, idA, idB),
			[nameof(TppEffect.TppPointLight)] = (address, idA, idB) => new TppEffect.TppPointLight(address, idA, idB),
			[nameof(TppEffect.TppPointLightBody)] = (address, idA, idB) => new TppEffect.TppPointLightBody(address, idA, idB),
			[nameof(TppEffect.TppSpotLight)] = (address, idA, idB) => new TppEffect.TppSpotLight(address, idA, idB),
			[nameof(TppEffect.TppSpotLightBody)] = (address, idA, idB) => new TppEffect.TppSpotLightBody(address, idA, idB),
			[nameof(TppEffect.PrecomputeSkyFile)] = (address, idA, idB) => new TppEffect.PrecomputeSkyFile(address, idA, idB),
			[nameof(TppEffect.TppAtmosphere)] = (address, idA, idB) => new TppEffect.TppAtmosphere(address, idA, idB),
			[nameof(TppEffect.TppAtmosphereBody)] = (address, idA, idB) => new TppEffect.TppAtmosphereBody(address, idA, idB),
			[nameof(TppEffect.TppTrapExecChangeGlobalWindCallbackDataElement)] = (address, idA, idB) => new TppEffect.TppTrapExecChangeGlobalWindCallbackDataElement(address, idA, idB),
			[nameof(TppEffect.TppReflectionSettingTrapCallbackDataElement)] = (address, idA, idB) => new TppEffect.TppReflectionSettingTrapCallbackDataElement(address, idA, idB),
			[nameof(TppEffect.TppTrapExecThunderLightningCallbackDataElement)] = (address, idA, idB) => new TppEffect.TppTrapExecThunderLightningCallbackDataElement(address, idA, idB),
			[nameof(TppEffect.TppTrapExecChangeVolumetricFogCallbackDataElement)] = (address, idA, idB) => new TppEffect.TppTrapExecChangeVolumetricFogCallbackDataElement(address, idA, idB),
			[nameof(TppEffect.TppTrapExecOnOffVolumetricFogCallbackDataElement)] = (address, idA, idB) => new TppEffect.TppTrapExecOnOffVolumetricFogCallbackDataElement(address, idA, idB),
			[nameof(TppEffect.TppTrapRainFilterCallbackDataElement)] = (address, idA, idB) => new TppEffect.TppTrapRainFilterCallbackDataElement(address, idA, idB),
			[nameof(TppEffect.TppOutOfMissionRangeEffect)] = (address, idA, idB) => new TppEffect.TppOutOfMissionRangeEffect(address, idA, idB),
			[nameof(TppEffect.TppNightVision)] = (address, idA, idB) => new TppEffect.TppNightVision(address, idA, idB),
			[nameof(TppEffect.TppNightVisionParam)] = (address, idA, idB) => new TppEffect.TppNightVisionParam(address, idA, idB),
			[nameof(TppNetwork.NetworkInfo)] = (address, idA, idB) => new TppNetwork.NetworkInfo(address, idA, idB),
			[nameof(TppUi.MbdvcBootData)] = (address, idA, idB) => new TppUi.MbdvcBootData(address, idA, idB),
			[nameof(TppUi.MbdvcBootBody)] = (address, idA, idB) => new TppUi.MbdvcBootBody(address, idA, idB),
			[nameof(TppUi.HudBootData)] = (address, idA, idB) => new TppUi.HudBootData(address, idA, idB),
			[nameof(TppUi.HudBootBody)] = (address, idA, idB) => new TppUi.HudBootBody(address, idA, idB),
			[nameof(TppUi.UiCommonDataManager)] = (address, idA, idB) => new TppUi.UiCommonDataManager(address, idA, idB),
			[nameof(TppUi.HudCommonDataManager)] = (address, idA, idB) => new TppUi.HudCommonDataManager(address, idA, idB),
			[nameof(TppUi.UiSupport)] = (address, idA, idB) => new TppUi.UiSupport(address, idA, idB),
			[nameof(TppUi.GetRoomListReceive)] = (address, idA, idB) => new TppUi.GetRoomListReceive(address, idA, idB),
			[nameof(TppUi.GetSoldierlistReceive)] = (address, idA, idB) => new TppUi.GetSoldierlistReceive(address, idA, idB),
			[nameof(TppUi.SetSoldierlistReceive)] = (address, idA, idB) => new TppUi.SetSoldierlistReceive(address, idA, idB),
			[nameof(TppUi.FultonSoldierReceive)] = (address, idA, idB) => new TppUi.FultonSoldierReceive(address, idA, idB),
			[nameof(TppUi.GetWormholeListReceive)] = (address, idA, idB) => new TppUi.GetWormholeListReceive(address, idA, idB),
			[nameof(TppUi.GetWormholeAreaListReceive)] = (address, idA, idB) => new TppUi.GetWormholeAreaListReceive(address, idA, idB),
			[nameof(TppUi.EndingSettingFile)] = (address, idA, idB) => new TppUi.EndingSettingFile(address, idA, idB),
			[nameof(TppGameKit.TppLadderManagerData)] = (address, idA, idB) => new TppGameKit.TppLadderManagerData(address, idA, idB),
			[nameof(TppGameKit.TppLadderData)] = (address, idA, idB) => new TppGameKit.TppLadderData(address, idA, idB),
			[nameof(TppGameKit.TppLadderDataBody)] = (address, idA, idB) => new TppGameKit.TppLadderDataBody(address, idA, idB),
			[nameof(TppGameKit.TppLadderEntryPointData)] = (address, idA, idB) => new TppGameKit.TppLadderEntryPointData(address, idA, idB),
			[nameof(TppGameKit.TppSharedGimmickData)] = (address, idA, idB) => new TppGameKit.TppSharedGimmickData(address, idA, idB),
			[nameof(TppGameKit.TppGimmickLightLinkSetData)] = (address, idA, idB) => new TppGameKit.TppGimmickLightLinkSetData(address, idA, idB),
			[nameof(TppGameKit.TppGimmickPowerCutAreaData)] = (address, idA, idB) => new TppGameKit.TppGimmickPowerCutAreaData(address, idA, idB),
			[nameof(TppGameKit.TppGimmickElectricCableLinkSetData)] = (address, idA, idB) => new TppGameKit.TppGimmickElectricCableLinkSetData(address, idA, idB),
			[nameof(TppGameKit.TppGimmickBrokenElectricCableBank)] = (address, idA, idB) => new TppGameKit.TppGimmickBrokenElectricCableBank(address, idA, idB),
			[nameof(TppGameKit.TppGimmickBrokenCandleBank)] = (address, idA, idB) => new TppGameKit.TppGimmickBrokenCandleBank(address, idA, idB),
			[nameof(TppGameKit.TppGimmickLightGroupingLinkSetData)] = (address, idA, idB) => new TppGameKit.TppGimmickLightGroupingLinkSetData(address, idA, idB),
			[nameof(TppGameKit.TppPermanentGimmickData)] = (address, idA, idB) => new TppGameKit.TppPermanentGimmickData(address, idA, idB),
			[nameof(TppGameKit.TppPermanentGimmickBank)] = (address, idA, idB) => new TppGameKit.TppPermanentGimmickBank(address, idA, idB),
			[nameof(TppGameKit.TppPermanentGimmickSearchLightParameter)] = (address, idA, idB) => new TppGameKit.TppPermanentGimmickSearchLightParameter(address, idA, idB),
			[nameof(TppGameKit.TppPermanentGimmickGatlingGunParameter)] = (address, idA, idB) => new TppGameKit.TppPermanentGimmickGatlingGunParameter(address, idA, idB),
			[nameof(TppGameKit.TppPermanentGimmickFultonableContainerParameter)] = (address, idA, idB) => new TppGameKit.TppPermanentGimmickFultonableContainerParameter(address, idA, idB),
			[nameof(TppGameKit.TppPermanentGimmickImportantBreakableParameter)] = (address, idA, idB) => new TppGameKit.TppPermanentGimmickImportantBreakableParameter(address, idA, idB),
			[nameof(TppGameKit.TppPermanentGimmickMortarParameter)] = (address, idA, idB) => new TppGameKit.TppPermanentGimmickMortarParameter(address, idA, idB),
			[nameof(TppGameKit.TppPermanentGimmickMachineGunParameter)] = (address, idA, idB) => new TppGameKit.TppPermanentGimmickMachineGunParameter(address, idA, idB),
			[nameof(TppGameKit.TppPermanentGimmickDoorParameter)] = (address, idA, idB) => new TppGameKit.TppPermanentGimmickDoorParameter(address, idA, idB),
			[nameof(TppGameKit.TppPermanentGimmickInfraredSensorParameter)] = (address, idA, idB) => new TppGameKit.TppPermanentGimmickInfraredSensorParameter(address, idA, idB),
			[nameof(TppGameKit.TppPermanentGimmickEventAnimationParameter)] = (address, idA, idB) => new TppGameKit.TppPermanentGimmickEventAnimationParameter(address, idA, idB),
			[nameof(TppGameKit.TppPermanentGimmickBridgeParameter)] = (address, idA, idB) => new TppGameKit.TppPermanentGimmickBridgeParameter(address, idA, idB),
			[nameof(TppGameKit.TppPermanentGimmickWaterTowerParameter)] = (address, idA, idB) => new TppGameKit.TppPermanentGimmickWaterTowerParameter(address, idA, idB),
			[nameof(TppGameKit.TppGimmickImmediateStateData)] = (address, idA, idB) => new TppGameKit.TppGimmickImmediateStateData(address, idA, idB),
			[nameof(TppGameKit.TppPermeableStaticModel)] = (address, idA, idB) => new TppGameKit.TppPermeableStaticModel(address, idA, idB),
			[nameof(TppGameKit.TppThermalStaticModel)] = (address, idA, idB) => new TppGameKit.TppThermalStaticModel(address, idA, idB),
			[nameof(TppGameKit.BushOffenseTargetData)] = (address, idA, idB) => new TppGameKit.BushOffenseTargetData(address, idA, idB),
			[nameof(TppGameKit.BushLodParameter)] = (address, idA, idB) => new TppGameKit.BushLodParameter(address, idA, idB),
			[nameof(TppGameKit.ObjectBrushPluginBushDataElement)] = (address, idA, idB) => new TppGameKit.ObjectBrushPluginBushDataElement(address, idA, idB),
			[nameof(TppGameKit.TppObjectBrushPluginBush)] = (address, idA, idB) => new TppGameKit.TppObjectBrushPluginBush(address, idA, idB),
			[nameof(TppGameKit.TppObjectBrushPluginBushBody)] = (address, idA, idB) => new TppGameKit.TppObjectBrushPluginBushBody(address, idA, idB),
			[nameof(TppGameKit.TppBushManager)] = (address, idA, idB) => new TppGameKit.TppBushManager(address, idA, idB),
			[nameof(TppGameKit.TppObjectBrushPluginBushData)] = (address, idA, idB) => new TppGameKit.TppObjectBrushPluginBushData(address, idA, idB),
			[nameof(TppGameKit.TppObjectBrushPluginSkeletonModel)] = (address, idA, idB) => new TppGameKit.TppObjectBrushPluginSkeletonModel(address, idA, idB),
			[nameof(TppGameKit.ObjectBrushPluginSkeletonModelBody)] = (address, idA, idB) => new TppGameKit.ObjectBrushPluginSkeletonModelBody(address, idA, idB),
			[nameof(TppGameKit.TppObjectBrushSkeletonModelDestructionResource)] = (address, idA, idB) => new TppGameKit.TppObjectBrushSkeletonModelDestructionResource(address, idA, idB),
			[nameof(TppGameKit.TppObjectBrushSkeletonModelReserveResource)] = (address, idA, idB) => new TppGameKit.TppObjectBrushSkeletonModelReserveResource(address, idA, idB),
			[nameof(TppGameKit.TppTrapCheckIsInViewCallbackDataElement)] = (address, idA, idB) => new TppGameKit.TppTrapCheckIsInViewCallbackDataElement(address, idA, idB),
			[nameof(TppGameKit.TppTrapCheckIsInCameraCallbackDataElement)] = (address, idA, idB) => new TppGameKit.TppTrapCheckIsInCameraCallbackDataElement(address, idA, idB),
			[nameof(TppGameKit.TppTrapExecEnvironmentMotionCallbackDataElement)] = (address, idA, idB) => new TppGameKit.TppTrapExecEnvironmentMotionCallbackDataElement(address, idA, idB),
			[nameof(TppGameKit.TppTrapExecDamageCallbackDataElement)] = (address, idA, idB) => new TppGameKit.TppTrapExecDamageCallbackDataElement(address, idA, idB),
			[nameof(TppGameKit.TppTrapCheckIsCharacterCallbackDataElement)] = (address, idA, idB) => new TppGameKit.TppTrapCheckIsCharacterCallbackDataElement(address, idA, idB),
			[nameof(TppGameKit.TppTrapCheckIsCharacterWithIdCallbackDataElement)] = (address, idA, idB) => new TppGameKit.TppTrapCheckIsCharacterWithIdCallbackDataElement(address, idA, idB),
			[nameof(TppGameKit.TppTrapCheckIsPlayerCallbackDataElement)] = (address, idA, idB) => new TppGameKit.TppTrapCheckIsPlayerCallbackDataElement(address, idA, idB),
			[nameof(TppGameKit.TppTrapCheckCanSaveAsCheckPointCallbackDataElement)] = (address, idA, idB) => new TppGameKit.TppTrapCheckCanSaveAsCheckPointCallbackDataElement(address, idA, idB),
			[nameof(TppGameKit.TppTrapCheckIsEnemyCallbackDataElement)] = (address, idA, idB) => new TppGameKit.TppTrapCheckIsEnemyCallbackDataElement(address, idA, idB),
			[nameof(TppGameKit.TppTrapCheckIsHostageCallbackDataElement)] = (address, idA, idB) => new TppGameKit.TppTrapCheckIsHostageCallbackDataElement(address, idA, idB),
			[nameof(TppGameKit.TppTrapCheckIsPushPadCallbackDataElement)] = (address, idA, idB) => new TppGameKit.TppTrapCheckIsPushPadCallbackDataElement(address, idA, idB),
			[nameof(TppGameKit.TppTrapCheckIsPlayerAndHostCallbackDataElement)] = (address, idA, idB) => new TppGameKit.TppTrapCheckIsPlayerAndHostCallbackDataElement(address, idA, idB),
			[nameof(TppGameKit.TppTrapCheckIsPlayerAndLocalCallbackDataElement)] = (address, idA, idB) => new TppGameKit.TppTrapCheckIsPlayerAndLocalCallbackDataElement(address, idA, idB),
			[nameof(TppGameKit.TrapCheckCharacterFilterParam)] = (address, idA, idB) => new TppGameKit.TrapCheckCharacterFilterParam(address, idA, idB),
			[nameof(TppGameKit.TppTrapCheckIsPlayerAliveCallbackDataElement)] = (address, idA, idB) => new TppGameKit.TppTrapCheckIsPlayerAliveCallbackDataElement(address, idA, idB),
			[nameof(TppGameKit.TrapExecChangeLodSkeletonModelParam)] = (address, idA, idB) => new TppGameKit.TrapExecChangeLodSkeletonModelParam(address, idA, idB),
			[nameof(TppGameKit.TppCoverPoint)] = (address, idA, idB) => new TppGameKit.TppCoverPoint(address, idA, idB),
			[nameof(TppGameKit.TppCoverPointBody)] = (address, idA, idB) => new TppGameKit.TppCoverPointBody(address, idA, idB),
			[nameof(TppGameKit.TppCoverPointProvider)] = (address, idA, idB) => new TppGameKit.TppCoverPointProvider(address, idA, idB),
			[nameof(TppGameKit.CoverPointFile)] = (address, idA, idB) => new TppGameKit.CoverPointFile(address, idA, idB),
			[nameof(TppGameKit.TppCoverPointFileTransform)] = (address, idA, idB) => new TppGameKit.TppCoverPointFileTransform(address, idA, idB),
			[nameof(TppGameKit.TppCombatLocatorSetData)] = (address, idA, idB) => new TppGameKit.TppCombatLocatorSetData(address, idA, idB),
			[nameof(TppGameKit.TppCombatLocatorSetDataBody)] = (address, idA, idB) => new TppGameKit.TppCombatLocatorSetDataBody(address, idA, idB),
			[nameof(TppGameKit.TppCombatLocatorData)] = (address, idA, idB) => new TppGameKit.TppCombatLocatorData(address, idA, idB),
			[nameof(TppGameKit.TppCombatLocatorDataBody)] = (address, idA, idB) => new TppGameKit.TppCombatLocatorDataBody(address, idA, idB),
			[nameof(TppGameKit.TppGuardTargetData)] = (address, idA, idB) => new TppGameKit.TppGuardTargetData(address, idA, idB),
			[nameof(TppGameKit.TppGuardTargetDataBody)] = (address, idA, idB) => new TppGameKit.TppGuardTargetDataBody(address, idA, idB),
			[nameof(TppGameKit.TppCyprusBlockControl)] = (address, idA, idB) => new TppGameKit.TppCyprusBlockControl(address, idA, idB),
			[nameof(TppGameKit.CyprusBlockControllerData)] = (address, idA, idB) => new TppGameKit.CyprusBlockControllerData(address, idA, idB),
			[nameof(TppGameKit.CyprusBlockControllerDataBody)] = (address, idA, idB) => new TppGameKit.CyprusBlockControllerDataBody(address, idA, idB),
			[nameof(TppGameKit.CyprusBlockLoadFileData)] = (address, idA, idB) => new TppGameKit.CyprusBlockLoadFileData(address, idA, idB),
			[nameof(TppGameKit.CyprusBlockLoadPointDataBody)] = (address, idA, idB) => new TppGameKit.CyprusBlockLoadPointDataBody(address, idA, idB),
			[nameof(TppGameKit.CyprusMissionControllerData)] = (address, idA, idB) => new TppGameKit.CyprusMissionControllerData(address, idA, idB),
			[nameof(EdDemo.TppDemoParameter)] = (address, idA, idB) => new EdDemo.TppDemoParameter(address, idA, idB),
			[nameof(EdDemo.TppInGameDemoParameter)] = (address, idA, idB) => new EdDemo.TppInGameDemoParameter(address, idA, idB),
			[nameof(EdDemo.TppDemoPlayerResourceParameter)] = (address, idA, idB) => new EdDemo.TppDemoPlayerResourceParameter(address, idA, idB),
			[nameof(EdDemo.TppFuneralDemoParameter)] = (address, idA, idB) => new EdDemo.TppFuneralDemoParameter(address, idA, idB),
			[nameof(EdDemo.TppTakePictureParameter)] = (address, idA, idB) => new EdDemo.TppTakePictureParameter(address, idA, idB),
			[nameof(TppGameKit.TppObjectBrushPluginFlutteringGrass)] = (address, idA, idB) => new TppGameKit.TppObjectBrushPluginFlutteringGrass(address, idA, idB),
			[nameof(TppGameKit.ObjectBrushPluginFlutteringGrassBody)] = (address, idA, idB) => new TppGameKit.ObjectBrushPluginFlutteringGrassBody(address, idA, idB),
			[nameof(TppGameKit.TppAdditionalSearchableLightData)] = (address, idA, idB) => new TppGameKit.TppAdditionalSearchableLightData(address, idA, idB),
			[nameof(TppGameKit.EmblemBlender)] = (address, idA, idB) => new TppGameKit.EmblemBlender(address, idA, idB),
			[nameof(TppMotherBaseCore.MotherBaseConstructData)] = (address, idA, idB) => new TppMotherBaseCore.MotherBaseConstructData(address, idA, idB),
			[nameof(TppMotherBaseCore.MotherBaseConstructDataBody)] = (address, idA, idB) => new TppMotherBaseCore.MotherBaseConstructDataBody(address, idA, idB),
			[nameof(TppMotherBaseCore.MotherBaseConstructConnectionData)] = (address, idA, idB) => new TppMotherBaseCore.MotherBaseConstructConnectionData(address, idA, idB),
			[nameof(TppMotherBaseCore.MotherBaseConstructConnector)] = (address, idA, idB) => new TppMotherBaseCore.MotherBaseConstructConnector(address, idA, idB),
			[nameof(TppMotherBaseCore.MotherBaseConstructLocator)] = (address, idA, idB) => new TppMotherBaseCore.MotherBaseConstructLocator(address, idA, idB),
			[nameof(TppMotherBaseCore.MotherBaseConstructLocatorBody)] = (address, idA, idB) => new TppMotherBaseCore.MotherBaseConstructLocatorBody(address, idA, idB),
			[nameof(TppMotherBaseCore.MotherBaseConstructDivisionLocator)] = (address, idA, idB) => new TppMotherBaseCore.MotherBaseConstructDivisionLocator(address, idA, idB),
			[nameof(TppMotherBaseCore.MotherBaseConstructDivisionLocatorBody)] = (address, idA, idB) => new TppMotherBaseCore.MotherBaseConstructDivisionLocatorBody(address, idA, idB),
			[nameof(TppMotherBaseCore.MotherBaseConstructConnectLocator)] = (address, idA, idB) => new TppMotherBaseCore.MotherBaseConstructConnectLocator(address, idA, idB),
			[nameof(TppMotherBaseCore.MotherBaseConstructConnectLocatorBody)] = (address, idA, idB) => new TppMotherBaseCore.MotherBaseConstructConnectLocatorBody(address, idA, idB),
			[nameof(TppMotherBaseCore.MotherBaseReplaceTextureData)] = (address, idA, idB) => new TppMotherBaseCore.MotherBaseReplaceTextureData(address, idA, idB),
			[nameof(TppMotherBaseCore.MotherBaseLayoutFile)] = (address, idA, idB) => new TppMotherBaseCore.MotherBaseLayoutFile(address, idA, idB),
			[nameof(TppGameCore.TppSampleGameObjectParameter)] = (address, idA, idB) => new TppGameCore.TppSampleGameObjectParameter(address, idA, idB),
			[nameof(TppGameCore.TppSampleGameObjectLocatorParameter)] = (address, idA, idB) => new TppGameCore.TppSampleGameObjectLocatorParameter(address, idA, idB),
			[nameof(TppGameCore.LuxuryBlockControllerData)] = (address, idA, idB) => new TppGameCore.LuxuryBlockControllerData(address, idA, idB),
			[nameof(TppGameCore.TppPlayer2Parameter)] = (address, idA, idB) => new TppGameCore.TppPlayer2Parameter(address, idA, idB),
			[nameof(TppGameCore.TppPlayer2LocatorParameter)] = (address, idA, idB) => new TppGameCore.TppPlayer2LocatorParameter(address, idA, idB),
			
			
			[nameof(TppGameCore.TppPlayer2BlockControllerData)] = (address, idA, idB) => new TppGameCore.TppPlayer2BlockControllerData(address, idA, idB),
			[nameof(TppGameCore.TppPlayer2BlockControllerDataBody)] = (address, idA, idB) => new TppGameCore.TppPlayer2BlockControllerDataBody(address, idA, idB),
			[nameof(TppGameCore.TppPlayer2AdditionalMotionBlockData)] = (address, idA, idB) => new TppGameCore.TppPlayer2AdditionalMotionBlockData(address, idA, idB),
			[nameof(TppGameCore.TppPlayer2AdditionalMtarData)] = (address, idA, idB) => new TppGameCore.TppPlayer2AdditionalMtarData(address, idA, idB),
			[nameof(TppGameCore.TppPlayer2AdditionalPartsBlockData)] = (address, idA, idB) => new TppGameCore.TppPlayer2AdditionalPartsBlockData(address, idA, idB),
			[nameof(TppGameCore.TppHorse2Parameter)] = (address, idA, idB) => new TppGameCore.TppHorse2Parameter(address, idA, idB),
			[nameof(TppGameCore.TppHorse2LocatorParameter)] = (address, idA, idB) => new TppGameCore.TppHorse2LocatorParameter(address, idA, idB),
			[nameof(TppGameCore.TppSoldier2Parameter)] = (address, idA, idB) => new TppGameCore.TppSoldier2Parameter(address, idA, idB),
			[nameof(TppGameCore.TppSoldier2LocatorParameter)] = (address, idA, idB) => new TppGameCore.TppSoldier2LocatorParameter(address, idA, idB),
			[nameof(TppGameCore.TppHostage2Parameter)] = (address, idA, idB) => new TppGameCore.TppHostage2Parameter(address, idA, idB),
			[nameof(TppGameCore.TppHostage2LocatorParameter)] = (address, idA, idB) => new TppGameCore.TppHostage2LocatorParameter(address, idA, idB),
			[nameof(TppGameCore.TppVehicle2Parameter)] = (address, idA, idB) => new TppGameCore.TppVehicle2Parameter(address, idA, idB),
			[nameof(TppGameCore.TppVehicle2LocatorParameter)] = (address, idA, idB) => new TppGameCore.TppVehicle2LocatorParameter(address, idA, idB),
			[nameof(TppGameCore.TppVehicle2BodyData)] = (address, idA, idB) => new TppGameCore.TppVehicle2BodyData(address, idA, idB),
			[nameof(TppGameCore.TppVehicle2AttachmentData)] = (address, idA, idB) => new TppGameCore.TppVehicle2AttachmentData(address, idA, idB),
			[nameof(TppGameCore.TppVehicle2WeaponParameter)] = (address, idA, idB) => new TppGameCore.TppVehicle2WeaponParameter(address, idA, idB),
			[nameof(TppGameCore.TppVehicle2ReliefData)] = (address, idA, idB) => new TppGameCore.TppVehicle2ReliefData(address, idA, idB),
			[nameof(TppGameCore.TppHeli2Parameter)] = (address, idA, idB) => new TppGameCore.TppHeli2Parameter(address, idA, idB),
			[nameof(TppGameCore.TppHeli2LocatorParameter)] = (address, idA, idB) => new TppGameCore.TppHeli2LocatorParameter(address, idA, idB),
			[nameof(TppGameCore.TppLandingZoneData)] = (address, idA, idB) => new TppGameCore.TppLandingZoneData(address, idA, idB),
			[nameof(TppGameCore.TppLandingZoneDataBody)] = (address, idA, idB) => new TppGameCore.TppLandingZoneDataBody(address, idA, idB),
			[nameof(TppGameCore.TppBuddy2BlockControllerData)] = (address, idA, idB) => new TppGameCore.TppBuddy2BlockControllerData(address, idA, idB),
			[nameof(TppGameCore.TppBuddyQuiet2Parameter)] = (address, idA, idB) => new TppGameCore.TppBuddyQuiet2Parameter(address, idA, idB),
			[nameof(TppGameCore.TppBuddyQuiet2LocatorParameter)] = (address, idA, idB) => new TppGameCore.TppBuddyQuiet2LocatorParameter(address, idA, idB),
			[nameof(TppGameCore.TppSnipePoint2Data)] = (address, idA, idB) => new TppGameCore.TppSnipePoint2Data(address, idA, idB),
			[nameof(TppGameCore.TppSnipePoint2DataBody)] = (address, idA, idB) => new TppGameCore.TppSnipePoint2DataBody(address, idA, idB),
			[nameof(TppGameCore.TppBossQuiet2Parameter)] = (address, idA, idB) => new TppGameCore.TppBossQuiet2Parameter(address, idA, idB),
			[nameof(TppGameCore.TppBossQuiet2LocatorParameter)] = (address, idA, idB) => new TppGameCore.TppBossQuiet2LocatorParameter(address, idA, idB),
			[nameof(TppGameCore.TppBuddyDog2Parameter)] = (address, idA, idB) => new TppGameCore.TppBuddyDog2Parameter(address, idA, idB),
			[nameof(TppGameCore.TppBuddyDog2LocatorParameter)] = (address, idA, idB) => new TppGameCore.TppBuddyDog2LocatorParameter(address, idA, idB),
			[nameof(TppGameCore.TppBuddyPuppyParameter)] = (address, idA, idB) => new TppGameCore.TppBuddyPuppyParameter(address, idA, idB),
			[nameof(TppGameCore.TppBuddyPuppyLocatorParameter)] = (address, idA, idB) => new TppGameCore.TppBuddyPuppyLocatorParameter(address, idA, idB),
			[nameof(TppGameCore.TppUavParameter)] = (address, idA, idB) => new TppGameCore.TppUavParameter(address, idA, idB),
			[nameof(TppGameCore.TppUavLocatorParameter)] = (address, idA, idB) => new TppGameCore.TppUavLocatorParameter(address, idA, idB),
			[nameof(TppGameCore.TppSahelan2Parameter)] = (address, idA, idB) => new TppGameCore.TppSahelan2Parameter(address, idA, idB),
			[nameof(TppGameCore.TppSahelan2LocatorParameter)] = (address, idA, idB) => new TppGameCore.TppSahelan2LocatorParameter(address, idA, idB),
			[nameof(TppGameCore.TppSearchMissilePointData)] = (address, idA, idB) => new TppGameCore.TppSearchMissilePointData(address, idA, idB),
			[nameof(TppGameCore.TppSearchMissilePointDataBody)] = (address, idA, idB) => new TppGameCore.TppSearchMissilePointDataBody(address, idA, idB),
			[nameof(TppGameCore.TppHidePointData)] = (address, idA, idB) => new TppGameCore.TppHidePointData(address, idA, idB),
			[nameof(TppGameCore.TppHidePointDataBody)] = (address, idA, idB) => new TppGameCore.TppHidePointDataBody(address, idA, idB),
			[nameof(TppGameCore.TppParasite2Parameter)] = (address, idA, idB) => new TppGameCore.TppParasite2Parameter(address, idA, idB),
			[nameof(TppGameCore.TppParasite2LocatorParameter)] = (address, idA, idB) => new TppGameCore.TppParasite2LocatorParameter(address, idA, idB),
			[nameof(TppGameCore.TppLiquid2Parameter)] = (address, idA, idB) => new TppGameCore.TppLiquid2Parameter(address, idA, idB),
			[nameof(TppGameCore.TppLiquid2LocatorParameter)] = (address, idA, idB) => new TppGameCore.TppLiquid2LocatorParameter(address, idA, idB),
			[nameof(TppGameCore.TppVolgin2Parameter)] = (address, idA, idB) => new TppGameCore.TppVolgin2Parameter(address, idA, idB),
			[nameof(TppGameCore.TppVolgin2LocatorParameter)] = (address, idA, idB) => new TppGameCore.TppVolgin2LocatorParameter(address, idA, idB),
			[nameof(TppGameCore.TppSecurityCamera2Parameter)] = (address, idA, idB) => new TppGameCore.TppSecurityCamera2Parameter(address, idA, idB),
			[nameof(TppGameCore.TppSecurityCamera2LocatorParameter)] = (address, idA, idB) => new TppGameCore.TppSecurityCamera2LocatorParameter(address, idA, idB),
			[nameof(TppGameCore.TppCorpseParameter)] = (address, idA, idB) => new TppGameCore.TppCorpseParameter(address, idA, idB),
			[nameof(TppGameCore.TppCorpseLocatorParameter)] = (address, idA, idB) => new TppGameCore.TppCorpseLocatorParameter(address, idA, idB),
			[nameof(TppGameCore.TppMbQuietParameter)] = (address, idA, idB) => new TppGameCore.TppMbQuietParameter(address, idA, idB),
			[nameof(TppGameCore.TppMbQuietLocatorParameter)] = (address, idA, idB) => new TppGameCore.TppMbQuietLocatorParameter(address, idA, idB),
			[nameof(TppGameCore.TppWalkerGear2Parameter)] = (address, idA, idB) => new TppGameCore.TppWalkerGear2Parameter(address, idA, idB),
			[nameof(TppGameCore.TppWalkerGear2LocatorParameter)] = (address, idA, idB) => new TppGameCore.TppWalkerGear2LocatorParameter(address, idA, idB),
			[nameof(TppGameCore.TppAnimalParameter)] = (address, idA, idB) => new TppGameCore.TppAnimalParameter(address, idA, idB),
			[nameof(TppGameCore.TppAnimalLocatorParameter)] = (address, idA, idB) => new TppGameCore.TppAnimalLocatorParameter(address, idA, idB),
			[nameof(TppGameCore.TppBirdParameter2)] = (address, idA, idB) => new TppGameCore.TppBirdParameter2(address, idA, idB),
			[nameof(TppGameCore.TppBirdLocatorParameter2)] = (address, idA, idB) => new TppGameCore.TppBirdLocatorParameter2(address, idA, idB),
			[nameof(TppGameCore.TppRat2Parameter)] = (address, idA, idB) => new TppGameCore.TppRat2Parameter(address, idA, idB),
			[nameof(TppGameCore.TppRat2LocatorParameter)] = (address, idA, idB) => new TppGameCore.TppRat2LocatorParameter(address, idA, idB),
			[nameof(TppGameCore.TppWolfParameter)] = (address, idA, idB) => new TppGameCore.TppWolfParameter(address, idA, idB),
			[nameof(TppGameCore.TppWolfLocatorParameter)] = (address, idA, idB) => new TppGameCore.TppWolfLocatorParameter(address, idA, idB),
			[nameof(TppGameCore.TppBearParameter)] = (address, idA, idB) => new TppGameCore.TppBearParameter(address, idA, idB),
			[nameof(TppGameCore.TppBearLocatorParameter)] = (address, idA, idB) => new TppGameCore.TppBearLocatorParameter(address, idA, idB),
			[nameof(TppGameCore.TppHorse2forVrParameter)] = (address, idA, idB) => new TppGameCore.TppHorse2forVrParameter(address, idA, idB),
			[nameof(TppGameCore.TppHorse2forVrLocatorParameter)] = (address, idA, idB) => new TppGameCore.TppHorse2forVrLocatorParameter(address, idA, idB),
			[nameof(TppGameCore.TppVolgin2forVrParameter)] = (address, idA, idB) => new TppGameCore.TppVolgin2forVrParameter(address, idA, idB),
			[nameof(TppGameCore.TppVolgin2forVrLocatorParameter)] = (address, idA, idB) => new TppGameCore.TppVolgin2forVrLocatorParameter(address, idA, idB),
			[nameof(TppCollectible.TppPickableLocatorParameter)] = (address, idA, idB) => new TppCollectible.TppPickableLocatorParameter(address, idA, idB),
			[nameof(TppCollectible.TppCollectionLocatorArray)] = (address, idA, idB) => new TppCollectible.TppCollectionLocatorArray(address, idA, idB),
			[nameof(TppCollectible.TppPlacedLocatorParameter)] = (address, idA, idB) => new TppCollectible.TppPlacedLocatorParameter(address, idA, idB),
			[nameof(TppGameCore.TppDecoyAssetsLoader)] = (address, idA, idB) => new TppGameCore.TppDecoyAssetsLoader(address, idA, idB),
			[nameof(TppGameCore.TppNoiseArea2)] = (address, idA, idB) => new TppGameCore.TppNoiseArea2(address, idA, idB),
			[nameof(TppGameCore.TppNoiseAreaBody2)] = (address, idA, idB) => new TppGameCore.TppNoiseAreaBody2(address, idA, idB),
			[nameof(EdDemo.ChildrenIdConvertParameter)] = (address, idA, idB) => new EdDemo.ChildrenIdConvertParameter(address, idA, idB),
			[nameof(EdDemo.AvatarPhotoTextureLoadParameter)] = (address, idA, idB) => new EdDemo.AvatarPhotoTextureLoadParameter(address, idA, idB),
			[nameof(TppGameCore.AvatarEditorSetupData)] = (address, idA, idB) => new TppGameCore.AvatarEditorSetupData(address, idA, idB),
			[nameof(TppGameCore.TppSimpleMissionData)] = (address, idA, idB) => new TppGameCore.TppSimpleMissionData(address, idA, idB),
			[nameof(TppGameCore.TppSimpleMissionBlockControllerData)] = (address, idA, idB) => new TppGameCore.TppSimpleMissionBlockControllerData(address, idA, idB),
			[nameof(TppGameCore.TppSimpleMissionBlockControllerDataBody)] = (address, idA, idB) => new TppGameCore.TppSimpleMissionBlockControllerDataBody(address, idA, idB),
			[nameof(TppGameCore.TppSimpleGameSequenceSystem)] = (address, idA, idB) => new TppGameCore.TppSimpleGameSequenceSystem(address, idA, idB),
			[nameof(TppMarkerLocator.TppMarker2LocatorSystemParameter)] = (address, idA, idB) => new TppMarkerLocator.TppMarker2LocatorSystemParameter(address, idA, idB),
			[nameof(TppMarkerLocator.TppMarker2LocatorParameter)] = (address, idA, idB) => new TppMarkerLocator.TppMarker2LocatorParameter(address, idA, idB),
			[nameof(TppRadio.RadioDaemon)] = (address, idA, idB) => new TppRadio.RadioDaemon(address, idA, idB),
			[nameof(TppRadio.RadioData)] = (address, idA, idB) => new TppRadio.RadioData(address, idA, idB),
			[nameof(TppRadio.RadioDataBody)] = (address, idA, idB) => new TppRadio.RadioDataBody(address, idA, idB),
			[nameof(TppRadio.TppEspionageRadioSystemParameter)] = (address, idA, idB) => new TppRadio.TppEspionageRadioSystemParameter(address, idA, idB),
			[nameof(TppRadio.TppEspionageRadioLocatorParameter)] = (address, idA, idB) => new TppRadio.TppEspionageRadioLocatorParameter(address, idA, idB),
			[nameof(TppGameCore.TppTrapExecLostHostageCallbackDataElement)] = (address, idA, idB) => new TppGameCore.TppTrapExecLostHostageCallbackDataElement(address, idA, idB),
			[nameof(TppGameCore.TppTrapExecCombatLocatorCallbackDataElement)] = (address, idA, idB) => new TppGameCore.TppTrapExecCombatLocatorCallbackDataElement(address, idA, idB),
			[nameof(TppGameCore.TppSpeechFile)] = (address, idA, idB) => new TppGameCore.TppSpeechFile(address, idA, idB),
			[nameof(TppGameCore.TppSpeechData)] = (address, idA, idB) => new TppGameCore.TppSpeechData(address, idA, idB),
			[nameof(TppMotherBaseStage.TppMotherBaseStageBlockControllerData)] = (address, idA, idB) => new TppMotherBaseStage.TppMotherBaseStageBlockControllerData(address, idA, idB),
			[nameof(TppMotherBaseStage.TppMotherBaseStageBlockControllerDataBody)] = (address, idA, idB) => new TppMotherBaseStage.TppMotherBaseStageBlockControllerDataBody(address, idA, idB),
			[nameof(TppMotherBaseStage.TppMotherBaseStageClusterParameterData)] = (address, idA, idB) => new TppMotherBaseStage.TppMotherBaseStageClusterParameterData(address, idA, idB),
			[nameof(TppMotherBaseStage.TppMotherBaseStageClusterParameterDataBody)] = (address, idA, idB) => new TppMotherBaseStage.TppMotherBaseStageClusterParameterDataBody(address, idA, idB),
			[nameof(TppMotherBaseStage.MotherBaseStageSetupFile)] = (address, idA, idB) => new TppMotherBaseStage.MotherBaseStageSetupFile(address, idA, idB),
			[nameof(TppGameCore.TppMotherBaseContainerParameter)] = (address, idA, idB) => new TppGameCore.TppMotherBaseContainerParameter(address, idA, idB),
			[nameof(TppGameCore.TppMotherBaseContainerLocatorParameter)] = (address, idA, idB) => new TppGameCore.TppMotherBaseContainerLocatorParameter(address, idA, idB),
			
        };

        public Entity Create(string className, ulong address, ushort version, ushort idA, ushort idB)
        {
            if (!this.Constructors.ContainsKey(className))
            {
                throw new System.ArgumentException($"Unrecognized class name: {className}");
            }

            return this.Constructors[className](address, idA, idB);
        }
    }
}