//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
namespace Fox.EdDemo
{
    public partial class TppDemoPlayerResourceParameter : Fox.Demo.DemoParameter 
    {
        // Properties
        public String playerInstanceName { get; set; }
        
        public String partsFile { get; set; }
        
        public String handFv2File { get; set; }
        
        public String headFv2File { get; set; }
        
        public String camoFv2File { get; set; }
        
        public bool needReload { get; set; }
        
        // PropertyInfo
        private static EntityInfo classInfo;
        public static new EntityInfo ClassInfo
        {
            get
            {
                return classInfo;
            }
        }
        public override EntityInfo GetClassEntityInfo()
        {
            return classInfo;
        }
        static TppDemoPlayerResourceParameter()
        {
            classInfo = new EntityInfo(new String("TppDemoPlayerResourceParameter"), base.GetClassEntityInfo(), 0, null, 0);
			
			classInfo.StaticProperties.Insert(new String("playerInstanceName"), new PropertyInfo(PropertyInfo.PropertyType.String, 64, 1, PropertyInfo.ContainerType.StaticArray, PropertyInfo.PropertyExport.EditorAndGame, PropertyInfo.PropertyExport.EditorAndGame, null, null, PropertyInfo.PropertyStorage.Instance));
			classInfo.StaticProperties.Insert(new String("partsFile"), new PropertyInfo(PropertyInfo.PropertyType.String, 72, 1, PropertyInfo.ContainerType.StaticArray, PropertyInfo.PropertyExport.EditorAndGame, PropertyInfo.PropertyExport.EditorAndGame, null, null, PropertyInfo.PropertyStorage.Instance));
			classInfo.StaticProperties.Insert(new String("handFv2File"), new PropertyInfo(PropertyInfo.PropertyType.String, 80, 1, PropertyInfo.ContainerType.StaticArray, PropertyInfo.PropertyExport.EditorAndGame, PropertyInfo.PropertyExport.EditorAndGame, null, null, PropertyInfo.PropertyStorage.Instance));
			classInfo.StaticProperties.Insert(new String("headFv2File"), new PropertyInfo(PropertyInfo.PropertyType.String, 88, 1, PropertyInfo.ContainerType.StaticArray, PropertyInfo.PropertyExport.EditorAndGame, PropertyInfo.PropertyExport.EditorAndGame, null, null, PropertyInfo.PropertyStorage.Instance));
			classInfo.StaticProperties.Insert(new String("camoFv2File"), new PropertyInfo(PropertyInfo.PropertyType.String, 96, 1, PropertyInfo.ContainerType.StaticArray, PropertyInfo.PropertyExport.EditorAndGame, PropertyInfo.PropertyExport.EditorAndGame, null, null, PropertyInfo.PropertyStorage.Instance));
			classInfo.StaticProperties.Insert(new String("needReload"), new PropertyInfo(PropertyInfo.PropertyType.Bool, 112, 1, PropertyInfo.ContainerType.StaticArray, PropertyInfo.PropertyExport.EditorAndGame, PropertyInfo.PropertyExport.EditorAndGame, null, null, PropertyInfo.PropertyStorage.Instance));
        }

        // Constructor
		public TppDemoPlayerResourceParameter(ulong address, ushort idA, ushort idB) : base(address, idA, idB) { }
        
        public override void SetProperty(String propertyName, Value value)
        {
            switch(propertyName.CString())
            {
                case "playerInstanceName":
                    this.playerInstanceName = value.GetValueAsString();
                    return;
                case "partsFile":
                    this.partsFile = value.GetValueAsString();
                    return;
                case "handFv2File":
                    this.handFv2File = value.GetValueAsString();
                    return;
                case "headFv2File":
                    this.headFv2File = value.GetValueAsString();
                    return;
                case "camoFv2File":
                    this.camoFv2File = value.GetValueAsString();
                    return;
                case "needReload":
                    this.needReload = value.GetValueAsBool();
                    return;
                default:
				    
                    base.SetProperty(propertyName, value);
                    return;
            }
        }
        
        public override void SetPropertyElement(String propertyName, ushort index, Value value)
        {
            switch(propertyName.CString())
            {
                default:
					
                    base.SetPropertyElement(propertyName, index, value);
                    return;
            }
        }
        
        public override void SetPropertyElement(String propertyName, String key, Value value)
        {
            switch(propertyName.CString())
            {
                default:
					
                    base.SetPropertyElement(propertyName, key, value);
                    return;
            }
        }
    }
}