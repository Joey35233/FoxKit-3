//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
namespace Fox.GameKit
{
    public partial class CheckpointContainer : Fox.Core.Entity 
    {
        // Properties
        public StringMap<EntityPtr<FoxGameKit.CheckpointUnit>> checkPointUnits { get; } = new StringMap<EntityPtr<FoxGameKit.CheckpointUnit>>();
        
        public System.Collections.Generic.IList<String> passedCheckpoints { get; } = new System.Collections.Generic.List<String>();
        
        public String latestCheckpointTag { get; set; }
        
        // PropertyInfo
        private static EntityInfo classInfo;
        public static new EntityInfo ClassInfo
        {
            get
            {
                return classInfo;
            }
        }
        public override EntityInfo GetClassEntityInfo()
        {
            return classInfo;
        }
        static CheckpointContainer()
        {
            classInfo = new EntityInfo(new String("CheckpointContainer"), base.GetClassEntityInfo(), 0, "GameKit", 0);
			
			classInfo.StaticProperties.Insert(new String("checkPointUnits"), new PropertyInfo(PropertyInfo.PropertyType.EntityPtr, 48, 1, PropertyInfo.ContainerType.StringMap, PropertyInfo.PropertyExport.Never, PropertyInfo.PropertyExport.Never, typeof(FoxGameKit.CheckpointUnit), null, PropertyInfo.PropertyStorage.Instance));
			classInfo.StaticProperties.Insert(new String("passedCheckpoints"), new PropertyInfo(PropertyInfo.PropertyType.String, 96, 1, PropertyInfo.ContainerType.DynamicArray, PropertyInfo.PropertyExport.Never, PropertyInfo.PropertyExport.Never, null, null, PropertyInfo.PropertyStorage.Instance));
			classInfo.StaticProperties.Insert(new String("latestCheckpointTag"), new PropertyInfo(PropertyInfo.PropertyType.String, 112, 1, PropertyInfo.ContainerType.StaticArray, PropertyInfo.PropertyExport.Never, PropertyInfo.PropertyExport.Never, null, null, PropertyInfo.PropertyStorage.Instance));
        }

        // Constructor
		public CheckpointContainer(ulong address, ushort idA, ushort idB) : base(address, idA, idB) { }
        
        public override void SetProperty(String propertyName, Value value)
        {
            switch(propertyName.CString())
            {
                case "latestCheckpointTag":
                    this.latestCheckpointTag = value.GetValueAsString();
                    return;
                default:
				    
                    base.SetProperty(propertyName, value);
                    return;
            }
        }
        
        public override void SetPropertyElement(String propertyName, ushort index, Value value)
        {
            switch(propertyName.CString())
            {
                case "passedCheckpoints":
                    while(this.passedCheckpoints.Count <= index) { this.passedCheckpoints.Add(default(String)); }
                    this.passedCheckpoints[index] = value.GetValueAsString();
                    return;
                default:
					
                    base.SetPropertyElement(propertyName, index, value);
                    return;
            }
        }
        
        public override void SetPropertyElement(String propertyName, String key, Value value)
        {
            switch(propertyName.CString())
            {
                case "checkPointUnits":
                    this.checkPointUnits.Add(key, EntityPtr<FoxGameKit.CheckpointUnit>.Get(value.GetValueAsEntityPtr().Entity as FoxGameKit.CheckpointUnit));
                    return;
                default:
					
                    base.SetPropertyElement(propertyName, key, value);
                    return;
            }
        }
    }
}