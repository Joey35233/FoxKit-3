//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
namespace Fox.Graphx
{
    public partial class GraphxSpatialGraphData : Fox.Core.TransformData 
    {
        // Properties
        public System.Collections.Generic.IList<EntityPtr<Graphx.GraphxSpatialGraphDataNode>> nodes { get; } = new System.Collections.Generic.List<EntityPtr<Graphx.GraphxSpatialGraphDataNode>>();
        
        public System.Collections.Generic.IList<EntityPtr<Graphx.GraphxSpatialGraphDataEdge>> edges { get; } = new System.Collections.Generic.List<EntityPtr<Graphx.GraphxSpatialGraphDataEdge>>();
        
        // PropertyInfo
        private static EntityInfo classInfo;
        public static new EntityInfo ClassInfo
        {
            get
            {
                return classInfo;
            }
        }
        public override EntityInfo GetClassEntityInfo()
        {
            return classInfo;
        }
        static GraphxSpatialGraphData()
        {
            classInfo = new EntityInfo(new String("GraphxSpatialGraphData"), base.GetClassEntityInfo(), 0, "Graphx", 0);
			
			classInfo.StaticProperties.Insert(new String("nodes"), new PropertyInfo(PropertyInfo.PropertyType.EntityPtr, 304, 1, PropertyInfo.ContainerType.DynamicArray, PropertyInfo.PropertyExport.EditorAndGame, PropertyInfo.PropertyExport.EditorOnly, typeof(Graphx.GraphxSpatialGraphDataNode), null, PropertyInfo.PropertyStorage.Instance));
			classInfo.StaticProperties.Insert(new String("edges"), new PropertyInfo(PropertyInfo.PropertyType.EntityPtr, 320, 1, PropertyInfo.ContainerType.DynamicArray, PropertyInfo.PropertyExport.EditorAndGame, PropertyInfo.PropertyExport.EditorOnly, typeof(Graphx.GraphxSpatialGraphDataEdge), null, PropertyInfo.PropertyStorage.Instance));
        }

        // Constructor
		public GraphxSpatialGraphData(ulong address, ushort idA, ushort idB) : base(address, idA, idB) { }
        
        public override void SetProperty(String propertyName, Value value)
        {
            switch(propertyName.CString())
            {
                default:
				    
                    base.SetProperty(propertyName, value);
                    return;
            }
        }
        
        public override void SetPropertyElement(String propertyName, ushort index, Value value)
        {
            switch(propertyName.CString())
            {
                case "nodes":
                    while(this.nodes.Count <= index) { this.nodes.Add(default(EntityPtr<Graphx.GraphxSpatialGraphDataNode>)); }
                    this.nodes[index] = EntityPtr<Graphx.GraphxSpatialGraphDataNode>.Get(value.GetValueAsEntityPtr().Entity as Graphx.GraphxSpatialGraphDataNode);
                    return;
                case "edges":
                    while(this.edges.Count <= index) { this.edges.Add(default(EntityPtr<Graphx.GraphxSpatialGraphDataEdge>)); }
                    this.edges[index] = EntityPtr<Graphx.GraphxSpatialGraphDataEdge>.Get(value.GetValueAsEntityPtr().Entity as Graphx.GraphxSpatialGraphDataEdge);
                    return;
                default:
					
                    base.SetPropertyElement(propertyName, index, value);
                    return;
            }
        }
        
        public override void SetPropertyElement(String propertyName, String key, Value value)
        {
            switch(propertyName.CString())
            {
                default:
					
                    base.SetPropertyElement(propertyName, key, value);
                    return;
            }
        }
    }
}