//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
namespace Fox.Grx
{
    public partial class GrxAreaSSAOParameters : Fox.Core.Entity 
    {
        // Properties
        public GrxAreaSSAOParameters_Resolution resolution { get; set; }
        
        public float radius { get; set; }
        
        public float angleBias { get; set; }
        
        public uint numSteps { get; set; }
        
        public uint numDirections { get; set; }
        
        public float attenuation { get; set; }
        
        public float contrast { get; set; }
        
        public GrxAreaSSAOParameters_BlurMode blurMode { get; set; }
        
        public float blurRadius { get; set; }
        
        public float blurSharpness { get; set; }
        
        public float blurSceneScale { get; set; }
        
        // PropertyInfo
        private static EntityInfo classInfo;
        public static new EntityInfo ClassInfo
        {
            get
            {
                return classInfo;
            }
        }
        public override EntityInfo GetClassEntityInfo()
        {
            return classInfo;
        }
        static GrxAreaSSAOParameters()
        {
            classInfo = new EntityInfo(new String("GrxAreaSSAOParameters"), base.GetClassEntityInfo(), 68, null, 0);
			
			classInfo.StaticProperties.Insert(new String("resolution"), new PropertyInfo(PropertyInfo.PropertyType.Int32, 48, 1, PropertyInfo.ContainerType.StaticArray, PropertyInfo.PropertyExport.EditorAndGame, PropertyInfo.PropertyExport.EditorAndGame, null, typeof(GrxAreaSSAOParameters_Resolution), PropertyInfo.PropertyStorage.Instance));
			classInfo.StaticProperties.Insert(new String("radius"), new PropertyInfo(PropertyInfo.PropertyType.Float, 52, 1, PropertyInfo.ContainerType.StaticArray, PropertyInfo.PropertyExport.EditorAndGame, PropertyInfo.PropertyExport.EditorAndGame, null, null, PropertyInfo.PropertyStorage.Instance));
			classInfo.StaticProperties.Insert(new String("angleBias"), new PropertyInfo(PropertyInfo.PropertyType.Float, 56, 1, PropertyInfo.ContainerType.StaticArray, PropertyInfo.PropertyExport.EditorAndGame, PropertyInfo.PropertyExport.EditorAndGame, null, null, PropertyInfo.PropertyStorage.Instance));
			classInfo.StaticProperties.Insert(new String("numSteps"), new PropertyInfo(PropertyInfo.PropertyType.UInt32, 60, 1, PropertyInfo.ContainerType.StaticArray, PropertyInfo.PropertyExport.EditorAndGame, PropertyInfo.PropertyExport.EditorAndGame, null, null, PropertyInfo.PropertyStorage.Instance));
			classInfo.StaticProperties.Insert(new String("numDirections"), new PropertyInfo(PropertyInfo.PropertyType.UInt32, 64, 1, PropertyInfo.ContainerType.StaticArray, PropertyInfo.PropertyExport.EditorAndGame, PropertyInfo.PropertyExport.EditorAndGame, null, null, PropertyInfo.PropertyStorage.Instance));
			classInfo.StaticProperties.Insert(new String("attenuation"), new PropertyInfo(PropertyInfo.PropertyType.Float, 68, 1, PropertyInfo.ContainerType.StaticArray, PropertyInfo.PropertyExport.EditorAndGame, PropertyInfo.PropertyExport.EditorAndGame, null, null, PropertyInfo.PropertyStorage.Instance));
			classInfo.StaticProperties.Insert(new String("contrast"), new PropertyInfo(PropertyInfo.PropertyType.Float, 72, 1, PropertyInfo.ContainerType.StaticArray, PropertyInfo.PropertyExport.EditorAndGame, PropertyInfo.PropertyExport.EditorAndGame, null, null, PropertyInfo.PropertyStorage.Instance));
			classInfo.StaticProperties.Insert(new String("blurMode"), new PropertyInfo(PropertyInfo.PropertyType.Int32, 76, 1, PropertyInfo.ContainerType.StaticArray, PropertyInfo.PropertyExport.EditorAndGame, PropertyInfo.PropertyExport.EditorAndGame, null, typeof(GrxAreaSSAOParameters_BlurMode), PropertyInfo.PropertyStorage.Instance));
			classInfo.StaticProperties.Insert(new String("blurRadius"), new PropertyInfo(PropertyInfo.PropertyType.Float, 80, 1, PropertyInfo.ContainerType.StaticArray, PropertyInfo.PropertyExport.EditorAndGame, PropertyInfo.PropertyExport.EditorAndGame, null, null, PropertyInfo.PropertyStorage.Instance));
			classInfo.StaticProperties.Insert(new String("blurSharpness"), new PropertyInfo(PropertyInfo.PropertyType.Float, 84, 1, PropertyInfo.ContainerType.StaticArray, PropertyInfo.PropertyExport.EditorAndGame, PropertyInfo.PropertyExport.EditorAndGame, null, null, PropertyInfo.PropertyStorage.Instance));
			classInfo.StaticProperties.Insert(new String("blurSceneScale"), new PropertyInfo(PropertyInfo.PropertyType.Float, 88, 1, PropertyInfo.ContainerType.StaticArray, PropertyInfo.PropertyExport.EditorAndGame, PropertyInfo.PropertyExport.EditorAndGame, null, null, PropertyInfo.PropertyStorage.Instance));
        }

        // Constructor
		public GrxAreaSSAOParameters(ulong address, ushort idA, ushort idB) : base(address, idA, idB) { }
        
        public override void SetProperty(String propertyName, Value value)
        {
            switch(propertyName.CString())
            {
                case "resolution":
                    this.resolution = (GrxAreaSSAOParameters_Resolution)value.GetValueAsInt32();
                    return;
                case "radius":
                    this.radius = value.GetValueAsFloat();
                    return;
                case "angleBias":
                    this.angleBias = value.GetValueAsFloat();
                    return;
                case "numSteps":
                    this.numSteps = value.GetValueAsUInt32();
                    return;
                case "numDirections":
                    this.numDirections = value.GetValueAsUInt32();
                    return;
                case "attenuation":
                    this.attenuation = value.GetValueAsFloat();
                    return;
                case "contrast":
                    this.contrast = value.GetValueAsFloat();
                    return;
                case "blurMode":
                    this.blurMode = (GrxAreaSSAOParameters_BlurMode)value.GetValueAsInt32();
                    return;
                case "blurRadius":
                    this.blurRadius = value.GetValueAsFloat();
                    return;
                case "blurSharpness":
                    this.blurSharpness = value.GetValueAsFloat();
                    return;
                case "blurSceneScale":
                    this.blurSceneScale = value.GetValueAsFloat();
                    return;
                default:
				    
                    base.SetProperty(propertyName, value);
                    return;
            }
        }
        
        public override void SetPropertyElement(String propertyName, ushort index, Value value)
        {
            switch(propertyName.CString())
            {
                default:
					
                    base.SetPropertyElement(propertyName, index, value);
                    return;
            }
        }
        
        public override void SetPropertyElement(String propertyName, String key, Value value)
        {
            switch(propertyName.CString())
            {
                default:
					
                    base.SetPropertyElement(propertyName, key, value);
                    return;
            }
        }
    }
}