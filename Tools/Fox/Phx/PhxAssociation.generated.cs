//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
namespace Fox.Phx
{
    public partial class PhxAssociation : Fox.Core.Data 
    {
        // Properties
        public EntityLink physicsData { get; set; }
        
        public StringMap<EntityPtr<Phx.PhxAssociationUnitElement>> connections { get; } = new StringMap<EntityPtr<Phx.PhxAssociationUnitElement>>();
        
        public EntityPtr<Phx.PhAssociationParam> param { get; set; }
        
        public uint connectType { get; set; }
        
        // PropertyInfo
        private static EntityInfo classInfo;
        public static new EntityInfo ClassInfo
        {
            get
            {
                return classInfo;
            }
        }
        public override EntityInfo GetClassEntityInfo()
        {
            return classInfo;
        }
        static PhxAssociation()
        {
            classInfo = new EntityInfo(new String("PhxAssociation"), base.GetClassEntityInfo(), 152, "Phx", 1);
			
			classInfo.StaticProperties.Insert(new String("physicsData"), new PropertyInfo(PropertyInfo.PropertyType.EntityLink, 120, 1, PropertyInfo.ContainerType.StaticArray, PropertyInfo.PropertyExport.EditorAndGame, PropertyInfo.PropertyExport.EditorAndGame, null, null, PropertyInfo.PropertyStorage.Instance));
			classInfo.StaticProperties.Insert(new String("connections"), new PropertyInfo(PropertyInfo.PropertyType.EntityPtr, 160, 1, PropertyInfo.ContainerType.StringMap, PropertyInfo.PropertyExport.EditorAndGame, PropertyInfo.PropertyExport.EditorAndGame, typeof(Phx.PhxAssociationUnitElement), null, PropertyInfo.PropertyStorage.Instance));
			classInfo.StaticProperties.Insert(new String("param"), new PropertyInfo(PropertyInfo.PropertyType.EntityPtr, 208, 1, PropertyInfo.ContainerType.StaticArray, PropertyInfo.PropertyExport.Never, PropertyInfo.PropertyExport.Never, typeof(Phx.PhAssociationParam), null, PropertyInfo.PropertyStorage.Instance));
			classInfo.StaticProperties.Insert(new String("connectType"), new PropertyInfo(PropertyInfo.PropertyType.UInt32, 0, 1, PropertyInfo.ContainerType.StaticArray, PropertyInfo.PropertyExport.EditorAndGame, PropertyInfo.PropertyExport.EditorAndGame, null, null, PropertyInfo.PropertyStorage.Instance));
        }

        // Constructor
		public PhxAssociation(ulong address, ushort idA, ushort idB) : base(address, idA, idB) { }
        
        public override void SetProperty(String propertyName, Value value)
        {
            switch(propertyName.CString())
            {
                case "physicsData":
                    this.physicsData = value.GetValueAsEntityLink();
                    return;
                case "param":
                    this.param = EntityPtr<Phx.PhAssociationParam>.Get(value.GetValueAsEntityPtr().Entity as Phx.PhAssociationParam);
                    return;
                case "connectType":
                    this.connectType = value.GetValueAsUInt32();
                    return;
                default:
				    
                    base.SetProperty(propertyName, value);
                    return;
            }
        }
        
        public override void SetPropertyElement(String propertyName, ushort index, Value value)
        {
            switch(propertyName.CString())
            {
                default:
					
                    base.SetPropertyElement(propertyName, index, value);
                    return;
            }
        }
        
        public override void SetPropertyElement(String propertyName, String key, Value value)
        {
            switch(propertyName.CString())
            {
                case "connections":
                    this.connections.Add(key, EntityPtr<Phx.PhxAssociationUnitElement>.Get(value.GetValueAsEntityPtr().Entity as Phx.PhxAssociationUnitElement));
                    return;
                default:
					
                    base.SetPropertyElement(propertyName, key, value);
                    return;
            }
        }
    }
}