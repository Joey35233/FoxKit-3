//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
namespace Fox.Sim
{
    public partial class SimObject : Fox.Core.Data 
    {
        // Properties
        public EntityPtr<Sim.SimObjectParam> objectParam { get; set; }
        
        public EntityPtr<Sim.SimEngineParam> engineParam { get; set; }
        
        public System.Collections.Generic.IList<EntityPtr<Sim.SimControlElement>> controls { get; } = new System.Collections.Generic.List<EntityPtr<Sim.SimControlElement>>();
        
        // PropertyInfo
        private static EntityInfo classInfo;
        public static new EntityInfo ClassInfo
        {
            get
            {
                return classInfo;
            }
        }
        public override EntityInfo GetClassEntityInfo()
        {
            return classInfo;
        }
        static SimObject()
        {
            classInfo = new EntityInfo(new String("SimObject"), base.GetClassEntityInfo(), 0, "Sim", 1);
			
			classInfo.StaticProperties.Insert(new String("objectParam"), new PropertyInfo(PropertyInfo.PropertyType.EntityPtr, 120, 1, PropertyInfo.ContainerType.StaticArray, PropertyInfo.PropertyExport.Never, PropertyInfo.PropertyExport.Never, typeof(Sim.SimObjectParam), null, PropertyInfo.PropertyStorage.Instance));
			classInfo.StaticProperties.Insert(new String("engineParam"), new PropertyInfo(PropertyInfo.PropertyType.EntityPtr, 128, 1, PropertyInfo.ContainerType.StaticArray, PropertyInfo.PropertyExport.Never, PropertyInfo.PropertyExport.Never, typeof(Sim.SimEngineParam), null, PropertyInfo.PropertyStorage.Instance));
			classInfo.StaticProperties.Insert(new String("controls"), new PropertyInfo(PropertyInfo.PropertyType.EntityPtr, 136, 1, PropertyInfo.ContainerType.DynamicArray, PropertyInfo.PropertyExport.EditorAndGame, PropertyInfo.PropertyExport.EditorAndGame, typeof(Sim.SimControlElement), null, PropertyInfo.PropertyStorage.Instance));
        }

        // Constructor
		public SimObject(ulong address, ushort idA, ushort idB) : base(address, idA, idB) { }
        
        public override void SetProperty(String propertyName, Value value)
        {
            switch(propertyName.CString())
            {
                case "objectParam":
                    this.objectParam = EntityPtr<Sim.SimObjectParam>.Get(value.GetValueAsEntityPtr().Entity as Sim.SimObjectParam);
                    return;
                case "engineParam":
                    this.engineParam = EntityPtr<Sim.SimEngineParam>.Get(value.GetValueAsEntityPtr().Entity as Sim.SimEngineParam);
                    return;
                default:
				    
                    base.SetProperty(propertyName, value);
                    return;
            }
        }
        
        public override void SetPropertyElement(String propertyName, ushort index, Value value)
        {
            switch(propertyName.CString())
            {
                case "controls":
                    while(this.controls.Count <= index) { this.controls.Add(default(EntityPtr<Sim.SimControlElement>)); }
                    this.controls[index] = EntityPtr<Sim.SimControlElement>.Get(value.GetValueAsEntityPtr().Entity as Sim.SimControlElement);
                    return;
                default:
					
                    base.SetPropertyElement(propertyName, index, value);
                    return;
            }
        }
        
        public override void SetPropertyElement(String propertyName, String key, Value value)
        {
            switch(propertyName.CString())
            {
                default:
					
                    base.SetPropertyElement(propertyName, key, value);
                    return;
            }
        }
    }
}