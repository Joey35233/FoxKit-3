//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using CsSystem = System;
using Fox;

namespace {{ info.get_root_namespace() }}.{{ info.get_namespace_without_prefix() }}
{
	[UnityEditor.InitializeOnLoad]
	public partial class {{ info.name }} {% if info.parent %}: {{ info.get_parent_string() }}{% endif %}
	{
		{%- if not info.properties|length == 0 %}
		// Properties
		{%- for property_name in info.properties %}
		{%- if info.properties[property_name].is_accessor_property() %}
		{% if info.properties[property_name].has_public_get() %}public{% else %}protected{% endif %} {{ info.properties[property_name].get_property_full_type_string() }} {{ info.properties[property_name].get_safe_name() }} { get => Get_{{ property_name }}();{% if info.properties[property_name].has_public_set() and not info.properties[property_name].is_collection_property() %} set { Set_{{ property_name }}(value); }{%- endif %} }
		private partial {{ info.properties[property_name].get_property_full_type_string() }} Get_{{ property_name }}();
		{% if info.properties[property_name].has_public_set() and not info.properties[property_name].is_collection_property() %}private partial void Set_{{ property_name }}({{ info.properties[property_name].get_property_full_type_string() }} value);
		{% endif -%}
		{%- else %}
		[field: UnityEngine.SerializeField]
		{% if info.properties[property_name].is_blacklisted() -%}private {% elif info.properties[property_name].has_public_get() -%}public {% else -%}protected {% endif -%}{% if info.properties[property_name].is_hiding_existing() -%}new {% endif %}{{ info.properties[property_name].get_property_full_type_string() }} {{ info.properties[property_name].get_safe_name() }} { get; {% if info.properties[property_name].is_collection_property() and not info.properties[property_name].is_blacklisted() %}private {% else %}{% if not info.properties[property_name].has_public_set() and info.properties[property_name].has_public_get() %}{%if not info.properties[property_name].is_blacklisted() %}protected {% endif %}{% endif %}{% endif %}set; }{% if info.properties[property_name].has_default_value() %} = {{info.properties[property_name].get_default_value()}};{%- endif %}
		{% endif -%}
		{%- endfor -%}
		{%- endif %}
		// ClassInfos
		public static {% if not info.is_root() %}new{% endif %} bool ClassInfoInitialized = false;
		private static Fox.Core.EntityInfo classInfo;
		public static {% if not info.is_root() %}new{% endif %} Fox.Core.EntityInfo ClassInfo
		{
			get
			{
				return classInfo;
			}
		}
		public {% if info.is_root() %}virtual{% else %}override{% endif %} Fox.Core.EntityInfo GetClassEntityInfo()
		{
			return classInfo;
		}
		static {{ info.name }}()
		{
			{% if info.parent -%}if ({{ info.get_parent_string() }}.ClassInfoInitialized)
				{% else -%}{%- endif %}classInfo = new Fox.Core.EntityInfo("{{ info.name }}", typeof({{ info.name }}), {{ info.get_parent_entity_info_string() }}, {{ info.id }}, {{ info.get_category_string() }}, {{ info.version }});
			{%- for property_name in info.properties %}
			{{ info.properties[property_name].get_property_info_instantiation_string() }}
			{%- endfor %}

			ClassInfoInitialized = true;
		}
		
		public {% if info.is_root() %}virtual{% else %}override{% endif %} Fox.Core.Value GetProperty(string propertyName)
		{
			switch (propertyName)
			{
				{% for property_name in info.properties -%}
				case "{{ info.properties[property_name].get_safe_name() }}":
					return new Fox.Core.Value({%- if info.properties[property_name].container == "StringMap" -%}(Fox.IStringMap){%- endif -%}{{ info.properties[property_name].get_safe_name() }});
				{% endfor %}default:
					{%- if info.name == "Entity" %}
					if (this.DynamicProperties.TryGetValue(propertyName, out DynamicProperty property))
					{
						return property.GetValue();
					}
					{%- endif %}
					{% if info.is_root() %}throw new CsSystem.MissingMemberException("Unrecognized property", propertyName.ToString());{% else %}return base.GetProperty(propertyName);{%- endif %}
			}
		}

		public {% if info.is_root() %}virtual{% else %}override{% endif %} Fox.Core.Value GetPropertyElement(string propertyName, ushort index)
		{
			switch (propertyName)
			{
				{% for property_name in info.get_array_properties() -%}
				case "{{ info.properties[property_name].get_safe_name() }}":
					return new Fox.Core.Value(this.{{ info.properties[property_name].get_safe_name() }}[index]);
				{% endfor %}default:
					{%- if info.name == "Entity" %}
					if (this.DynamicProperties.TryGetValue(propertyName, out DynamicProperty property))
					{
						return property.GetElement(index);
					}
					{%- endif %}
					{% if info.is_root() %}throw new CsSystem.MissingMemberException("Unrecognized property", propertyName.ToString());{% else %}return base.GetPropertyElement(propertyName, index);{%- endif %}
			}
		}

		public {% if info.is_root() %}virtual{% else %}override{% endif %} Fox.Core.Value GetPropertyElement(string propertyName, string key)
		{
			switch (propertyName)
			{
				{% for property_name in info.get_string_map_properties() -%}
				case "{{ info.properties[property_name].get_safe_name() }}":
					return new Fox.Core.Value(this.{{ info.properties[property_name].get_safe_name() }}[key]);
				{% endfor %}default:
					{%- if info.name == "Entity" %}
					if (this.DynamicProperties.TryGetValue(propertyName, out DynamicProperty property))
					{
						return property.GetElement(key);
					}
					{%- endif %}
					{% if info.is_root() %}throw new CsSystem.MissingMemberException("Unrecognized property", propertyName.ToString());{% else %}return base.GetPropertyElement(propertyName, key);{%- endif %}
			}
		}

		public {% if info.is_root() %}virtual{% else %}override{% endif %} void SetProperty(string propertyName, Fox.Core.Value value)
		{
			switch (propertyName)
			{
				{% for property_name in info.get_non_collection_properties() -%}
				{%- if info.properties[property_name].has_public_set() or not info.properties[property_name].is_accessor_property() -%}
				case "{{ info.properties[property_name].get_safe_name() }}":
					this.{{ info.properties[property_name].get_safe_name() }} = {{ info.properties[property_name].get_value_extraction_string() }};
					return;
				{% endif -%}
				{%- endfor %}default:
					{%- if info.name == "Entity" %}
					if (this.DynamicProperties.TryGetValue(propertyName, out DynamicProperty property))
					{
						property.SetValue(value);
						return;
					}
					{%- endif %}
					{% if info.is_root() %}throw new CsSystem.MissingMemberException("Unrecognized property", propertyName.ToString());{% else %}base.SetProperty(propertyName, value);
					return;{%- endif %}
			}
		}

		public {% if info.is_root() %}virtual{% else %}override{% endif %} void SetPropertyElement(string propertyName, ushort index, Fox.Core.Value value)
		{
			switch (propertyName)
			{
				{% for property_name in info.get_array_properties() -%}
				case "{{ info.properties[property_name].get_safe_name() }}":
					{% if info.properties[property_name].container != "StaticArray" %}while(this.{{ info.properties[property_name].get_safe_name() }}.Count <= index) { this.{{ info.properties[property_name].get_safe_name() }}.Add(default({{ info.properties[property_name].get_value_type_string() }})); }{%- endif %}
					this.{{ info.properties[property_name].get_safe_name() }}[index] = {{ info.properties[property_name].get_value_extraction_string() }};
					return;
				{% endfor -%}
				default:
					{%- if info.name == "Entity" %}
					if (this.DynamicProperties.TryGetValue(propertyName, out DynamicProperty property))
					{
						property.SetElement(index, value);
						return;
					}
					{%- endif %}
					{% if info.is_root() %}throw new CsSystem.MissingMemberException("Unrecognized property", propertyName.ToString());{% else %}base.SetPropertyElement(propertyName, index, value);
					return;{%- endif %}
			}
		}

		public {% if info.is_root() %}virtual{% else %}override{% endif %} void SetPropertyElement(string propertyName, string key, Fox.Core.Value value)
		{
			switch (propertyName)
			{
				{% for property_name in info.get_string_map_properties() -%}
				case "{{ info.properties[property_name].get_safe_name() }}":
					if (this.{{ info.properties[property_name].get_safe_name() }}.ContainsKey(key))
						this.{{ info.properties[property_name].get_safe_name() }}[key] = {{ info.properties[property_name].get_value_extraction_string() }};
					else
						this.{{ info.properties[property_name].get_safe_name() }}.Insert(key, {{ info.properties[property_name].get_value_extraction_string() }});
					return;
				{% endfor %}default:
					{%- if info.name == "Entity" %}
					if (this.DynamicProperties.TryGetValue(propertyName, out DynamicProperty property))
					{
						property.SetElement(key, value);
						return;
					}
					{%- endif %}
					{% if info.is_root() %}throw new CsSystem.MissingMemberException("Unrecognized property", propertyName.ToString());{% else %}base.SetPropertyElement(propertyName, key, value);
					return;{%- endif %}
			}
		}
	}
}